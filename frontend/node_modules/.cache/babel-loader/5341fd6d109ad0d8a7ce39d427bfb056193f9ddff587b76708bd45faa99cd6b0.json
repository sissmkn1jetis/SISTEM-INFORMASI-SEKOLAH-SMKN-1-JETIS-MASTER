{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"container\\\">\\r\\n    <header class=\\\"jumbotron\\\">\\r\\n      <h3>{{ content }}</h3>\\r\\n    </header>\\r\\n  </div> \"), _hoisted_1], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAMEA,oBAA6B;EAAxBC,KAAK,EAAC;AAAW;;;6DALtBC,mJAIU,EACVC,UAA6B","names":["_createElementVNode","class","_createCommentVNode","_hoisted_1"],"sourceRoot":"","sources":["D:\\filee\\SISTEM-INFORMASI-SEKOLAH-SMKN-1-JETIS-MASTER\\frontend\\src\\components\\Guru.vue"],"sourcesContent":["<template>\r\n  <!-- <div class=\"container\">\r\n    <header class=\"jumbotron\">\r\n      <h3>{{ content }}</h3>\r\n    </header>\r\n  </div> -->\r\n  <div class=\"container\"></div>\r\n</template>\r\n\r\n<script>\r\nimport UserService from \"../services/user.service\";\r\nexport default {\r\n  name: \"Guru\",\r\n  data() {\r\n    return {\r\n      content: \"\",\r\n      form: {\r\n        id: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confPassword: \"\",\r\n        role: \"\",\r\n        tempat_lahir: \"\",\r\n        tanggal_lahir: \"\",\r\n        jenis_kelamin: \"\",\r\n        agama: \"\",\r\n        alamat: \"\",\r\n        almt_kel: \"\",\r\n        almt_kec: \"\",\r\n        almt_kab: \"\",\r\n        almt_prov: \"\",\r\n        no_telp: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n  },\r\n  mounted() {\r\n    UserService.getGuru().then(\r\n      (response) => {\r\n        this.content = response.data;\r\n      },\r\n      (error) => {\r\n        this.content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  },\r\n  getUserById(id) {\r\n    User.getUserById(id)\r\n      .then((response) => {\r\n        this.form = response.data;\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}