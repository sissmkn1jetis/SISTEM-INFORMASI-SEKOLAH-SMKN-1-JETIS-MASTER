{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n/*! DataTables 1.13.4\r\n * Â©2008-2023 SpryMedia Ltd - datatables.net/license\r\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nlet $ = jQuery;\nvar DataTable = function (selector, options) {\n  // Check if called with a window or jQuery object for DOM less applications\n  // This is for backwards compatibility\n  if (DataTable.factory(selector, options)) {\n    return DataTable;\n  }\n\n  // When creating with `new`, create a new DataTable, returning the API instance\n  if (this instanceof DataTable) {\n    return $(selector).DataTable(options);\n  } else {\n    // Argument switching\n    options = selector;\n  }\n\n  /**\r\n   * Perform a jQuery selector action on the table's TR elements (from the tbody) and\r\n   * return the resulting jQuery object.\r\n   *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n   *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n   *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\r\n   *    criterion (\"applied\") or all TR elements (i.e. no filter).\r\n   *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\r\n   *    Can be either 'current', whereby the current sorting of the table is used, or\r\n   *    'original' whereby the original order the data was read into the table is used.\r\n   *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n   *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n   *    'current' and filter is 'applied', regardless of what they might be given as.\r\n   *  @returns {object} jQuery object, filtered by the given selector.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Highlight every second row\r\n   *      oTable.$('tr:odd').css('backgroundColor', 'blue');\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Filter to rows with 'Webkit' in them, add a background colour and then\r\n   *      // remove the filter, thus highlighting the 'Webkit' rows only.\r\n   *      oTable.fnFilter('Webkit');\r\n   *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\r\n   *      oTable.fnFilter('');\r\n   *    } );\r\n   */\n  this.$ = function (sSelector, oOpts) {\n    return this.api(true).$(sSelector, oOpts);\n  };\n\n  /**\r\n   * Almost identical to $ in operation, but in this case returns the data for the matched\r\n   * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\r\n   * rather than any descendants, so the data can be obtained for the row/cell. If matching\r\n   * rows are found, the data returned is the original data array/object that was used to\r\n   * create the row (or a generated array if from a DOM source).\r\n   *\r\n   * This method is often useful in-combination with $ where both functions are given the\r\n   * same parameters and the array indexes will match identically.\r\n   *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n   *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n   *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\r\n   *    criterion (\"applied\") or all elements (i.e. no filter).\r\n   *  @param {string} [oOpts.order=current] Order of the data in the processed array.\r\n   *    Can be either 'current', whereby the current sorting of the table is used, or\r\n   *    'original' whereby the original order the data was read into the table is used.\r\n   *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n   *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n   *    'current' and filter is 'applied', regardless of what they might be given as.\r\n   *  @returns {array} Data for the matched elements. If any elements, as a result of the\r\n   *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\r\n   *    entry in the array.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Get the data from the first row in the table\r\n   *      var data = oTable._('tr:first');\r\n   *\r\n   *      // Do something useful with the data\r\n   *      alert( \"First cell is: \"+data[0] );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Filter to 'Webkit' and get all data for\r\n   *      oTable.fnFilter('Webkit');\r\n   *      var data = oTable._('tr', {\"search\": \"applied\"});\r\n   *\r\n   *      // Do something with the data\r\n   *      alert( data.length+\" rows matched the search\" );\r\n   *    } );\r\n   */\n  this._ = function (sSelector, oOpts) {\n    return this.api(true).rows(sSelector, oOpts).data();\n  };\n\n  /**\r\n   * Create a DataTables Api instance, with the currently selected tables for\r\n   * the Api's context.\r\n   * @param {boolean} [traditional=false] Set the API instance's context to be\r\n   *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\r\n   *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\r\n   *   or if all tables captured in the jQuery object should be used.\r\n   * @return {DataTables.Api}\r\n   */\n  this.api = function (traditional) {\n    return traditional ? new _Api(_fnSettingsFromNode(this[_ext.iApiIndex])) : new _Api(this);\n  };\n\n  /**\r\n   * Add a single new row or multiple rows of data to the table. Please note\r\n   * that this is suitable for client-side processing only - if you are using\r\n   * server-side processing (i.e. \"bServerSide\": true), then to add data, you\r\n   * must add it to the data source, i.e. the server-side, through an Ajax call.\r\n   *  @param {array|object} data The data to be added to the table. This can be:\r\n   *    <ul>\r\n   *      <li>1D array of data - add a single row with the data provided</li>\r\n   *      <li>2D array of arrays - add multiple rows in a single call</li>\r\n   *      <li>object - data object when using <i>mData</i></li>\r\n   *      <li>array of objects - multiple data objects when using <i>mData</i></li>\r\n   *    </ul>\r\n   *  @param {bool} [redraw=true] redraw the table or not\r\n   *  @returns {array} An array of integers, representing the list of indexes in\r\n   *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\r\n   *    the table.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    // Global var for counter\r\n   *    var giCount = 2;\r\n   *\r\n   *    $(document).ready(function() {\r\n   *      $('#example').dataTable();\r\n   *    } );\r\n   *\r\n   *    function fnClickAddRow() {\r\n   *      $('#example').dataTable().fnAddData( [\r\n   *        giCount+\".1\",\r\n   *        giCount+\".2\",\r\n   *        giCount+\".3\",\r\n   *        giCount+\".4\" ]\r\n   *      );\r\n   *\r\n   *      giCount++;\r\n   *    }\r\n   */\n  this.fnAddData = function (data, redraw) {\n    var api = this.api(true);\n\n    /* Check if we want to add multiple rows or not */\n    var rows = Array.isArray(data) && (Array.isArray(data[0]) || $.isPlainObject(data[0])) ? api.rows.add(data) : api.row.add(data);\n    if (redraw === undefined || redraw) {\n      api.draw();\n    }\n    return rows.flatten().toArray();\n  };\n\n  /**\r\n   * This function will make DataTables recalculate the column sizes, based on the data\r\n   * contained in the table and the sizes applied to the columns (in the DOM, CSS or\r\n   * through the sWidth parameter). This can be useful when the width of the table's\r\n   * parent element changes (for example a window resize).\r\n   *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable( {\r\n   *        \"sScrollY\": \"200px\",\r\n   *        \"bPaginate\": false\r\n   *      } );\r\n   *\r\n   *      $(window).on('resize', function () {\r\n   *        oTable.fnAdjustColumnSizing();\r\n   *      } );\r\n   *    } );\r\n   */\n  this.fnAdjustColumnSizing = function (bRedraw) {\n    var api = this.api(true).columns.adjust();\n    var settings = api.settings()[0];\n    var scroll = settings.oScroll;\n    if (bRedraw === undefined || bRedraw) {\n      api.draw(false);\n    } else if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n      /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n      _fnScrollDraw(settings);\n    }\n  };\n\n  /**\r\n   * Quickly and simply clear a table\r\n   *  @param {bool} [bRedraw=true] redraw the table or not\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\r\n   *      oTable.fnClearTable();\r\n   *    } );\r\n   */\n  this.fnClearTable = function (bRedraw) {\n    var api = this.api(true).clear();\n    if (bRedraw === undefined || bRedraw) {\n      api.draw();\n    }\n  };\n\n  /**\r\n   * The exact opposite of 'opening' a row, this function will close any rows which\r\n   * are currently 'open'.\r\n   *  @param {node} nTr the table row to 'close'\r\n   *  @returns {int} 0 on success, or 1 if failed (can't find the row)\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable;\r\n   *\r\n   *      // 'open' an information row when a row is clicked on\r\n   *      $('#example tbody tr').click( function () {\r\n   *        if ( oTable.fnIsOpen(this) ) {\r\n   *          oTable.fnClose( this );\r\n   *        } else {\r\n   *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n   *        }\r\n   *      } );\r\n   *\r\n   *      oTable = $('#example').dataTable();\r\n   *    } );\r\n   */\n  this.fnClose = function (nTr) {\n    this.api(true).row(nTr).child.hide();\n  };\n\n  /**\r\n   * Remove a row for the table\r\n   *  @param {mixed} target The index of the row from aoData to be deleted, or\r\n   *    the TR element you want to delete\r\n   *  @param {function|null} [callBack] Callback function\r\n   *  @param {bool} [redraw=true] Redraw the table or not\r\n   *  @returns {array} The row that was deleted\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Immediately remove the first row\r\n   *      oTable.fnDeleteRow( 0 );\r\n   *    } );\r\n   */\n  this.fnDeleteRow = function (target, callback, redraw) {\n    var api = this.api(true);\n    var rows = api.rows(target);\n    var settings = rows.settings()[0];\n    var data = settings.aoData[rows[0][0]];\n    rows.remove();\n    if (callback) {\n      callback.call(this, settings, data);\n    }\n    if (redraw === undefined || redraw) {\n      api.draw();\n    }\n    return data;\n  };\n\n  /**\r\n   * Restore the table to it's original state in the DOM by removing all of DataTables\r\n   * enhancements, alterations to the DOM structure of the table and event listeners.\r\n   *  @param {boolean} [remove=false] Completely remove the table from the DOM\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\r\n   *      var oTable = $('#example').dataTable();\r\n   *      oTable.fnDestroy();\r\n   *    } );\r\n   */\n  this.fnDestroy = function (remove) {\n    this.api(true).destroy(remove);\n  };\n\n  /**\r\n   * Redraw the table\r\n   *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\r\n   *      oTable.fnDraw();\r\n   *    } );\r\n   */\n  this.fnDraw = function (complete) {\n    // Note that this isn't an exact match to the old call to _fnDraw - it takes\n    // into account the new data, but can hold position.\n    this.api(true).draw(complete);\n  };\n\n  /**\r\n   * Filter the input based on data\r\n   *  @param {string} sInput String to filter the table on\r\n   *  @param {int|null} [iColumn] Column to limit filtering to\r\n   *  @param {bool} [bRegex=false] Treat as regular expression or not\r\n   *  @param {bool} [bSmart=true] Perform smart filtering or not\r\n   *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\r\n   *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Sometime later - filter...\r\n   *      oTable.fnFilter( 'test string' );\r\n   *    } );\r\n   */\n  this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n    var api = this.api(true);\n    if (iColumn === null || iColumn === undefined) {\n      api.search(sInput, bRegex, bSmart, bCaseInsensitive);\n    } else {\n      api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n    }\n    api.draw();\n  };\n\n  /**\r\n   * Get the data for the whole table, an individual row or an individual cell based on the\r\n   * provided parameters.\r\n   *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\r\n   *    a TR node then the data source for the whole row will be returned. If given as a\r\n   *    TD/TH cell node then iCol will be automatically calculated and the data for the\r\n   *    cell returned. If given as an integer, then this is treated as the aoData internal\r\n   *    data index for the row (see fnGetPosition) and the data for that row used.\r\n   *  @param {int} [col] Optional column index that you want the data of.\r\n   *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\r\n   *    returned. If mRow is defined, just data for that row, and is iCol is\r\n   *    defined, only data for the designated cell is returned.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    // Row data\r\n   *    $(document).ready(function() {\r\n   *      oTable = $('#example').dataTable();\r\n   *\r\n   *      oTable.$('tr').click( function () {\r\n   *        var data = oTable.fnGetData( this );\r\n   *        // ... do something with the array / object of data for the row\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Individual cell data\r\n   *    $(document).ready(function() {\r\n   *      oTable = $('#example').dataTable();\r\n   *\r\n   *      oTable.$('td').click( function () {\r\n   *        var sData = oTable.fnGetData( this );\r\n   *        alert( 'The cell clicked on had the value of '+sData );\r\n   *      } );\r\n   *    } );\r\n   */\n  this.fnGetData = function (src, col) {\n    var api = this.api(true);\n    if (src !== undefined) {\n      var type = src.nodeName ? src.nodeName.toLowerCase() : '';\n      return col !== undefined || type == 'td' || type == 'th' ? api.cell(src, col).data() : api.row(src).data() || null;\n    }\n    return api.data().toArray();\n  };\n\n  /**\r\n   * Get an array of the TR nodes that are used in the table's body. Note that you will\r\n   * typically want to use the '$' API method in preference to this as it is more\r\n   * flexible.\r\n   *  @param {int} [iRow] Optional row index for the TR element you want\r\n   *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\r\n   *    in the table's body, or iRow is defined, just the TR element requested.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Get the nodes from the table\r\n   *      var nNodes = oTable.fnGetNodes( );\r\n   *    } );\r\n   */\n  this.fnGetNodes = function (iRow) {\n    var api = this.api(true);\n    return iRow !== undefined ? api.row(iRow).node() : api.rows().nodes().flatten().toArray();\n  };\n\n  /**\r\n   * Get the array indexes of a particular cell from it's DOM element\r\n   * and column index including hidden columns\r\n   *  @param {node} node this can either be a TR, TD or TH in the table's body\r\n   *  @returns {int} If nNode is given as a TR, then a single index is returned, or\r\n   *    if given as a cell, an array of [row index, column index (visible),\r\n   *    column index (all)] is given.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      $('#example tbody td').click( function () {\r\n   *        // Get the position of the current data from the node\r\n   *        var aPos = oTable.fnGetPosition( this );\r\n   *\r\n   *        // Get the data array for this row\r\n   *        var aData = oTable.fnGetData( aPos[0] );\r\n   *\r\n   *        // Update the data array and return the value\r\n   *        aData[ aPos[1] ] = 'clicked';\r\n   *        this.innerHTML = 'clicked';\r\n   *      } );\r\n   *\r\n   *      // Init DataTables\r\n   *      oTable = $('#example').dataTable();\r\n   *    } );\r\n   */\n  this.fnGetPosition = function (node) {\n    var api = this.api(true);\n    var nodeName = node.nodeName.toUpperCase();\n    if (nodeName == 'TR') {\n      return api.row(node).index();\n    } else if (nodeName == 'TD' || nodeName == 'TH') {\n      var cell = api.cell(node).index();\n      return [cell.row, cell.columnVisible, cell.column];\n    }\n    return null;\n  };\n\n  /**\r\n   * Check to see if a row is 'open' or not.\r\n   *  @param {node} nTr the table row to check\r\n   *  @returns {boolean} true if the row is currently open, false otherwise\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable;\r\n   *\r\n   *      // 'open' an information row when a row is clicked on\r\n   *      $('#example tbody tr').click( function () {\r\n   *        if ( oTable.fnIsOpen(this) ) {\r\n   *          oTable.fnClose( this );\r\n   *        } else {\r\n   *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n   *        }\r\n   *      } );\r\n   *\r\n   *      oTable = $('#example').dataTable();\r\n   *    } );\r\n   */\n  this.fnIsOpen = function (nTr) {\n    return this.api(true).row(nTr).child.isShown();\n  };\n\n  /**\r\n   * This function will place a new row directly after a row which is currently\r\n   * on display on the page, with the HTML contents that is passed into the\r\n   * function. This can be used, for example, to ask for confirmation that a\r\n   * particular record should be deleted.\r\n   *  @param {node} nTr The table row to 'open'\r\n   *  @param {string|node|jQuery} mHtml The HTML to put into the row\r\n   *  @param {string} sClass Class to give the new TD cell\r\n   *  @returns {node} The row opened. Note that if the table row passed in as the\r\n   *    first parameter, is not found in the table, this method will silently\r\n   *    return.\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable;\r\n   *\r\n   *      // 'open' an information row when a row is clicked on\r\n   *      $('#example tbody tr').click( function () {\r\n   *        if ( oTable.fnIsOpen(this) ) {\r\n   *          oTable.fnClose( this );\r\n   *        } else {\r\n   *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n   *        }\r\n   *      } );\r\n   *\r\n   *      oTable = $('#example').dataTable();\r\n   *    } );\r\n   */\n  this.fnOpen = function (nTr, mHtml, sClass) {\n    return this.api(true).row(nTr).child(mHtml, sClass).show().child()[0];\n  };\n\n  /**\r\n   * Change the pagination - provides the internal logic for pagination in a simple API\r\n   * function. With this function you can have a DataTables table go to the next,\r\n   * previous, first or last pages.\r\n   *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\r\n   *    or page number to jump to (integer), note that page 0 is the first page.\r\n   *  @param {bool} [bRedraw=true] Redraw the table or not\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *      oTable.fnPageChange( 'next' );\r\n   *    } );\r\n   */\n  this.fnPageChange = function (mAction, bRedraw) {\n    var api = this.api(true).page(mAction);\n    if (bRedraw === undefined || bRedraw) {\n      api.draw(false);\n    }\n  };\n\n  /**\r\n   * Show a particular column\r\n   *  @param {int} iCol The column whose display should be changed\r\n   *  @param {bool} bShow Show (true) or hide (false) the column\r\n   *  @param {bool} [bRedraw=true] Redraw the table or not\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Hide the second column after initialisation\r\n   *      oTable.fnSetColumnVis( 1, false );\r\n   *    } );\r\n   */\n  this.fnSetColumnVis = function (iCol, bShow, bRedraw) {\n    var api = this.api(true).column(iCol).visible(bShow);\n    if (bRedraw === undefined || bRedraw) {\n      api.columns.adjust().draw();\n    }\n  };\n\n  /**\r\n   * Get the settings for a particular table for external manipulation\r\n   *  @returns {object} DataTables settings object. See\r\n   *    {@link DataTable.models.oSettings}\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *      var oSettings = oTable.fnSettings();\r\n   *\r\n   *      // Show an example parameter from the settings\r\n   *      alert( oSettings._iDisplayStart );\r\n   *    } );\r\n   */\n  this.fnSettings = function () {\n    return _fnSettingsFromNode(this[_ext.iApiIndex]);\n  };\n\n  /**\r\n   * Sort the table by a particular column\r\n   *  @param {int} iCol the data index to sort on. Note that this will not match the\r\n   *    'display index' if you have hidden data entries\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Sort immediately with columns 0 and 1\r\n   *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\r\n   *    } );\r\n   */\n  this.fnSort = function (aaSort) {\n    this.api(true).order(aaSort).draw();\n  };\n\n  /**\r\n   * Attach a sort listener to an element for a given column\r\n   *  @param {node} nNode the element to attach the sort listener to\r\n   *  @param {int} iColumn the column that a click on this node will sort on\r\n   *  @param {function} [fnCallback] callback function when sort is run\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *\r\n   *      // Sort on column 1, when 'sorter' is clicked on\r\n   *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\r\n   *    } );\r\n   */\n  this.fnSortListener = function (nNode, iColumn, fnCallback) {\n    this.api(true).order.listener(nNode, iColumn, fnCallback);\n  };\n\n  /**\r\n   * Update a table cell or row - this method will accept either a single value to\r\n   * update the cell with, an array of values with one element for each column or\r\n   * an object in the same format as the original data source. The function is\r\n   * self-referencing in order to make the multi column updates easier.\r\n   *  @param {object|array|string} mData Data to update the cell/row with\r\n   *  @param {node|int} mRow TR element you want to update or the aoData index\r\n   *  @param {int} [iColumn] The column to update, give as null or undefined to\r\n   *    update a whole row.\r\n   *  @param {bool} [bRedraw=true] Redraw the table or not\r\n   *  @param {bool} [bAction=true] Perform pre-draw actions or not\r\n   *  @returns {int} 0 on success, 1 on error\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\r\n   *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\r\n   *    } );\r\n   */\n  this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {\n    var api = this.api(true);\n    if (iColumn === undefined || iColumn === null) {\n      api.row(mRow).data(mData);\n    } else {\n      api.cell(mRow, iColumn).data(mData);\n    }\n    if (bAction === undefined || bAction) {\n      api.columns.adjust();\n    }\n    if (bRedraw === undefined || bRedraw) {\n      api.draw();\n    }\n    return 0;\n  };\n\n  /**\r\n   * Provide a common method for plug-ins to check the version of DataTables being used, in order\r\n   * to ensure compatibility.\r\n   *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\r\n   *    formats \"X\" and \"X.Y\" are also acceptable.\r\n   *  @returns {boolean} true if this version of DataTables is greater or equal to the required\r\n   *    version, or false if this version of DataTales is not suitable\r\n   *  @method\r\n   *  @dtopt API\r\n   *  @deprecated Since v1.10\r\n   *\r\n   *  @example\r\n   *    $(document).ready(function() {\r\n   *      var oTable = $('#example').dataTable();\r\n   *      alert( oTable.fnVersionCheck( '1.9.0' ) );\r\n   *    } );\r\n   */\n  this.fnVersionCheck = _ext.fnVersionCheck;\n  var _that = this;\n  var emptyInit = options === undefined;\n  var len = this.length;\n  if (emptyInit) {\n    options = {};\n  }\n  this.oApi = this.internal = _ext.internal;\n\n  // Extend with old style plug-in API methods\n  for (var fn in DataTable.ext.internal) {\n    if (fn) {\n      this[fn] = _fnExternApiFunc(fn);\n    }\n  }\n  this.each(function () {\n    // For each initialisation we want to give it a clean initialisation\n    // object that can be bashed around\n    var o = {};\n    var oInit = len > 1 ?\n    // optimisation for single table case\n    _fnExtend(o, options, true) : options;\n\n    /*global oInit,_that,emptyInit*/\n    var i = 0,\n      iLen,\n      j,\n      jLen,\n      k,\n      kLen;\n    var sId = this.getAttribute('id');\n    var bInitHandedOff = false;\n    var defaults = DataTable.defaults;\n    var $this = $(this);\n\n    /* Sanity check */\n    if (this.nodeName.toLowerCase() != 'table') {\n      _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n      return;\n    }\n\n    /* Backwards compatibility for the defaults */\n    _fnCompatOpts(defaults);\n    _fnCompatCols(defaults.column);\n\n    /* Convert the camel-case defaults to Hungarian */\n    _fnCamelToHungarian(defaults, defaults, true);\n    _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n    /* Setting up the initialisation object */\n    _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n\n    /* Check to see if we are re-initialising a table */\n    var allSettings = DataTable.settings;\n    for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n      var s = allSettings[i];\n\n      /* Base check on table node */\n      if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n        if (emptyInit || bRetrieve) {\n          return s.oInstance;\n        } else if (bDestroy) {\n          s.oInstance.fnDestroy();\n          break;\n        } else {\n          _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n          return;\n        }\n      }\n\n      /* If the element we are initialising has the same ID as a table which was previously\r\n       * initialised, but the table nodes don't match (from before) then we destroy the old\r\n       * instance by simply deleting it. This is under the assumption that the table has been\r\n       * destroyed by other methods. Anyone using non-id selectors will need to do this manually\r\n       */\n      if (s.sTableId == this.id) {\n        allSettings.splice(i, 1);\n        break;\n      }\n    }\n\n    /* Ensure the table has an ID - required for accessibility */\n    if (sId === null || sId === \"\") {\n      sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n      this.id = sId;\n    }\n\n    /* Create the settings object for this table and set some of the default parameters */\n    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n      \"sDestroyWidth\": $this[0].style.width,\n      \"sInstance\": sId,\n      \"sTableId\": sId\n    });\n    oSettings.nTable = this;\n    oSettings.oApi = _that.internal;\n    oSettings.oInit = oInit;\n    allSettings.push(oSettings);\n\n    // Need to add the instance after the instance after the settings object has been added\n    // to the settings array, so we can self reference the table instance if more than one\n    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();\n\n    // Backwards compatibility, before we apply all the defaults\n    _fnCompatOpts(oInit);\n    _fnLanguageCompat(oInit.oLanguage);\n\n    // If the length menu is given, but the init display length is not, use the length menu\n    if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n      oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n    }\n\n    // Apply the defaults and init options to make a single init object will all\n    // options defined from defaults and instance options.\n    oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n    // Map the initialisation options onto the settings object\n    _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n    _fnMap(oSettings, oInit, [\"asStripeClasses\", \"ajax\", \"fnServerData\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"sAjaxSource\", \"sAjaxDataProp\", \"iStateDuration\", \"sDom\", \"bSortCellsTop\", \"iTabIndex\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", [\"iCookieDuration\", \"iStateDuration\"],\n    // backwards compat\n    [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n    _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n    _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n    /* Callback functions which are array driven */\n    _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n    _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n    _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n    _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n    _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n    _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n    _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n    _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n    _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n    _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n    _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n    /* Browser support detection */\n    _fnBrowserDetect(oSettings);\n    var oClasses = oSettings.oClasses;\n    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n    $this.addClass(oClasses.sTable);\n    if (oSettings.iInitDisplayStart === undefined) {\n      /* Display start point, taking into account the save saving */\n      oSettings.iInitDisplayStart = oInit.iDisplayStart;\n      oSettings._iDisplayStart = oInit.iDisplayStart;\n    }\n    if (oInit.iDeferLoading !== null) {\n      oSettings.bDeferLoading = true;\n      var tmp = Array.isArray(oInit.iDeferLoading);\n      oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n      oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n    }\n\n    /* Language definitions */\n    var oLanguage = oSettings.oLanguage;\n    $.extend(true, oLanguage, oInit.oLanguage);\n    if (oLanguage.sUrl) {\n      /* Get the language definitions from a file - because this Ajax call makes the language\r\n       * get async to the remainder of this function we use bInitHandedOff to indicate that\r\n       * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\r\n       */\n      $.ajax({\n        dataType: 'json',\n        url: oLanguage.sUrl,\n        success: function (json) {\n          _fnCamelToHungarian(defaults.oLanguage, json);\n          _fnLanguageCompat(json);\n          $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n          _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n          _fnInitialise(oSettings);\n        },\n        error: function () {\n          // Error occurred loading language file, continue on as best we can\n          _fnInitialise(oSettings);\n        }\n      });\n      bInitHandedOff = true;\n    } else {\n      _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n    }\n\n    /*\r\n     * Stripes\r\n     */\n    if (oInit.asStripeClasses === null) {\n      oSettings.asStripeClasses = [oClasses.sStripeOdd, oClasses.sStripeEven];\n    }\n\n    /* Remove row stripe classes if they are already on the table row */\n    var stripeClasses = oSettings.asStripeClasses;\n    var rowOne = $this.children('tbody').find('tr').eq(0);\n    if ($.inArray(true, $.map(stripeClasses, function (el, i) {\n      return rowOne.hasClass(el);\n    })) !== -1) {\n      $('tbody tr', this).removeClass(stripeClasses.join(' '));\n      oSettings.asDestroyStripes = stripeClasses.slice();\n    }\n\n    /*\r\n     * Columns\r\n     * See if we should load columns automatically or use defined ones\r\n     */\n    var anThs = [];\n    var aoColumnsInit;\n    var nThead = this.getElementsByTagName('thead');\n    if (nThead.length !== 0) {\n      _fnDetectHeader(oSettings.aoHeader, nThead[0]);\n      anThs = _fnGetUniqueThs(oSettings);\n    }\n\n    /* If not given a column array, generate one with nulls */\n    if (oInit.aoColumns === null) {\n      aoColumnsInit = [];\n      for (i = 0, iLen = anThs.length; i < iLen; i++) {\n        aoColumnsInit.push(null);\n      }\n    } else {\n      aoColumnsInit = oInit.aoColumns;\n    }\n\n    /* Add the columns */\n    for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n      _fnAddColumn(oSettings, anThs ? anThs[i] : null);\n    }\n\n    /* Apply the column definitions */\n    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n      _fnColumnOptions(oSettings, iCol, oDef);\n    });\n\n    /* HTML5 attribute detection - build an mData object automatically if the\r\n     * attributes are found\r\n     */\n    if (rowOne.length) {\n      var a = function (cell, name) {\n        return cell.getAttribute('data-' + name) !== null ? name : null;\n      };\n      $(rowOne[0]).children('th, td').each(function (i, cell) {\n        var col = oSettings.aoColumns[i];\n        if (!col) {\n          _fnLog(oSettings, 0, 'Incorrect column count', 18);\n        }\n        if (col.mData === i) {\n          var sort = a(cell, 'sort') || a(cell, 'order');\n          var filter = a(cell, 'filter') || a(cell, 'search');\n          if (sort !== null || filter !== null) {\n            col.mData = {\n              _: i + '.display',\n              sort: sort !== null ? i + '.@data-' + sort : undefined,\n              type: sort !== null ? i + '.@data-' + sort : undefined,\n              filter: filter !== null ? i + '.@data-' + filter : undefined\n            };\n            col._isArrayHost = true;\n            _fnColumnOptions(oSettings, i);\n          }\n        }\n      });\n    }\n    var features = oSettings.oFeatures;\n    var loadedInit = function () {\n      /*\r\n       * Sorting\r\n       * @todo For modularisation (1.11) this needs to do into a sort start up handler\r\n       */\n\n      // If aaSorting is not defined, then we use the first indicator in asSorting\n      // in case that has been altered, so the default sort reflects that option\n      if (oInit.aaSorting === undefined) {\n        var sorting = oSettings.aaSorting;\n        for (i = 0, iLen = sorting.length; i < iLen; i++) {\n          sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n        }\n      }\n\n      /* Do a first pass on the sorting classes (allows any size changes to be taken into\r\n       * account, and also will apply sorting disabled classes if disabled\r\n       */\n      _fnSortingClasses(oSettings);\n      if (features.bSort) {\n        _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n          if (oSettings.bSorted) {\n            var aSort = _fnSortFlatten(oSettings);\n            var sortedColumns = {};\n            $.each(aSort, function (i, val) {\n              sortedColumns[val.src] = val.dir;\n            });\n            _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n            _fnSortAria(oSettings);\n          }\n        });\n      }\n      _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n        if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n          _fnSortingClasses(oSettings);\n        }\n      }, 'sc');\n\n      /*\r\n       * Final init\r\n       * Cache the header, body and footer as required, creating them if needed\r\n       */\n\n      // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n      var captions = $this.children('caption').each(function () {\n        this._captionSide = $(this).css('caption-side');\n      });\n      var thead = $this.children('thead');\n      if (thead.length === 0) {\n        thead = $('<thead/>').appendTo($this);\n      }\n      oSettings.nTHead = thead[0];\n      var tbody = $this.children('tbody');\n      if (tbody.length === 0) {\n        tbody = $('<tbody/>').insertAfter(thead);\n      }\n      oSettings.nTBody = tbody[0];\n      var tfoot = $this.children('tfoot');\n      if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n        // If we are a scrolling table, and no footer has been given, then we need to create\n        // a tfoot element for the caption element to be appended to\n        tfoot = $('<tfoot/>').appendTo($this);\n      }\n      if (tfoot.length === 0 || tfoot.children().length === 0) {\n        $this.addClass(oClasses.sNoFooter);\n      } else if (tfoot.length > 0) {\n        oSettings.nTFoot = tfoot[0];\n        _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n      }\n\n      /* Check if there is data passing into the constructor */\n      if (oInit.aaData) {\n        for (i = 0; i < oInit.aaData.length; i++) {\n          _fnAddData(oSettings, oInit.aaData[i]);\n        }\n      } else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n        /* Grab the data from the page - only do this when deferred loading or no Ajax\r\n         * source since there is no point in reading the DOM data if we are then going\r\n         * to replace it with Ajax data\r\n         */\n        _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n      }\n\n      /* Copy the data index array */\n      oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n      /* Initialisation complete - table can be drawn */\n      oSettings.bInitialised = true;\n\n      /* Check if we need to initialise the table (it might not have been handed off to the\r\n       * language processor)\r\n       */\n      if (bInitHandedOff === false) {\n        _fnInitialise(oSettings);\n      }\n    };\n\n    /* Must be done after everything which can be overridden by the state saving! */\n    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n    if (oInit.bStateSave) {\n      features.bStateSave = true;\n      _fnLoadState(oSettings, oInit, loadedInit);\n    } else {\n      loadedInit();\n    }\n  });\n  _that = null;\n  return this;\n};\n\n/*\r\n * It is useful to have variables which are scoped locally so only the\r\n * DataTables functions can access them and they don't leak into global space.\r\n * At the same time these functions are often useful over multiple files in the\r\n * core and API, so we list, or at least document, all variables which are used\r\n * by DataTables as private variables here. This also ensures that there is no\r\n * clashing of variable names and that they can easily referenced for reuse.\r\n */\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_first\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n// http://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\nvar _empty = function (d) {\n  return !d || d === true || d === '-' ? true : false;\n};\nvar _intVal = function (s) {\n  var integer = parseInt(s, 10);\n  return !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function (num, decimalPoint) {\n  // Cache created regular expressions for speed as this function is called often\n  if (!_re_dic[decimalPoint]) {\n    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n  }\n  return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n};\nvar _isNumber = function (d, decimalPoint, formatted) {\n  let type = typeof d;\n  var strType = type === 'string';\n  if (type === 'number' || type === 'bigint') {\n    return true;\n  }\n\n  // If empty return immediately so there must be a number if it is a\n  // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n  // as a formatted number for currency\n  if (_empty(d)) {\n    return true;\n  }\n  if (decimalPoint && strType) {\n    d = _numToDecimal(d, decimalPoint);\n  }\n  if (formatted && strType) {\n    d = d.replace(_re_formatted_numeric, '');\n  }\n  return !isNaN(parseFloat(d)) && isFinite(d);\n};\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function (d) {\n  return _empty(d) || typeof d === 'string';\n};\nvar _htmlNumeric = function (d, decimalPoint, formatted) {\n  if (_empty(d)) {\n    return true;\n  }\n  var html = _isHtml(d);\n  return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted) ? true : null;\n};\nvar _pluck = function (a, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = a.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[i] && a[i][prop]) {\n        out.push(a[i][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[i]) {\n        out.push(a[i][prop]);\n      }\n    }\n  }\n  return out;\n};\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function (a, order, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = order.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[order[i]][prop]) {\n        out.push(a[order[i]][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      out.push(a[order[i]][prop]);\n    }\n  }\n  return out;\n};\nvar _range = function (len, start) {\n  var out = [];\n  var end;\n  if (start === undefined) {\n    start = 0;\n    end = len;\n  } else {\n    end = start;\n    start = len;\n  }\n  for (var i = start; i < end; i++) {\n    out.push(i);\n  }\n  return out;\n};\nvar _removeEmpty = function (a) {\n  var out = [];\n  for (var i = 0, ien = a.length; i < ien; i++) {\n    if (a[i]) {\n      // careful - will remove all falsy values!\n      out.push(a[i]);\n    }\n  }\n  return out;\n};\nvar _stripHtml = function (d) {\n  return d.replace(_re_html, '');\n};\n\n/**\r\n * Determine if all values in the array are unique. This means we can short\r\n * cut the _unique method at the cost of a single loop. A sorted array is used\r\n * to easily check the values.\r\n *\r\n * @param  {array} src Source array\r\n * @return {boolean} true if all unique, false otherwise\r\n * @ignore\r\n */\nvar _areAllUnique = function (src) {\n  if (src.length < 2) {\n    return true;\n  }\n  var sorted = src.slice().sort();\n  var last = sorted[0];\n  for (var i = 1, ien = sorted.length; i < ien; i++) {\n    if (sorted[i] === last) {\n      return false;\n    }\n    last = sorted[i];\n  }\n  return true;\n};\n\n/**\r\n * Find the unique elements in a source array.\r\n *\r\n * @param  {array} src Source array\r\n * @return {array} Array of unique items\r\n * @ignore\r\n */\nvar _unique = function (src) {\n  if (_areAllUnique(src)) {\n    return src.slice();\n  }\n\n  // A faster unique method is to use object keys to identify used values,\n  // but this doesn't work with arrays or objects, which we must also\n  // consider. See jsperf.com/compare-array-unique-versions/4 for more\n  // information.\n  var out = [],\n    val,\n    i,\n    ien = src.length,\n    j,\n    k = 0;\n  again: for (i = 0; i < ien; i++) {\n    val = src[i];\n    for (j = 0; j < k; j++) {\n      if (out[j] === val) {\n        continue again;\n      }\n    }\n    out.push(val);\n    k++;\n  }\n  return out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; i++) {\n      _flatten(out, val[i]);\n    }\n  } else {\n    out.push(val);\n  }\n  return out;\n};\nvar _includes = function (search, start) {\n  if (start === undefined) {\n    start = 0;\n  }\n  return this.indexOf(search, start) !== -1;\n};\n\n// Array.isArray polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\nif (!Array.isArray) {\n  Array.isArray = function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\nif (!Array.prototype.includes) {\n  Array.prototype.includes = _includes;\n}\n\n// .trim() polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\nif (!String.prototype.includes) {\n  String.prototype.includes = _includes;\n}\n\n/**\r\n * DataTables utility methods\r\n * \r\n * This namespace provides helper methods that DataTables uses internally to\r\n * create a DataTable, but which are not exclusively used only for DataTables.\r\n * These methods can be used by extension authors to save the duplication of\r\n * code.\r\n *\r\n *  @namespace\r\n */\nDataTable.util = {\n  /**\r\n   * Throttle the calls to a function. Arguments and context are maintained\r\n   * for the throttled function.\r\n   *\r\n   * @param {function} fn Function to be called\r\n   * @param {integer} freq Call frequency in mS\r\n   * @return {function} Wrapped function\r\n   */\n  throttle: function (fn, freq) {\n    var frequency = freq !== undefined ? freq : 200,\n      last,\n      timer;\n    return function () {\n      var that = this,\n        now = +new Date(),\n        args = arguments;\n      if (last && now < last + frequency) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          last = undefined;\n          fn.apply(that, args);\n        }, frequency);\n      } else {\n        last = now;\n        fn.apply(that, args);\n      }\n    };\n  },\n  /**\r\n   * Escape a string such that it can be used in a regular expression\r\n   *\r\n   *  @param {string} val string to escape\r\n   *  @returns {string} escaped string\r\n   */\n  escapeRegex: function (val) {\n    return val.replace(_re_escape_regex, '\\\\$1');\n  },\n  /**\r\n   * Create a function that will write to a nested object or array\r\n   * @param {*} source JSON notation string\r\n   * @returns Write function\r\n   */\n  set: function (source) {\n    if ($.isPlainObject(source)) {\n      /* Unlike get, only the underscore (global) option is used for for\r\n       * setting data since we don't know the type here. This is why an object\r\n       * option is not documented for `mData` (which is read/write), but it is\r\n       * for `mRender` which is read only.\r\n       */\n      return DataTable.util.set(source._);\n    } else if (source === null) {\n      // Nothing to do when the data source is null\n      return function () {};\n    } else if (typeof source === 'function') {\n      return function (data, val, meta) {\n        source(data, 'set', val, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      // Like the get, we need to get data from a nested object\n      var setData = function (data, val, src) {\n        var a = _fnSplitObjNotation(src),\n          b;\n        var aLast = a[a.length - 1];\n        var arrayNotation, funcNotation, o, innerSrc;\n        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n          // Protect against prototype pollution\n          if (a[i] === '__proto__' || a[i] === 'constructor') {\n            throw new Error('Cannot set prototype values');\n          }\n\n          // Check if we are dealing with an array notation request\n          arrayNotation = a[i].match(__reArray);\n          funcNotation = a[i].match(__reFn);\n          if (arrayNotation) {\n            a[i] = a[i].replace(__reArray, '');\n            data[a[i]] = [];\n\n            // Get the remainder of the nested object to set so we can recurse\n            b = a.slice();\n            b.splice(0, i + 1);\n            innerSrc = b.join('.');\n\n            // Traverse each entry in the array setting the properties requested\n            if (Array.isArray(val)) {\n              for (var j = 0, jLen = val.length; j < jLen; j++) {\n                o = {};\n                setData(o, val[j], innerSrc);\n                data[a[i]].push(o);\n              }\n            } else {\n              // We've been asked to save data to an array, but it\n              // isn't array data to be saved. Best that can be done\n              // is to just save the value.\n              data[a[i]] = val;\n            }\n\n            // The inner call to setData has already traversed through the remainder\n            // of the source and has set the data, thus we can exit here\n            return;\n          } else if (funcNotation) {\n            // Function call\n            a[i] = a[i].replace(__reFn, '');\n            data = data[a[i]](val);\n          }\n\n          // If the nested object doesn't currently exist - since we are\n          // trying to set the value - create it\n          if (data[a[i]] === null || data[a[i]] === undefined) {\n            data[a[i]] = {};\n          }\n          data = data[a[i]];\n        }\n\n        // Last item in the input - i.e, the actual set\n        if (aLast.match(__reFn)) {\n          // Function call\n          data = data[aLast.replace(__reFn, '')](val);\n        } else {\n          // If array notation is used, we just want to strip it and use the property name\n          // and assign the value. If it isn't used, then we get the result we want anyway\n          data[aLast.replace(__reArray, '')] = val;\n        }\n      };\n      return function (data, val) {\n        // meta is also passed in, but not used\n        return setData(data, val, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, val) {\n        // meta is also passed in, but not used\n        data[source] = val;\n      };\n    }\n  },\n  /**\r\n   * Create a function that will read nested objects from arrays, based on JSON notation\r\n   * @param {*} source JSON notation string\r\n   * @returns Value read\r\n   */\n  get: function (source) {\n    if ($.isPlainObject(source)) {\n      // Build an object of get functions, and wrap them in a single call\n      var o = {};\n      $.each(source, function (key, val) {\n        if (val) {\n          o[key] = DataTable.util.get(val);\n        }\n      });\n      return function (data, type, row, meta) {\n        var t = o[type] || o._;\n        return t !== undefined ? t(data, type, row, meta) : data;\n      };\n    } else if (source === null) {\n      // Give an empty string for rendering / sorting etc\n      return function (data) {\n        // type, row and meta also passed, but not used\n        return data;\n      };\n    } else if (typeof source === 'function') {\n      return function (data, type, row, meta) {\n        return source(data, type, row, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      /* If there is a . in the source string then the data source is in a\r\n       * nested object so we loop over the data for each level to get the next\r\n       * level down. On each loop we test for undefined, and if found immediately\r\n       * return. This allows entire objects to be missing and sDefaultContent to\r\n       * be used if defined, rather than throwing an error\r\n       */\n      var fetchData = function (data, type, src) {\n        var arrayNotation, funcNotation, out, innerSrc;\n        if (src !== \"\") {\n          var a = _fnSplitObjNotation(src);\n          for (var i = 0, iLen = a.length; i < iLen; i++) {\n            // Check if we are dealing with special notation\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n            if (arrayNotation) {\n              // Array notation\n              a[i] = a[i].replace(__reArray, '');\n\n              // Condition allows simply [] to be passed in\n              if (a[i] !== \"\") {\n                data = data[a[i]];\n              }\n              out = [];\n\n              // Get the remainder of the nested object to get\n              a.splice(0, i + 1);\n              innerSrc = a.join('.');\n\n              // Traverse each entry in the array getting the properties requested\n              if (Array.isArray(data)) {\n                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                  out.push(fetchData(data[j], type, innerSrc));\n                }\n              }\n\n              // If a string is given in between the array notation indicators, that\n              // is used to join the strings together, otherwise an array is returned\n              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n              data = join === \"\" ? out : out.join(join);\n\n              // The inner call to fetchData has already traversed through the remainder\n              // of the source requested, so we exit from the loop\n              break;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]]();\n              continue;\n            }\n            if (data === null || data[a[i]] === undefined) {\n              return undefined;\n            }\n            data = data[a[i]];\n          }\n        }\n        return data;\n      };\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return fetchData(data, type, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return data[source];\n      };\n    }\n  }\n};\n\n/**\r\n * Create a mapping object that allows camel case parameters to be looked up\r\n * for their Hungarian counterparts. The mapping is stored in a private\r\n * parameter called `_hungarianMap` which can be accessed on the source object.\r\n *  @param {object} o\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnHungarianMap(o) {\n  var hungarian = 'a aa ai ao as b fn i m o s ',\n    match,\n    newKey,\n    map = {};\n  $.each(o, function (key, val) {\n    match = key.match(/^([^A-Z]+?)([A-Z])/);\n    if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n      newKey = key.replace(match[0], match[2].toLowerCase());\n      map[newKey] = key;\n      if (match[1] === 'o') {\n        _fnHungarianMap(o[key]);\n      }\n    }\n  });\n  o._hungarianMap = map;\n}\n\n/**\r\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\r\n * created by _fnHungarianMap.\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnCamelToHungarian(src, user, force) {\n  if (!src._hungarianMap) {\n    _fnHungarianMap(src);\n  }\n  var hungarianKey;\n  $.each(user, function (key, val) {\n    hungarianKey = src._hungarianMap[key];\n    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n      // For objects, we need to buzz down into the object to copy parameters\n      if (hungarianKey.charAt(0) === 'o') {\n        // Copy the camelCase options over to the hungarian\n        if (!user[hungarianKey]) {\n          user[hungarianKey] = {};\n        }\n        $.extend(true, user[hungarianKey], user[key]);\n        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n      } else {\n        user[hungarianKey] = user[key];\n      }\n    }\n  });\n}\n\n/**\r\n * Language compatibility - when certain options are given, and others aren't, we\r\n * need to duplicate the values over, in order to provide backwards compatibility\r\n * with older language files.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnLanguageCompat(lang) {\n  // Note the use of the Hungarian notation for the parameters in this method as\n  // this is called after the mapping of camelCase to Hungarian\n  var defaults = DataTable.defaults.oLanguage;\n\n  // Default mapping\n  var defaultDecimal = defaults.sDecimal;\n  if (defaultDecimal) {\n    _addNumericSort(defaultDecimal);\n  }\n  if (lang) {\n    var zeroRecords = lang.sZeroRecords;\n\n    // Backwards compatibility - if there is no sEmptyTable given, then use the same as\n    // sZeroRecords - assuming that is given.\n    if (!lang.sEmptyTable && zeroRecords && defaults.sEmptyTable === \"No data available in table\") {\n      _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n    }\n\n    // Likewise with loading records\n    if (!lang.sLoadingRecords && zeroRecords && defaults.sLoadingRecords === \"Loading...\") {\n      _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n    }\n\n    // Old parameter name of the thousands separator mapped onto the new\n    if (lang.sInfoThousands) {\n      lang.sThousands = lang.sInfoThousands;\n    }\n    var decimal = lang.sDecimal;\n    if (decimal && defaultDecimal !== decimal) {\n      _addNumericSort(decimal);\n    }\n  }\n}\n\n/**\r\n * Map one parameter onto another\r\n *  @param {object} o Object to map\r\n *  @param {*} knew The new parameter name\r\n *  @param {*} old The old parameter name\r\n */\nvar _fnCompatMap = function (o, knew, old) {\n  if (o[knew] !== undefined) {\n    o[old] = o[knew];\n  }\n};\n\n/**\r\n * Provide backwards compatibility for the main DT options. Note that the new\r\n * options are mapped onto the old parameters, so this is an external interface\r\n * change only.\r\n *  @param {object} init Object to map\r\n */\nfunction _fnCompatOpts(init) {\n  _fnCompatMap(init, 'ordering', 'bSort');\n  _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n  _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n  _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n  _fnCompatMap(init, 'order', 'aaSorting');\n  _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n  _fnCompatMap(init, 'paging', 'bPaginate');\n  _fnCompatMap(init, 'pagingType', 'sPaginationType');\n  _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n  _fnCompatMap(init, 'searching', 'bFilter');\n\n  // Boolean initialisation of x-scrolling\n  if (typeof init.sScrollX === 'boolean') {\n    init.sScrollX = init.sScrollX ? '100%' : '';\n  }\n  if (typeof init.scrollX === 'boolean') {\n    init.scrollX = init.scrollX ? '100%' : '';\n  }\n\n  // Column search objects are in an array, so it needs to be converted\n  // element by element\n  var searchCols = init.aoSearchCols;\n  if (searchCols) {\n    for (var i = 0, ien = searchCols.length; i < ien; i++) {\n      if (searchCols[i]) {\n        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n      }\n    }\n  }\n}\n\n/**\r\n * Provide backwards compatibility for column options. Note that the new options\r\n * are mapped onto the old parameters, so this is an external interface change\r\n * only.\r\n *  @param {object} init Object to map\r\n */\nfunction _fnCompatCols(init) {\n  _fnCompatMap(init, 'orderable', 'bSortable');\n  _fnCompatMap(init, 'orderData', 'aDataSort');\n  _fnCompatMap(init, 'orderSequence', 'asSorting');\n  _fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n  // orderData can be given as an integer\n  var dataSort = init.aDataSort;\n  if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n    init.aDataSort = [dataSort];\n  }\n}\n\n/**\r\n * Browser feature detection for capabilities, quirks\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnBrowserDetect(settings) {\n  // We don't need to do this every time DataTables is constructed, the values\n  // calculated are specific to the browser and OS configuration which we\n  // don't expect to change between initialisations\n  if (!DataTable.__browser) {\n    var browser = {};\n    DataTable.__browser = browser;\n\n    // Scrolling feature / quirks detection\n    var n = $('<div/>').css({\n      position: 'fixed',\n      top: 0,\n      left: $(window).scrollLeft() * -1,\n      // allow for scrolling\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    }).append($('<div/>').css({\n      position: 'absolute',\n      top: 1,\n      left: 1,\n      width: 100,\n      overflow: 'scroll'\n    }).append($('<div/>').css({\n      width: '100%',\n      height: 10\n    }))).appendTo('body');\n    var outer = n.children();\n    var inner = outer.children();\n\n    // Numbers below, in order, are:\n    // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n    //\n    // IE6 XP:                           100 100 100  83\n    // IE7 Vista:                        100 100 100  83\n    // IE 8+ Windows:                     83  83 100  83\n    // Evergreen Windows:                 83  83 100  83\n    // Evergreen Mac with scrollbars:     85  85 100  85\n    // Evergreen Mac without scrollbars: 100 100 100 100\n\n    // Get scrollbar width\n    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n    // IE6/7 will oversize a width 100% element inside a scrolling element, to\n    // include the width of the scrollbar, while other browsers ensure the inner\n    // element is contained without forcing scrolling\n    browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n    // In rtl text layout, some browsers (most, but not all) will place the\n    // scrollbar on the left, rather than the right.\n    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n\n    // IE8- don't provide height and width for getBoundingClientRect\n    browser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n    n.remove();\n  }\n  $.extend(settings.oBrowser, DataTable.__browser);\n  settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\r\n * Array.prototype reduce[Right] method, used for browsers which don't support\r\n * JS 1.6. Done this way to reduce code size, since we iterate either way\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnReduce(that, fn, init, start, end, inc) {\n  var i = start,\n    value,\n    isSet = false;\n  if (init !== undefined) {\n    value = init;\n    isSet = true;\n  }\n  while (i !== end) {\n    if (!that.hasOwnProperty(i)) {\n      continue;\n    }\n    value = isSet ? fn(value, that[i], i, that) : that[i];\n    isSet = true;\n    i += inc;\n  }\n  return value;\n}\n\n/**\r\n * Add a column to the list used for the table with default values\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nTh The th element for this column\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAddColumn(oSettings, nTh) {\n  // Add column to aoColumns array\n  var oDefaults = DataTable.defaults.column;\n  var iCol = oSettings.aoColumns.length;\n  var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n    \"nTh\": nTh ? nTh : document.createElement('th'),\n    \"sTitle\": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n    \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n    \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n    idx: iCol\n  });\n  oSettings.aoColumns.push(oCol);\n\n  // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n  // passed into extend can be undefined. This allows the user to give a default\n  // with only some of the parameters defined, and also not give a default\n  var searchCols = oSettings.aoPreSearchCols;\n  searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n\n  // Use the default column options function to initialise classes etc\n  _fnColumnOptions(oSettings, iCol, $(nTh).data());\n}\n\n/**\r\n * Apply options for a column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iCol column index to consider\r\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n  var oCol = oSettings.aoColumns[iCol];\n  var oClasses = oSettings.oClasses;\n  var th = $(oCol.nTh);\n\n  // Try to get width information from the DOM. We can't get it from CSS\n  // as we'd need to parse the CSS stylesheet. `width` option can override\n  if (!oCol.sWidthOrig) {\n    // Width attribute\n    oCol.sWidthOrig = th.attr('width') || null;\n\n    // Style attribute\n    var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n    if (t) {\n      oCol.sWidthOrig = t[1];\n    }\n  }\n\n  /* User specified column options */\n  if (oOptions !== undefined && oOptions !== null) {\n    // Backwards compatibility\n    _fnCompatCols(oOptions);\n\n    // Map camel case parameters to their Hungarian counterparts\n    _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n\n    /* Backwards compatibility for mDataProp */\n    if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n      oOptions.mData = oOptions.mDataProp;\n    }\n    if (oOptions.sType) {\n      oCol._sManualType = oOptions.sType;\n    }\n\n    // `class` is a reserved word in Javascript, so we need to provide\n    // the ability to use a valid name for the camel case input\n    if (oOptions.className && !oOptions.sClass) {\n      oOptions.sClass = oOptions.className;\n    }\n    if (oOptions.sClass) {\n      th.addClass(oOptions.sClass);\n    }\n    var origClass = oCol.sClass;\n    $.extend(oCol, oOptions);\n    _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n    // Merge class from previously defined classes with this one, rather than just\n    // overwriting it in the extend above\n    if (origClass !== oCol.sClass) {\n      oCol.sClass = origClass + ' ' + oCol.sClass;\n    }\n\n    /* iDataSort to be applied (backwards compatibility), but aDataSort will take\r\n     * priority if defined\r\n     */\n    if (oOptions.iDataSort !== undefined) {\n      oCol.aDataSort = [oOptions.iDataSort];\n    }\n    _fnMap(oCol, oOptions, \"aDataSort\");\n  }\n\n  /* Cache the data get and set functions for speed */\n  var mDataSrc = oCol.mData;\n  var mData = _fnGetObjectDataFn(mDataSrc);\n  var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n  var attrTest = function (src) {\n    return typeof src === 'string' && src.indexOf('@') !== -1;\n  };\n  oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n  oCol._setter = null;\n  oCol.fnGetData = function (rowData, type, meta) {\n    var innerData = mData(rowData, type, undefined, meta);\n    return mRender && type ? mRender(innerData, type, rowData, meta) : innerData;\n  };\n  oCol.fnSetData = function (rowData, val, meta) {\n    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n  };\n\n  // Indicate if DataTables should read DOM data as an object or array\n  // Used in _fnGetRowElements\n  if (typeof mDataSrc !== 'number' && !oCol._isArrayHost) {\n    oSettings._rowReadObject = true;\n  }\n\n  /* Feature sorting overrides column specific when off */\n  if (!oSettings.oFeatures.bSort) {\n    oCol.bSortable = false;\n    th.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n  }\n\n  /* Check that the class assignment is correct for sorting */\n  var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n  var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n  if (!oCol.bSortable || !bAsc && !bDesc) {\n    oCol.sSortingClass = oClasses.sSortableNone;\n    oCol.sSortingClassJUI = \"\";\n  } else if (bAsc && !bDesc) {\n    oCol.sSortingClass = oClasses.sSortableAsc;\n    oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n  } else if (!bAsc && bDesc) {\n    oCol.sSortingClass = oClasses.sSortableDesc;\n    oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n  } else {\n    oCol.sSortingClass = oClasses.sSortable;\n    oCol.sSortingClassJUI = oClasses.sSortJUI;\n  }\n}\n\n/**\r\n * Adjust the table column widths for new data. Note: you would probably want to\r\n * do a redraw after calling this function!\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAdjustColumnSizing(settings) {\n  /* Not interested in doing column width calculation if auto-width is disabled */\n  if (settings.oFeatures.bAutoWidth !== false) {\n    var columns = settings.aoColumns;\n    _fnCalculateColumnWidths(settings);\n    for (var i = 0, iLen = columns.length; i < iLen; i++) {\n      columns[i].nTh.style.width = columns[i].sWidth;\n    }\n  }\n  var scroll = settings.oScroll;\n  if (scroll.sY !== '' || scroll.sX !== '') {\n    _fnScrollDraw(settings);\n  }\n  _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n}\n\n/**\r\n * Convert the index of a visible column to the index in the data array (take account\r\n * of hidden columns)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iMatch Visible column index to lookup\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n}\n\n/**\r\n * Convert the index of an index in the data array and convert it to the visible\r\n *   column index (take account of hidden columns)\r\n *  @param {int} iMatch Column index to lookup\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  var iPos = $.inArray(iMatch, aiVis);\n  return iPos !== -1 ? iPos : null;\n}\n\n/**\r\n * Get the number of visible columns\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the number of visible columns\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnVisbleColumns(oSettings) {\n  var vis = 0;\n\n  // No reduce in IE8, use a loop for now\n  $.each(oSettings.aoColumns, function (i, col) {\n    if (col.bVisible && $(col.nTh).css('display') !== 'none') {\n      vis++;\n    }\n  });\n  return vis;\n}\n\n/**\r\n * Get an array of column indexes that match a given property\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sParam Parameter in aoColumns to look for - typically\r\n *    bVisible or bSearchable\r\n *  @returns {array} Array of indexes with matched properties\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnGetColumns(oSettings, sParam) {\n  var a = [];\n  $.map(oSettings.aoColumns, function (val, i) {\n    if (val[sParam]) {\n      a.push(i);\n    }\n  });\n  return a;\n}\n\n/**\r\n * Calculate the 'type' of a column\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnColumnTypes(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var types = DataTable.ext.type.detect;\n  var i, ien, j, jen, k, ken;\n  var col, cell, detectedType, cache;\n\n  // For each column, spin over the \n  for (i = 0, ien = columns.length; i < ien; i++) {\n    col = columns[i];\n    cache = [];\n    if (!col.sType && col._sManualType) {\n      col.sType = col._sManualType;\n    } else if (!col.sType) {\n      for (j = 0, jen = types.length; j < jen; j++) {\n        for (k = 0, ken = data.length; k < ken; k++) {\n          // Use a cache array so we only need to get the type data\n          // from the formatter once (when using multiple detectors)\n          if (cache[k] === undefined) {\n            cache[k] = _fnGetCellData(settings, k, i, 'type');\n          }\n          detectedType = types[j](cache[k], settings);\n\n          // If null, then this type can't apply to this column, so\n          // rather than testing all cells, break out. There is an\n          // exception for the last type which is `html`. We need to\n          // scan all rows since it is possible to mix string and HTML\n          // types\n          if (!detectedType && j !== types.length - 1) {\n            break;\n          }\n\n          // Only a single match is needed for html type since it is\n          // bottom of the pile and very similar to string - but it\n          // must not be empty\n          if (detectedType === 'html' && !_empty(cache[k])) {\n            break;\n          }\n        }\n\n        // Type is valid for all data points in the column - use this\n        // type\n        if (detectedType) {\n          col.sType = detectedType;\n          break;\n        }\n      }\n\n      // Fall back - if no type was detected, always use string\n      if (!col.sType) {\n        col.sType = 'string';\n      }\n    }\n  }\n}\n\n/**\r\n * Take the column definitions and static columns arrays and calculate how\r\n * they relate to column indexes. The callback function will then apply the\r\n * definition found for a column to a suitable configuration object.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\r\n *  @param {array} aoCols The aoColumns array that defines columns individually\r\n *  @param {function} fn Callback function - takes two parameters, the calculated\r\n *    column index and the definition for that column.\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {\n  var i, iLen, j, jLen, k, kLen, def;\n  var columns = oSettings.aoColumns;\n\n  // Column definitions with aTargets\n  if (aoColDefs) {\n    /* Loop over the definitions array - loop in reverse so first instance has priority */\n    for (i = aoColDefs.length - 1; i >= 0; i--) {\n      def = aoColDefs[i];\n\n      /* Each definition can target multiple columns, as it is an array */\n      var aTargets = def.target !== undefined ? def.target : def.targets !== undefined ? def.targets : def.aTargets;\n      if (!Array.isArray(aTargets)) {\n        aTargets = [aTargets];\n      }\n      for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n        if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n          /* Add columns that we don't yet know about */\n          while (columns.length <= aTargets[j]) {\n            _fnAddColumn(oSettings);\n          }\n\n          /* Integer, basic index */\n          fn(aTargets[j], def);\n        } else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n          /* Negative integer, right to left column counting */\n          fn(columns.length + aTargets[j], def);\n        } else if (typeof aTargets[j] === 'string') {\n          /* Class name matching on TH element */\n          for (k = 0, kLen = columns.length; k < kLen; k++) {\n            if (aTargets[j] == \"_all\" || $(columns[k].nTh).hasClass(aTargets[j])) {\n              fn(k, def);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Statically defined columns array\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      fn(i, aoCols[i]);\n    }\n  }\n}\n\n/**\r\n * Add a data array to the table, creating DOM node etc. This is the parallel to\r\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\r\n * DOM source.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aData data array to be added\r\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAddData(oSettings, aDataIn, nTr, anTds) {\n  /* Create the object for storing information about this new row */\n  var iRow = oSettings.aoData.length;\n  var oData = $.extend(true, {}, DataTable.models.oRow, {\n    src: nTr ? 'dom' : 'data',\n    idx: iRow\n  });\n  oData._aData = aDataIn;\n  oSettings.aoData.push(oData);\n\n  /* Create the cells */\n  var nTd, sThisType;\n  var columns = oSettings.aoColumns;\n\n  // Invalidate the column types as the new data needs to be revalidated\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    columns[i].sType = null;\n  }\n\n  /* Add to the display array */\n  oSettings.aiDisplayMaster.push(iRow);\n  var id = oSettings.rowIdFn(aDataIn);\n  if (id !== undefined) {\n    oSettings.aIds[id] = oData;\n  }\n\n  /* Create the DOM information, or register it if already present */\n  if (nTr || !oSettings.oFeatures.bDeferRender) {\n    _fnCreateTr(oSettings, iRow, nTr, anTds);\n  }\n  return iRow;\n}\n\n/**\r\n * Add one or more TR elements to the table. Generally we'd expect to\r\n * use this for reading data from a DOM sourced table, but it could be\r\n * used for an TR element. Note that if a TR is given, it is used (i.e.\r\n * it is not cloned).\r\n *  @param {object} settings dataTables settings object\r\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\r\n *  @returns {array} Array of indexes for the added rows\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAddTr(settings, trs) {\n  var row;\n\n  // Allow an individual node to be passed in\n  if (!(trs instanceof $)) {\n    trs = $(trs);\n  }\n  return trs.map(function (i, el) {\n    row = _fnGetRowElements(settings, el);\n    return _fnAddData(settings, row.data, el, row.cells);\n  });\n}\n\n/**\r\n * Take a TR element and convert it to an index in aoData\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} n the TR element to find\r\n *  @returns {int} index if the node is found, null if not\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnNodeToDataIndex(oSettings, n) {\n  return n._DT_RowIndex !== undefined ? n._DT_RowIndex : null;\n}\n\n/**\r\n * Take a TD element and convert it into a column data index (not the visible index)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow The row number the TD/TH can be found in\r\n *  @param {node} n The TD/TH element to find\r\n *  @returns {int} index if the node is found, -1 if not\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnNodeToColumnIndex(oSettings, iRow, n) {\n  return $.inArray(n, oSettings.aoData[iRow].anCells);\n}\n\n/**\r\n * Get the data for a given cell from the internal cache, taking into account data mapping\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\r\n *  @returns {*} Cell data\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n  if (type === 'search') {\n    type = 'filter';\n  } else if (type === 'order') {\n    type = 'sort';\n  }\n  var draw = settings.iDraw;\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  var defaultContent = col.sDefaultContent;\n  var cellData = col.fnGetData(rowData, type, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n  if (cellData === undefined) {\n    if (settings.iDrawError != draw && defaultContent === null) {\n      _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n      settings.iDrawError = draw;\n    }\n    return defaultContent;\n  }\n\n  // When the data source is null and a specific data type is requested (i.e.\n  // not the original data), we can use default column data\n  if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n    cellData = defaultContent;\n  } else if (typeof cellData === 'function') {\n    // If the data source is a function, then we run it and use the return,\n    // executing in the scope of the data object (for instances)\n    return cellData.call(rowData);\n  }\n  if (cellData === null && type === 'display') {\n    return '';\n  }\n  if (type === 'filter') {\n    var fomatters = DataTable.ext.type.search;\n    if (fomatters[col.sType]) {\n      cellData = fomatters[col.sType](cellData);\n    }\n  }\n  return cellData;\n}\n\n/**\r\n * Set the value for a specific cell, into the internal data cache\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {*} val Value to set\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  col.fnSetData(rowData, val, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n}\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\r\n * Split string on periods, taking into account escaped periods\r\n * @param  {string} str String to split\r\n * @return {array} Split string\r\n */\nfunction _fnSplitObjNotation(str) {\n  return $.map(str.match(/(\\\\.|[^\\.])+/g) || [''], function (s) {\n    return s.replace(/\\\\\\./g, '.');\n  });\n}\n\n/**\r\n * Return a function that can be used to get data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data get function\r\n *  @memberof DataTable#oApi\r\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n/**\r\n * Return a function that can be used to set data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data set function\r\n *  @memberof DataTable#oApi\r\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n/**\r\n * Return an array with the full table data\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns array {array} aData Master data array\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnGetDataMaster(settings) {\n  return _pluck(settings.aoData, '_aData');\n}\n\n/**\r\n * Nuke the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnClearTable(settings) {\n  settings.aoData.length = 0;\n  settings.aiDisplayMaster.length = 0;\n  settings.aiDisplay.length = 0;\n  settings.aIds = {};\n}\n\n/**\r\n* Take an array of integers (index array) and remove a target integer (value - not\r\n* the key!)\r\n*  @param {array} a Index array to target\r\n*  @param {int} iTarget value to find\r\n*  @memberof DataTable#oApi\r\n*/\nfunction _fnDeleteIndex(a, iTarget, splice) {\n  var iTargetIndex = -1;\n  for (var i = 0, iLen = a.length; i < iLen; i++) {\n    if (a[i] == iTarget) {\n      iTargetIndex = i;\n    } else if (a[i] > iTarget) {\n      a[i]--;\n    }\n  }\n  if (iTargetIndex != -1 && splice === undefined) {\n    a.splice(iTargetIndex, 1);\n  }\n}\n\n/**\r\n * Mark cached data as invalid such that a re-read of the data will occur when\r\n * the cached data is next requested. Also update from the data source object.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {int}    rowIdx   Row index to invalidate\r\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\r\n *     or 'data'\r\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\r\n *     row will be invalidated\r\n * @memberof DataTable#oApi\r\n *\r\n * @todo For the modularisation of v1.11 this will need to become a callback, so\r\n *   the sort and filter methods can subscribe to it. That will required\r\n *   initialisation options for sorting, which is why it is not already baked in\r\n */\nfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n  var row = settings.aoData[rowIdx];\n  var i, ien;\n  var cellWrite = function (cell, col) {\n    // This is very frustrating, but in IE if you just write directly\n    // to innerHTML, and elements that are overwritten are GC'ed,\n    // even if there is a reference to them elsewhere\n    while (cell.childNodes.length) {\n      cell.removeChild(cell.firstChild);\n    }\n    cell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n  };\n\n  // Are we reading last data from DOM or the data object?\n  if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n    // Read the data from the DOM\n    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n  } else {\n    // Reading from data object, update the DOM\n    var cells = row.anCells;\n    if (cells) {\n      if (colIdx !== undefined) {\n        cellWrite(cells[colIdx], colIdx);\n      } else {\n        for (i = 0, ien = cells.length; i < ien; i++) {\n          cellWrite(cells[i], i);\n        }\n      }\n    }\n  }\n\n  // For both row and cell invalidation, the cached data for sorting and\n  // filtering is nulled out\n  row._aSortData = null;\n  row._aFilterData = null;\n\n  // Invalidate the type for a specific column (if given) or all columns since\n  // the data might have changed\n  var cols = settings.aoColumns;\n  if (colIdx !== undefined) {\n    cols[colIdx].sType = null;\n  } else {\n    for (i = 0, ien = cols.length; i < ien; i++) {\n      cols[i].sType = null;\n    }\n\n    // Update DataTables special `DT_*` attributes for the row\n    _fnRowAttributes(settings, row);\n  }\n}\n\n/**\r\n * Build a data source object from an HTML row, reading the contents of the\r\n * cells that are in the row.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {node|object} TR element from which to read data or existing row\r\n *   object from which to re-read the data from the cells\r\n * @param {int} [colIdx] Optional column index\r\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\r\n *   parameter should also be given and will be used to write the data into.\r\n *   Only the column in question will be written\r\n * @returns {object} Object with two parameters: `data` the data read, in\r\n *   document order, and `cells` and array of nodes (they can be useful to the\r\n *   caller, so rather than needing a second traversal to get them, just return\r\n *   them from here).\r\n * @memberof DataTable#oApi\r\n */\nfunction _fnGetRowElements(settings, row, colIdx, d) {\n  var tds = [],\n    td = row.firstChild,\n    name,\n    col,\n    o,\n    i = 0,\n    contents,\n    columns = settings.aoColumns,\n    objectRead = settings._rowReadObject;\n\n  // Allow the data object to be passed in, or construct\n  d = d !== undefined ? d : objectRead ? {} : [];\n  var attr = function (str, td) {\n    if (typeof str === 'string') {\n      var idx = str.indexOf('@');\n      if (idx !== -1) {\n        var attr = str.substring(idx + 1);\n        var setter = _fnSetObjectDataFn(str);\n        setter(d, td.getAttribute(attr));\n      }\n    }\n  };\n\n  // Read data from a cell and store into the data object\n  var cellProcess = function (cell) {\n    if (colIdx === undefined || colIdx === i) {\n      col = columns[i];\n      contents = cell.innerHTML.trim();\n      if (col && col._bAttrSrc) {\n        var setter = _fnSetObjectDataFn(col.mData._);\n        setter(d, contents);\n        attr(col.mData.sort, cell);\n        attr(col.mData.type, cell);\n        attr(col.mData.filter, cell);\n      } else {\n        // Depending on the `data` option for the columns the data can\n        // be read to either an object or an array.\n        if (objectRead) {\n          if (!col._setter) {\n            // Cache the setter function\n            col._setter = _fnSetObjectDataFn(col.mData);\n          }\n          col._setter(d, contents);\n        } else {\n          d[i] = contents;\n        }\n      }\n    }\n    i++;\n  };\n  if (td) {\n    // `tr` element was passed in\n    while (td) {\n      name = td.nodeName.toUpperCase();\n      if (name == \"TD\" || name == \"TH\") {\n        cellProcess(td);\n        tds.push(td);\n      }\n      td = td.nextSibling;\n    }\n  } else {\n    // Existing row object passed in\n    tds = row.anCells;\n    for (var j = 0, jen = tds.length; j < jen; j++) {\n      cellProcess(tds[j]);\n    }\n  }\n\n  // Read the ID from the DOM if present\n  var rowNode = row.firstChild ? row : row.nTr;\n  if (rowNode) {\n    var id = rowNode.getAttribute('id');\n    if (id) {\n      _fnSetObjectDataFn(settings.rowId)(d, id);\n    }\n  }\n  return {\n    data: d,\n    cells: tds\n  };\n}\n/**\r\n * Create a new TR element (and it's TD children) for a row\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow Row to consider\r\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n  var row = oSettings.aoData[iRow],\n    rowData = row._aData,\n    cells = [],\n    nTr,\n    nTd,\n    oCol,\n    i,\n    iLen,\n    create;\n  if (row.nTr === null) {\n    nTr = nTrIn || document.createElement('tr');\n    row.nTr = nTr;\n    row.anCells = cells;\n\n    /* Use a private property on the node to allow reserve mapping from the node\r\n     * to the aoData array for fast look up\r\n     */\n    nTr._DT_RowIndex = iRow;\n\n    /* Special parameters can be given by the data source to be used on the row */\n    _fnRowAttributes(oSettings, row);\n\n    /* Process each column */\n    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n      oCol = oSettings.aoColumns[i];\n      create = nTrIn ? false : true;\n      nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n      if (!nTd) {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n      nTd._DT_CellIndex = {\n        row: iRow,\n        column: i\n      };\n      cells.push(nTd);\n\n      // Need to create the HTML if new, or if a rendering function is defined\n      if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n        nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n      }\n\n      /* Add user defined class */\n      if (oCol.sClass) {\n        nTd.className += ' ' + oCol.sClass;\n      }\n\n      // Visibility - add or remove as required\n      if (oCol.bVisible && !nTrIn) {\n        nTr.appendChild(nTd);\n      } else if (!oCol.bVisible && nTrIn) {\n        nTd.parentNode.removeChild(nTd);\n      }\n      if (oCol.fnCreatedCell) {\n        oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n      }\n    }\n    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells]);\n  }\n}\n\n/**\r\n * Add attributes to a row based on the special `DT_*` parameters in a data\r\n * source object.\r\n *  @param {object} settings DataTables settings object\r\n *  @param {object} DataTables row object for the row to be modified\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnRowAttributes(settings, row) {\n  var tr = row.nTr;\n  var data = row._aData;\n  if (tr) {\n    var id = settings.rowIdFn(data);\n    if (id) {\n      tr.id = id;\n    }\n    if (data.DT_RowClass) {\n      // Remove any classes added by DT_RowClass before\n      var a = data.DT_RowClass.split(' ');\n      row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n      $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n    }\n    if (data.DT_RowAttr) {\n      $(tr).attr(data.DT_RowAttr);\n    }\n    if (data.DT_RowData) {\n      $(tr).data(data.DT_RowData);\n    }\n  }\n}\n\n/**\r\n * Create the HTML header for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnBuildHead(oSettings) {\n  var i, ien, cell, row, column;\n  var thead = oSettings.nTHead;\n  var tfoot = oSettings.nTFoot;\n  var createHeader = $('th, td', thead).length === 0;\n  var classes = oSettings.oClasses;\n  var columns = oSettings.aoColumns;\n  if (createHeader) {\n    row = $('<tr/>').appendTo(thead);\n  }\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    column = columns[i];\n    cell = $(column.nTh).addClass(column.sClass);\n    if (createHeader) {\n      cell.appendTo(row);\n    }\n\n    // 1.11 move into sorting\n    if (oSettings.oFeatures.bSort) {\n      cell.addClass(column.sSortingClass);\n      if (column.bSortable !== false) {\n        cell.attr('tabindex', oSettings.iTabIndex).attr('aria-controls', oSettings.sTableId);\n        _fnSortAttachListener(oSettings, column.nTh, i);\n      }\n    }\n    if (column.sTitle != cell[0].innerHTML) {\n      cell.html(column.sTitle);\n    }\n    _fnRenderer(oSettings, 'header')(oSettings, cell, column, classes);\n  }\n  if (createHeader) {\n    _fnDetectHeader(oSettings.aoHeader, thead);\n  }\n\n  /* Deal with the footer - add classes if required */\n  $(thead).children('tr').children('th, td').addClass(classes.sHeaderTH);\n  $(tfoot).children('tr').children('th, td').addClass(classes.sFooterTH);\n\n  // Cache the footer cells. Note that we only take the cells from the first\n  // row in the footer. If there is more than one row the user wants to\n  // interact with, they need to use the table().foot() method. Note also this\n  // allows cells to be used for multiple columns using colspan\n  if (tfoot !== null) {\n    var cells = oSettings.aoFooter[0];\n    for (i = 0, ien = cells.length; i < ien; i++) {\n      column = columns[i];\n      if (column) {\n        column.nTf = cells[i].cell;\n        if (column.sClass) {\n          $(column.nTf).addClass(column.sClass);\n        }\n      } else {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n    }\n  }\n}\n\n/**\r\n * Draw the header (or footer) element based on the column visibility states. The\r\n * methodology here is to use the layout array from _fnDetectHeader, modified for\r\n * the instantaneous column visibility, to construct the new layout. The grid is\r\n * traversed over cell at a time in a rows x columns grid fashion, although each\r\n * cell insert can cover multiple elements in the grid - which is tracks using the\r\n * aApplied array. Cell inserts in the grid will only occur where there isn't\r\n * already a cell in that position.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\r\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnDrawHead(oSettings, aoSource, bIncludeHidden) {\n  var i, iLen, j, jLen, k, kLen, n, nLocalTr;\n  var aoLocal = [];\n  var aApplied = [];\n  var iColumns = oSettings.aoColumns.length;\n  var iRowspan, iColspan;\n  if (!aoSource) {\n    return;\n  }\n  if (bIncludeHidden === undefined) {\n    bIncludeHidden = false;\n  }\n\n  /* Make a copy of the master layout array, but without the visible columns in it */\n  for (i = 0, iLen = aoSource.length; i < iLen; i++) {\n    aoLocal[i] = aoSource[i].slice();\n    aoLocal[i].nTr = aoSource[i].nTr;\n\n    /* Remove any columns which are currently hidden */\n    for (j = iColumns - 1; j >= 0; j--) {\n      if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n        aoLocal[i].splice(j, 1);\n      }\n    }\n\n    /* Prep the applied array - it needs an element for each row */\n    aApplied.push([]);\n  }\n  for (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n    nLocalTr = aoLocal[i].nTr;\n\n    /* All cells are going to be replaced, so empty out the row */\n    if (nLocalTr) {\n      while (n = nLocalTr.firstChild) {\n        nLocalTr.removeChild(n);\n      }\n    }\n    for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n      iRowspan = 1;\n      iColspan = 1;\n\n      /* Check to see if there is already a cell (row/colspan) covering our target\r\n       * insert point. If there is, then there is nothing to do.\r\n       */\n      if (aApplied[i][j] === undefined) {\n        nLocalTr.appendChild(aoLocal[i][j].cell);\n        aApplied[i][j] = 1;\n\n        /* Expand the cell to cover as many rows as needed */\n        while (aoLocal[i + iRowspan] !== undefined && aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n          aApplied[i + iRowspan][j] = 1;\n          iRowspan++;\n        }\n\n        /* Expand the cell to cover as many columns as needed */\n        while (aoLocal[i][j + iColspan] !== undefined && aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n          /* Must update the applied array over the rows for the columns */\n          for (k = 0; k < iRowspan; k++) {\n            aApplied[i + k][j + iColspan] = 1;\n          }\n          iColspan++;\n        }\n\n        /* Do the actual expansion in the DOM */\n        $(aoLocal[i][j].cell).attr('rowspan', iRowspan).attr('colspan', iColspan);\n      }\n    }\n  }\n}\n\n/**\r\n * Insert the required TR nodes into the table for display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param ajaxComplete true after ajax call to complete rendering\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnDraw(oSettings, ajaxComplete) {\n  // Allow for state saving and a custom start position\n  _fnStart(oSettings);\n\n  /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n  var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n  if ($.inArray(false, aPreDraw) !== -1) {\n    _fnProcessingDisplay(oSettings, false);\n    return;\n  }\n  var anRows = [];\n  var iRowCount = 0;\n  var asStripeClasses = oSettings.asStripeClasses;\n  var iStripes = asStripeClasses.length;\n  var oLang = oSettings.oLanguage;\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var aiDisplay = oSettings.aiDisplay;\n  var iDisplayStart = oSettings._iDisplayStart;\n  var iDisplayEnd = oSettings.fnDisplayEnd();\n  oSettings.bDrawing = true;\n\n  /* Server-side processing draw intercept */\n  if (oSettings.bDeferLoading) {\n    oSettings.bDeferLoading = false;\n    oSettings.iDraw++;\n    _fnProcessingDisplay(oSettings, false);\n  } else if (!bServerSide) {\n    oSettings.iDraw++;\n  } else if (!oSettings.bDestroying && !ajaxComplete) {\n    _fnAjaxUpdate(oSettings);\n    return;\n  }\n  if (aiDisplay.length !== 0) {\n    var iStart = bServerSide ? 0 : iDisplayStart;\n    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n    for (var j = iStart; j < iEnd; j++) {\n      var iDataIndex = aiDisplay[j];\n      var aoData = oSettings.aoData[iDataIndex];\n      if (aoData.nTr === null) {\n        _fnCreateTr(oSettings, iDataIndex);\n      }\n      var nRow = aoData.nTr;\n\n      /* Remove the old striping classes and then add the new one */\n      if (iStripes !== 0) {\n        var sStripe = asStripeClasses[iRowCount % iStripes];\n        if (aoData._sRowStripe != sStripe) {\n          $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n          aoData._sRowStripe = sStripe;\n        }\n      }\n\n      // Row callback functions - might want to manipulate the row\n      // iRowCount and j are not currently documented. Are they at all\n      // useful?\n      _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n      anRows.push(nRow);\n      iRowCount++;\n    }\n  } else {\n    /* Table is empty - create a row with an empty message in it */\n    var sZero = oLang.sZeroRecords;\n    if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n      sZero = oLang.sLoadingRecords;\n    } else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n      sZero = oLang.sEmptyTable;\n    }\n    anRows[0] = $('<tr/>', {\n      'class': iStripes ? asStripeClasses[0] : ''\n    }).append($('<td />', {\n      'valign': 'top',\n      'colSpan': _fnVisbleColumns(oSettings),\n      'class': oSettings.oClasses.sRowEmpty\n    }).html(sZero))[0];\n  }\n\n  /* Header and footer callbacks */\n  _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n  _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n  var body = $(oSettings.nTBody);\n  body.children().detach();\n  body.append($(anRows));\n\n  /* Call all required callback functions for the end of a draw */\n  _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n\n  /* Draw is complete, sorting and filtering must be as well */\n  oSettings.bSorted = false;\n  oSettings.bFiltered = false;\n  oSettings.bDrawing = false;\n}\n\n/**\r\n * Redraw the table - taking account of the various features which are enabled\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\r\n *    the paging is reset to the first page\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnReDraw(settings, holdPosition) {\n  var features = settings.oFeatures,\n    sort = features.bSort,\n    filter = features.bFilter;\n  if (sort) {\n    _fnSort(settings);\n  }\n  if (filter) {\n    _fnFilterComplete(settings, settings.oPreviousSearch);\n  } else {\n    // No filtering, so we want to just use the display master\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n  }\n  if (holdPosition !== true) {\n    settings._iDisplayStart = 0;\n  }\n\n  // Let any modules know about the draw hold position state (used by\n  // scrolling internally)\n  settings._drawHold = holdPosition;\n  _fnDraw(settings);\n  settings._drawHold = false;\n}\n\n/**\r\n * Add the options to the page HTML for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAddOptionsHtml(oSettings) {\n  var classes = oSettings.oClasses;\n  var table = $(oSettings.nTable);\n  var holding = $('<div/>').insertBefore(table); // Holding element for speed\n  var features = oSettings.oFeatures;\n\n  // All DataTables are wrapped in a div\n  var insert = $('<div/>', {\n    id: oSettings.sTableId + '_wrapper',\n    'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n  });\n  oSettings.nHolding = holding[0];\n  oSettings.nTableWrapper = insert[0];\n  oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n  /* Loop over the user set positioning and place the elements as needed */\n  var aDom = oSettings.sDom.split('');\n  var featureNode, cOption, nNewNode, cNext, sAttr, j;\n  for (var i = 0; i < aDom.length; i++) {\n    featureNode = null;\n    cOption = aDom[i];\n    if (cOption == '<') {\n      /* New container div */\n      nNewNode = $('<div/>')[0];\n\n      /* Check to see if we should append an id and/or a class name to the container */\n      cNext = aDom[i + 1];\n      if (cNext == \"'\" || cNext == '\"') {\n        sAttr = \"\";\n        j = 2;\n        while (aDom[i + j] != cNext) {\n          sAttr += aDom[i + j];\n          j++;\n        }\n\n        /* Replace jQuery UI constants @todo depreciated */\n        if (sAttr == \"H\") {\n          sAttr = classes.sJUIHeader;\n        } else if (sAttr == \"F\") {\n          sAttr = classes.sJUIFooter;\n        }\n\n        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\r\n         * breaks the string into parts and applies them as needed\r\n         */\n        if (sAttr.indexOf('.') != -1) {\n          var aSplit = sAttr.split('.');\n          nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n          nNewNode.className = aSplit[1];\n        } else if (sAttr.charAt(0) == \"#\") {\n          nNewNode.id = sAttr.substr(1, sAttr.length - 1);\n        } else {\n          nNewNode.className = sAttr;\n        }\n        i += j; /* Move along the position array */\n      }\n\n      insert.append(nNewNode);\n      insert = $(nNewNode);\n    } else if (cOption == '>') {\n      /* End container div */\n      insert = insert.parent();\n    }\n    // @todo Move options into their own plugins?\n    else if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n      /* Length */\n      featureNode = _fnFeatureHtmlLength(oSettings);\n    } else if (cOption == 'f' && features.bFilter) {\n      /* Filter */\n      featureNode = _fnFeatureHtmlFilter(oSettings);\n    } else if (cOption == 'r' && features.bProcessing) {\n      /* pRocessing */\n      featureNode = _fnFeatureHtmlProcessing(oSettings);\n    } else if (cOption == 't') {\n      /* Table */\n      featureNode = _fnFeatureHtmlTable(oSettings);\n    } else if (cOption == 'i' && features.bInfo) {\n      /* Info */\n      featureNode = _fnFeatureHtmlInfo(oSettings);\n    } else if (cOption == 'p' && features.bPaginate) {\n      /* Pagination */\n      featureNode = _fnFeatureHtmlPaginate(oSettings);\n    } else if (DataTable.ext.feature.length !== 0) {\n      /* Plug-in features */\n      var aoFeatures = DataTable.ext.feature;\n      for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n        if (cOption == aoFeatures[k].cFeature) {\n          featureNode = aoFeatures[k].fnInit(oSettings);\n          break;\n        }\n      }\n    }\n\n    /* Add to the 2D features array */\n    if (featureNode) {\n      var aanFeatures = oSettings.aanFeatures;\n      if (!aanFeatures[cOption]) {\n        aanFeatures[cOption] = [];\n      }\n      aanFeatures[cOption].push(featureNode);\n      insert.append(featureNode);\n    }\n  }\n\n  /* Built our DOM structure - replace the holding div with what we want */\n  holding.replaceWith(insert);\n  oSettings.nHolding = null;\n}\n\n/**\r\n * Use the DOM source to create up an array of header cells. The idea here is to\r\n * create a layout grid (array) of rows x columns, which contains a reference\r\n * to the cell that that point in the grid (regardless of col/rowspan), such that\r\n * any column / row could be removed and the new grid constructed\r\n *  @param array {object} aLayout Array to store the calculated layout in\r\n *  @param {node} nThead The header/footer element for the table\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnDetectHeader(aLayout, nThead) {\n  var nTrs = $(nThead).children('tr');\n  var nTr, nCell;\n  var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n  var bUnique;\n  var fnShiftCol = function (a, i, j) {\n    var k = a[i];\n    while (k[j]) {\n      j++;\n    }\n    return j;\n  };\n  aLayout.splice(0, aLayout.length);\n\n  /* We know how many rows there are in the layout - so prep it */\n  for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n    aLayout.push([]);\n  }\n\n  /* Calculate a layout array */\n  for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n    nTr = nTrs[i];\n    iColumn = 0;\n\n    /* For every cell in the row... */\n    nCell = nTr.firstChild;\n    while (nCell) {\n      if (nCell.nodeName.toUpperCase() == \"TD\" || nCell.nodeName.toUpperCase() == \"TH\") {\n        /* Get the col and rowspan attributes from the DOM and sanitise them */\n        iColspan = nCell.getAttribute('colspan') * 1;\n        iRowspan = nCell.getAttribute('rowspan') * 1;\n        iColspan = !iColspan || iColspan === 0 || iColspan === 1 ? 1 : iColspan;\n        iRowspan = !iRowspan || iRowspan === 0 || iRowspan === 1 ? 1 : iRowspan;\n\n        /* There might be colspan cells already in this row, so shift our target\r\n         * accordingly\r\n         */\n        iColShifted = fnShiftCol(aLayout, i, iColumn);\n\n        /* Cache calculation for unique columns */\n        bUnique = iColspan === 1 ? true : false;\n\n        /* If there is col / rowspan, copy the information into the layout grid */\n        for (l = 0; l < iColspan; l++) {\n          for (k = 0; k < iRowspan; k++) {\n            aLayout[i + k][iColShifted + l] = {\n              \"cell\": nCell,\n              \"unique\": bUnique\n            };\n            aLayout[i + k].nTr = nTr;\n          }\n        }\n      }\n      nCell = nCell.nextSibling;\n    }\n  }\n}\n\n/**\r\n * Get an array of unique th elements, one for each column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nHeader automatically detect the layout from this node - optional\r\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\r\n *  @returns array {node} aReturn list of unique th's\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnGetUniqueThs(oSettings, nHeader, aLayout) {\n  var aReturn = [];\n  if (!aLayout) {\n    aLayout = oSettings.aoHeader;\n    if (nHeader) {\n      aLayout = [];\n      _fnDetectHeader(aLayout, nHeader);\n    }\n  }\n  for (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n    for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n      if (aLayout[i][j].unique && (!aReturn[j] || !oSettings.bSortCellsTop)) {\n        aReturn[j] = aLayout[i][j].cell;\n      }\n    }\n  }\n  return aReturn;\n}\n\n/**\r\n * Set the start position for draw\r\n *  @param {object} oSettings dataTables settings object\r\n */\nfunction _fnStart(oSettings) {\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var iInitDisplayStart = oSettings.iInitDisplayStart;\n\n  // Check and see if we have an initial draw position from state saving\n  if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n    oSettings.iInitDisplayStart = -1;\n  }\n}\n\n/**\r\n * Create an Ajax call based on the table's settings, taking into account that\r\n * parameters can have multiple forms, and backwards compatibility.\r\n *\r\n * @param {object} oSettings dataTables settings object\r\n * @param {array} data Data to send to the server, required by\r\n *     DataTables - may be augmented by developer callbacks\r\n * @param {function} fn Callback function to run when data is obtained\r\n */\nfunction _fnBuildAjax(oSettings, data, fn) {\n  // Compatibility with 1.9-, allow fnServerData and event to manipulate\n  _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]);\n\n  // Convert to object based for 1.10+ if using the old array scheme which can\n  // come from server-side processing or serverParams\n  if (data && Array.isArray(data)) {\n    var tmp = {};\n    var rbracket = /(.*?)\\[\\]$/;\n    $.each(data, function (key, val) {\n      var match = val.name.match(rbracket);\n      if (match) {\n        // Support for arrays\n        var name = match[0];\n        if (!tmp[name]) {\n          tmp[name] = [];\n        }\n        tmp[name].push(val.value);\n      } else {\n        tmp[val.name] = val.value;\n      }\n    });\n    data = tmp;\n  }\n  var ajaxData;\n  var ajax = oSettings.ajax;\n  var instance = oSettings.oInstance;\n  var callback = function (json) {\n    var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n    if (json === null || typeof status === 'number' && status == 204) {\n      json = {};\n      _fnAjaxDataSrc(oSettings, json, []);\n    }\n    var error = json.error || json.sError;\n    if (error) {\n      _fnLog(oSettings, 0, error);\n    }\n    oSettings.json = json;\n    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);\n    fn(json);\n  };\n  if ($.isPlainObject(ajax) && ajax.data) {\n    ajaxData = ajax.data;\n    var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) :\n    // fn can manipulate data or return\n    ajaxData; // an object object or array to merge\n\n    // If the function returned something, use that alone\n    data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData);\n\n    // Remove the data property as we've resolved it already and don't want\n    // jQuery to do it again (it is restored at the end of the function)\n    delete ajax.data;\n  }\n  var baseAjax = {\n    \"data\": data,\n    \"success\": callback,\n    \"dataType\": \"json\",\n    \"cache\": false,\n    \"type\": oSettings.sServerMethod,\n    \"error\": function (xhr, error, thrown) {\n      var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);\n      if ($.inArray(true, ret) === -1) {\n        if (error == \"parsererror\") {\n          _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n        } else if (xhr.readyState === 4) {\n          _fnLog(oSettings, 0, 'Ajax error', 7);\n        }\n      }\n      _fnProcessingDisplay(oSettings, false);\n    }\n  };\n\n  // Store the data submitted for the API\n  oSettings.oAjaxData = data;\n\n  // Allow plug-ins and external processes to modify the data\n  _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n  if (oSettings.fnServerData) {\n    // DataTables 1.9- compatibility\n    oSettings.fnServerData.call(instance, oSettings.sAjaxSource, $.map(data, function (val, key) {\n      // Need to convert back to 1.9 trad format\n      return {\n        name: key,\n        value: val\n      };\n    }), callback, oSettings);\n  } else if (oSettings.sAjaxSource || typeof ajax === 'string') {\n    // DataTables 1.9- compatibility\n    oSettings.jqXHR = $.ajax($.extend(baseAjax, {\n      url: ajax || oSettings.sAjaxSource\n    }));\n  } else if (typeof ajax === 'function') {\n    // Is a function - let the caller define what needs to be done\n    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n  } else {\n    // Object to extend the base settings\n    oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));\n\n    // Restore for next time around\n    ajax.data = ajaxData;\n  }\n}\n\n/**\r\n * Update the table using an Ajax call\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {boolean} Block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAjaxUpdate(settings) {\n  settings.iDraw++;\n  _fnProcessingDisplay(settings, true);\n  _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n    _fnAjaxUpdateDraw(settings, json);\n  });\n}\n\n/**\r\n * Build up the parameters in an object needed for a server-side processing\r\n * request. Note that this is basically done twice, is different ways - a modern\r\n * method which is used by default in DataTables 1.10 which uses objects and\r\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\r\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\r\n * option is set.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {bool} block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAjaxParameters(settings) {\n  var columns = settings.aoColumns,\n    columnCount = columns.length,\n    features = settings.oFeatures,\n    preSearch = settings.oPreviousSearch,\n    preColSearch = settings.aoPreSearchCols,\n    i,\n    data = [],\n    dataProp,\n    column,\n    columnSearch,\n    sort = _fnSortFlatten(settings),\n    displayStart = settings._iDisplayStart,\n    displayLength = features.bPaginate !== false ? settings._iDisplayLength : -1;\n  var param = function (name, value) {\n    data.push({\n      'name': name,\n      'value': value\n    });\n  };\n\n  // DataTables 1.9- compatible method\n  param('sEcho', settings.iDraw);\n  param('iColumns', columnCount);\n  param('sColumns', _pluck(columns, 'sName').join(','));\n  param('iDisplayStart', displayStart);\n  param('iDisplayLength', displayLength);\n\n  // DataTables 1.10+ method\n  var d = {\n    draw: settings.iDraw,\n    columns: [],\n    order: [],\n    start: displayStart,\n    length: displayLength,\n    search: {\n      value: preSearch.sSearch,\n      regex: preSearch.bRegex\n    }\n  };\n  for (i = 0; i < columnCount; i++) {\n    column = columns[i];\n    columnSearch = preColSearch[i];\n    dataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n    d.columns.push({\n      data: dataProp,\n      name: column.sName,\n      searchable: column.bSearchable,\n      orderable: column.bSortable,\n      search: {\n        value: columnSearch.sSearch,\n        regex: columnSearch.bRegex\n      }\n    });\n    param(\"mDataProp_\" + i, dataProp);\n    if (features.bFilter) {\n      param('sSearch_' + i, columnSearch.sSearch);\n      param('bRegex_' + i, columnSearch.bRegex);\n      param('bSearchable_' + i, column.bSearchable);\n    }\n    if (features.bSort) {\n      param('bSortable_' + i, column.bSortable);\n    }\n  }\n  if (features.bFilter) {\n    param('sSearch', preSearch.sSearch);\n    param('bRegex', preSearch.bRegex);\n  }\n  if (features.bSort) {\n    $.each(sort, function (i, val) {\n      d.order.push({\n        column: val.col,\n        dir: val.dir\n      });\n      param('iSortCol_' + i, val.col);\n      param('sSortDir_' + i, val.dir);\n    });\n    param('iSortingCols', sort.length);\n  }\n\n  // If the legacy.ajax parameter is null, then we automatically decide which\n  // form to use, based on sAjaxSource\n  var legacy = DataTable.ext.legacy.ajax;\n  if (legacy === null) {\n    return settings.sAjaxSource ? data : d;\n  }\n\n  // Otherwise, if legacy has been specified then we use that to decide on the\n  // form\n  return legacy ? data : d;\n}\n\n/**\r\n * Data the data from the server (nuking the old) and redraw the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} json json data return from the server.\r\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\r\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\r\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\r\n *  @param {array} json.aaData The data to display on this page\r\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnAjaxUpdateDraw(settings, json) {\n  // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n  // Support both\n  var compat = function (old, modern) {\n    return json[old] !== undefined ? json[old] : json[modern];\n  };\n  var data = _fnAjaxDataSrc(settings, json);\n  var draw = compat('sEcho', 'draw');\n  var recordsTotal = compat('iTotalRecords', 'recordsTotal');\n  var recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n  if (draw !== undefined) {\n    // Protect against out of sequence returns\n    if (draw * 1 < settings.iDraw) {\n      return;\n    }\n    settings.iDraw = draw * 1;\n  }\n\n  // No data in returned object, so rather than an array, we show an empty table\n  if (!data) {\n    data = [];\n  }\n  _fnClearTable(settings);\n  settings._iRecordsTotal = parseInt(recordsTotal, 10);\n  settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n  for (var i = 0, ien = data.length; i < ien; i++) {\n    _fnAddData(settings, data[i]);\n  }\n  settings.aiDisplay = settings.aiDisplayMaster.slice();\n  _fnDraw(settings, true);\n  if (!settings._bInitComplete) {\n    _fnInitComplete(settings, json);\n  }\n  _fnProcessingDisplay(settings, false);\n}\n\n/**\r\n * Get the data from the JSON data source to use for drawing a table. Using\r\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\r\n * source object, or from a processing function.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param  {object} json Data source object / array from the server\r\n *  @return {array} Array of data to use\r\n */\nfunction _fnAjaxDataSrc(oSettings, json, write) {\n  var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ? oSettings.ajax.dataSrc : oSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n  if (!write) {\n    if (dataSrc === 'data') {\n      // If the default, then we still want to support the old style, and safely ignore\n      // it if possible\n      return json.aaData || json[dataSrc];\n    }\n    return dataSrc !== \"\" ? _fnGetObjectDataFn(dataSrc)(json) : json;\n  }\n\n  // set\n  _fnSetObjectDataFn(dataSrc)(json, write);\n}\n\n/**\r\n * Generate the node required for filtering text\r\n *  @returns {node} Filter control element\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFeatureHtmlFilter(settings) {\n  var classes = settings.oClasses;\n  var tableId = settings.sTableId;\n  var language = settings.oLanguage;\n  var previousSearch = settings.oPreviousSearch;\n  var features = settings.aanFeatures;\n  var input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n  var str = language.sSearch;\n  str = str.match(/_INPUT_/) ? str.replace('_INPUT_', input) : str + input;\n  var filter = $('<div/>', {\n    'id': !features.f ? tableId + '_filter' : null,\n    'class': classes.sFilter\n  }).append($('<label/>').append(str));\n  var searchFn = function (event) {\n    /* Update all other filter input elements for the new display */\n    var n = features.f;\n    var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n    if (previousSearch.return && event.key !== \"Enter\") {\n      return;\n    }\n    /* Now do the filter */\n    if (val != previousSearch.sSearch) {\n      _fnFilterComplete(settings, {\n        \"sSearch\": val,\n        \"bRegex\": previousSearch.bRegex,\n        \"bSmart\": previousSearch.bSmart,\n        \"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n        \"return\": previousSearch.return\n      });\n\n      // Need to redraw, without resorting\n      settings._iDisplayStart = 0;\n      _fnDraw(settings);\n    }\n  };\n  var searchDelay = settings.searchDelay !== null ? settings.searchDelay : _fnDataSource(settings) === 'ssp' ? 400 : 0;\n  var jqFilter = $('input', filter).val(previousSearch.sSearch).attr('placeholder', language.sSearchPlaceholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? _fnThrottle(searchFn, searchDelay) : searchFn).on('mouseup', function (e) {\n    // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n    // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n    // checks the value to see if it has changed. In other browsers it won't have.\n    setTimeout(function () {\n      searchFn.call(jqFilter[0], e);\n    }, 10);\n  }).on('keypress.DT', function (e) {\n    /* Prevent form submission */\n    if (e.keyCode == 13) {\n      return false;\n    }\n  }).attr('aria-controls', tableId);\n\n  // Update the input elements whenever the table is filtered\n  $(settings.nTable).on('search.dt.DT', function (ev, s) {\n    if (settings === s) {\n      // IE9 throws an 'unknown error' if document.activeElement is used\n      // inside an iframe or frame...\n      try {\n        if (jqFilter[0] !== document.activeElement) {\n          jqFilter.val(previousSearch.sSearch);\n        }\n      } catch (e) {}\n    }\n  });\n  return filter[0];\n}\n\n/**\r\n * Filter the table using both the global filter and column based filtering\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oSearch search information\r\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFilterComplete(oSettings, oInput, iForce) {\n  var oPrevSearch = oSettings.oPreviousSearch;\n  var aoPrevSearch = oSettings.aoPreSearchCols;\n  var fnSaveFilter = function (oFilter) {\n    /* Save the filtering values */\n    oPrevSearch.sSearch = oFilter.sSearch;\n    oPrevSearch.bRegex = oFilter.bRegex;\n    oPrevSearch.bSmart = oFilter.bSmart;\n    oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n    oPrevSearch.return = oFilter.return;\n  };\n  var fnRegex = function (o) {\n    // Backwards compatibility with the bEscapeRegex option\n    return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n  };\n\n  // Resolve any column types that are unknown due to addition or invalidation\n  // @todo As per sort - can this be moved into an event handler?\n  _fnColumnTypes(oSettings);\n\n  /* In server-side processing all filtering is done by the server, so no point hanging around here */\n  if (_fnDataSource(oSettings) != 'ssp') {\n    /* Global filter */\n    _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return);\n    fnSaveFilter(oInput);\n\n    /* Now do the individual column filter */\n    for (var i = 0; i < aoPrevSearch.length; i++) {\n      _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]), aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n    }\n\n    /* Custom filtering */\n    _fnFilterCustom(oSettings);\n  } else {\n    fnSaveFilter(oInput);\n  }\n\n  /* Tell the draw function we have been filtering */\n  oSettings.bFiltered = true;\n  _fnCallbackFire(oSettings, null, 'search', [oSettings]);\n}\n\n/**\r\n * Apply custom filtering functions\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFilterCustom(settings) {\n  var filters = DataTable.ext.search;\n  var displayRows = settings.aiDisplay;\n  var row, rowIdx;\n  for (var i = 0, ien = filters.length; i < ien; i++) {\n    var rows = [];\n\n    // Loop over each row and see if it should be included\n    for (var j = 0, jen = displayRows.length; j < jen; j++) {\n      rowIdx = displayRows[j];\n      row = settings.aoData[rowIdx];\n      if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n        rows.push(rowIdx);\n      }\n    }\n\n    // So the array reference doesn't break set the results into the\n    // existing array\n    displayRows.length = 0;\n    $.merge(displayRows, rows);\n  }\n}\n\n/**\r\n * Filter the table on a per-column basis\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sInput string to filter on\r\n *  @param {int} iColumn column to filter\r\n *  @param {bool} bRegex treat search string as a regular expression or not\r\n *  @param {bool} bSmart use smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n  if (searchStr === '') {\n    return;\n  }\n  var data;\n  var out = [];\n  var display = settings.aiDisplay;\n  var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n  for (var i = 0; i < display.length; i++) {\n    data = settings.aoData[display[i]]._aFilterData[colIdx];\n    if (rpSearch.test(data)) {\n      out.push(display[i]);\n    }\n  }\n  settings.aiDisplay = out;\n}\n\n/**\r\n * Filter the data table based on user input and draw the table\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} input string to filter on\r\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\r\n *  @param {bool} regex treat as a regular expression or not\r\n *  @param {bool} smart perform smart filtering or not\r\n *  @param {bool} caseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFilter(settings, input, force, regex, smart, caseInsensitive) {\n  var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n  var prevSearch = settings.oPreviousSearch.sSearch;\n  var displayMaster = settings.aiDisplayMaster;\n  var display, invalidated, i;\n  var filtered = [];\n\n  // Need to take account of custom filtering functions - always filter\n  if (DataTable.ext.search.length !== 0) {\n    force = true;\n  }\n\n  // Check if any of the rows were invalidated\n  invalidated = _fnFilterData(settings);\n\n  // If the input is blank - we just want the full data set\n  if (input.length <= 0) {\n    settings.aiDisplay = displayMaster.slice();\n  } else {\n    // New search - start from the master array\n    if (invalidated || force || regex || prevSearch.length > input.length || input.indexOf(prevSearch) !== 0 || settings.bSorted // On resort, the display master needs to be\n    // re-filtered since indexes will have changed\n    ) {\n      settings.aiDisplay = displayMaster.slice();\n    }\n\n    // Search the display array\n    display = settings.aiDisplay;\n    for (i = 0; i < display.length; i++) {\n      if (rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {\n        filtered.push(display[i]);\n      }\n    }\n    settings.aiDisplay = filtered;\n  }\n}\n\n/**\r\n * Build a regular expression object suitable for searching a table\r\n *  @param {string} sSearch string to search for\r\n *  @param {bool} bRegex treat as a regular expression or not\r\n *  @param {bool} bSmart perform smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @returns {RegExp} constructed object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {\n  search = regex ? search : _fnEscapeRegex(search);\n  if (smart) {\n    /* For smart filtering we want to allow the search to work regardless of\r\n     * word order. We also want double quoted text to be preserved, so word\r\n     * order is important - a la google. So this is what we want to\r\n     * generate:\r\n     * \r\n     * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\r\n     */\n    var a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || [''], function (word) {\n      if (word.charAt(0) === '\"') {\n        var m = word.match(/^\"(.*)\"$/);\n        word = m ? m[1] : word;\n      }\n      return word.replace('\"', '');\n    });\n    search = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n  }\n  return new RegExp(search, caseInsensitive ? 'i' : '');\n}\n\n/**\r\n * Escape a string such that it can be used in a regular expression\r\n *  @param {string} sVal string to escape\r\n *  @returns {string} escaped string\r\n *  @memberof DataTable#oApi\r\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData(settings) {\n  var columns = settings.aoColumns;\n  var column;\n  var i, j, ien, jen, filterData, cellData, row;\n  var wasInvalidated = false;\n  for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n    row = settings.aoData[i];\n    if (!row._aFilterData) {\n      filterData = [];\n      for (j = 0, jen = columns.length; j < jen; j++) {\n        column = columns[j];\n        if (column.bSearchable) {\n          cellData = _fnGetCellData(settings, i, j, 'filter');\n\n          // Search in DataTables 1.10 is string based. In 1.11 this\n          // should be altered to also allow strict type checking.\n          if (cellData === null) {\n            cellData = '';\n          }\n          if (typeof cellData !== 'string' && cellData.toString) {\n            cellData = cellData.toString();\n          }\n        } else {\n          cellData = '';\n        }\n\n        // If it looks like there is an HTML entity in the string,\n        // attempt to decode it so sorting works as expected. Note that\n        // we could use a single line of jQuery to do this, but the DOM\n        // method used here is much faster http://jsperf.com/html-decode\n        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n          __filter_div.innerHTML = cellData;\n          cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n        }\n        if (cellData.replace) {\n          cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n        }\n        filterData.push(cellData);\n      }\n      row._aFilterData = filterData;\n      row._sFilterRow = filterData.join('  ');\n      wasInvalidated = true;\n    }\n  }\n  return wasInvalidated;\n}\n\n/**\r\n * Convert from the internal Hungarian notation to camelCase for external\r\n * interaction\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSearchToCamel(obj) {\n  return {\n    search: obj.sSearch,\n    smart: obj.bSmart,\n    regex: obj.bRegex,\n    caseInsensitive: obj.bCaseInsensitive\n  };\n}\n\n/**\r\n * Convert from camelCase notation to the internal Hungarian. We could use the\r\n * Hungarian convert function here, but this is cleaner\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSearchToHung(obj) {\n  return {\n    sSearch: obj.search,\n    bSmart: obj.smart,\n    bRegex: obj.regex,\n    bCaseInsensitive: obj.caseInsensitive\n  };\n}\n\n/**\r\n * Generate the node required for the info display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Information element\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFeatureHtmlInfo(settings) {\n  var tid = settings.sTableId,\n    nodes = settings.aanFeatures.i,\n    n = $('<div/>', {\n      'class': settings.oClasses.sInfo,\n      'id': !nodes ? tid + '_info' : null\n    });\n  if (!nodes) {\n    // Update display on each draw\n    settings.aoDrawCallback.push({\n      \"fn\": _fnUpdateInfo,\n      \"sName\": \"information\"\n    });\n    n.attr('role', 'status').attr('aria-live', 'polite');\n\n    // Table is described by our info div\n    $(settings.nTable).attr('aria-describedby', tid + '_info');\n  }\n  return n[0];\n}\n\n/**\r\n * Update the information elements in the display\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnUpdateInfo(settings) {\n  /* Show information about the table */\n  var nodes = settings.aanFeatures.i;\n  if (nodes.length === 0) {\n    return;\n  }\n  var lang = settings.oLanguage,\n    start = settings._iDisplayStart + 1,\n    end = settings.fnDisplayEnd(),\n    max = settings.fnRecordsTotal(),\n    total = settings.fnRecordsDisplay(),\n    out = total ? lang.sInfo : lang.sInfoEmpty;\n  if (total !== max) {\n    /* Record set after filtering */\n    out += ' ' + lang.sInfoFiltered;\n  }\n\n  // Convert the macros\n  out += lang.sInfoPostFix;\n  out = _fnInfoMacros(settings, out);\n  var callback = lang.fnInfoCallback;\n  if (callback !== null) {\n    out = callback.call(settings.oInstance, settings, start, end, max, total, out);\n  }\n  $(nodes).html(out);\n}\nfunction _fnInfoMacros(settings, str) {\n  // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n  // internally\n  var formatter = settings.fnFormatNumber,\n    start = settings._iDisplayStart + 1,\n    len = settings._iDisplayLength,\n    vis = settings.fnRecordsDisplay(),\n    all = len === -1;\n  return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n}\n\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnInitialise(settings) {\n  var i,\n    iLen,\n    iAjaxStart = settings.iInitDisplayStart;\n  var columns = settings.aoColumns,\n    column;\n  var features = settings.oFeatures;\n  var deferLoading = settings.bDeferLoading; // value modified by the draw\n\n  /* Ensure that the table data is fully initialised */\n  if (!settings.bInitialised) {\n    setTimeout(function () {\n      _fnInitialise(settings);\n    }, 200);\n    return;\n  }\n\n  /* Show the display HTML options */\n  _fnAddOptionsHtml(settings);\n\n  /* Build and draw the header / footer for the table */\n  _fnBuildHead(settings);\n  _fnDrawHead(settings, settings.aoHeader);\n  _fnDrawHead(settings, settings.aoFooter);\n\n  /* Okay to show that something is going on now */\n  _fnProcessingDisplay(settings, true);\n\n  /* Calculate sizes for columns */\n  if (features.bAutoWidth) {\n    _fnCalculateColumnWidths(settings);\n  }\n  for (i = 0, iLen = columns.length; i < iLen; i++) {\n    column = columns[i];\n    if (column.sWidth) {\n      column.nTh.style.width = _fnStringToCss(column.sWidth);\n    }\n  }\n  _fnCallbackFire(settings, null, 'preInit', [settings]);\n\n  // If there is default sorting required - let's do it. The sort function\n  // will do the drawing for us. Otherwise we draw the table regardless of the\n  // Ajax source - this allows the table to look initialised for Ajax sourcing\n  // data (show 'loading' message possibly)\n  _fnReDraw(settings);\n\n  // Server-side processing init complete is done by _fnAjaxUpdateDraw\n  var dataSrc = _fnDataSource(settings);\n  if (dataSrc != 'ssp' || deferLoading) {\n    // if there is an ajax source load the data\n    if (dataSrc == 'ajax') {\n      _fnBuildAjax(settings, [], function (json) {\n        var aData = _fnAjaxDataSrc(settings, json);\n\n        // Got the data - add it to the table\n        for (i = 0; i < aData.length; i++) {\n          _fnAddData(settings, aData[i]);\n        }\n\n        // Reset the init display for cookie saving. We've already done\n        // a filter, and therefore cleared it before. So we need to make\n        // it appear 'fresh'\n        settings.iInitDisplayStart = iAjaxStart;\n        _fnReDraw(settings);\n        _fnProcessingDisplay(settings, false);\n        _fnInitComplete(settings, json);\n      }, settings);\n    } else {\n      _fnProcessingDisplay(settings, false);\n      _fnInitComplete(settings);\n    }\n  }\n}\n\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\r\n *    with client-side processing (optional)\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnInitComplete(settings, json) {\n  settings._bInitComplete = true;\n\n  // When data was added after the initialisation (data or Ajax) we need to\n  // calculate the column sizing\n  if (json || settings.oInit.aaData) {\n    _fnAdjustColumnSizing(settings);\n  }\n  _fnCallbackFire(settings, null, 'plugin-init', [settings, json]);\n  _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n}\nfunction _fnLengthChange(settings, val) {\n  var len = parseInt(val, 10);\n  settings._iDisplayLength = len;\n  _fnLengthOverflow(settings);\n\n  // Fire length change event\n  _fnCallbackFire(settings, null, 'length', [settings, len]);\n}\n\n/**\r\n * Generate the node required for user display length changing\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Display length feature node\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFeatureHtmlLength(settings) {\n  var classes = settings.oClasses,\n    tableId = settings.sTableId,\n    menu = settings.aLengthMenu,\n    d2 = Array.isArray(menu[0]),\n    lengths = d2 ? menu[0] : menu,\n    language = d2 ? menu[1] : menu;\n  var select = $('<select/>', {\n    'name': tableId + '_length',\n    'aria-controls': tableId,\n    'class': classes.sLengthSelect\n  });\n  for (var i = 0, ien = lengths.length; i < ien; i++) {\n    select[0][i] = new Option(typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i], lengths[i]);\n  }\n  var div = $('<div><label/></div>').addClass(classes.sLength);\n  if (!settings.aanFeatures.l) {\n    div[0].id = tableId + '_length';\n  }\n  div.children().append(settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML));\n\n  // Can't use `select` variable as user might provide their own and the\n  // reference is broken by the use of outerHTML\n  $('select', div).val(settings._iDisplayLength).on('change.DT', function (e) {\n    _fnLengthChange(settings, $(this).val());\n    _fnDraw(settings);\n  });\n\n  // Update node value whenever anything changes the table's length\n  $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n    if (settings === s) {\n      $('select', div).val(len);\n    }\n  });\n  return div[0];\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Note that most of the paging logic is done in\r\n * DataTable.ext.pager\r\n */\n\n/**\r\n * Generate the node required for default pagination\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Pagination feature node\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFeatureHtmlPaginate(settings) {\n  var type = settings.sPaginationType,\n    plugin = DataTable.ext.pager[type],\n    modern = typeof plugin === 'function',\n    redraw = function (settings) {\n      _fnDraw(settings);\n    },\n    node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n    features = settings.aanFeatures;\n  if (!modern) {\n    plugin.fnInit(settings, node, redraw);\n  }\n\n  /* Add a draw callback for the pagination on first instance, to update the paging display */\n  if (!features.p) {\n    node.id = settings.sTableId + '_paginate';\n    settings.aoDrawCallback.push({\n      \"fn\": function (settings) {\n        if (modern) {\n          var start = settings._iDisplayStart,\n            len = settings._iDisplayLength,\n            visRecords = settings.fnRecordsDisplay(),\n            all = len === -1,\n            page = all ? 0 : Math.ceil(start / len),\n            pages = all ? 1 : Math.ceil(visRecords / len),\n            buttons = plugin(page, pages),\n            i,\n            ien;\n          for (i = 0, ien = features.p.length; i < ien; i++) {\n            _fnRenderer(settings, 'pageButton')(settings, features.p[i], i, buttons, page, pages);\n          }\n        } else {\n          plugin.fnUpdate(settings, redraw);\n        }\n      },\n      \"sName\": \"pagination\"\n    });\n  }\n  return node;\n}\n\n/**\r\n * Alter the display settings to change the page\r\n *  @param {object} settings DataTables settings object\r\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\r\n *    \"next\" or \"last\" or page number to jump to (integer)\r\n *  @param [bool] redraw Automatically draw the update or not\r\n *  @returns {bool} true page has changed, false - no change\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnPageChange(settings, action, redraw) {\n  var start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    records = settings.fnRecordsDisplay();\n  if (records === 0 || len === -1) {\n    start = 0;\n  } else if (typeof action === \"number\") {\n    start = action * len;\n    if (start > records) {\n      start = 0;\n    }\n  } else if (action == \"first\") {\n    start = 0;\n  } else if (action == \"previous\") {\n    start = len >= 0 ? start - len : 0;\n    if (start < 0) {\n      start = 0;\n    }\n  } else if (action == \"next\") {\n    if (start + len < records) {\n      start += len;\n    }\n  } else if (action == \"last\") {\n    start = Math.floor((records - 1) / len) * len;\n  } else {\n    _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n  }\n  var changed = settings._iDisplayStart !== start;\n  settings._iDisplayStart = start;\n  if (changed) {\n    _fnCallbackFire(settings, null, 'page', [settings]);\n    if (redraw) {\n      _fnDraw(settings);\n    }\n  } else {\n    // No change event - paging was called, but no change\n    _fnCallbackFire(settings, null, 'page-nc', [settings]);\n  }\n  return changed;\n}\n\n/**\r\n * Generate the node required for the processing node\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Processing element\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFeatureHtmlProcessing(settings) {\n  return $('<div/>', {\n    'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n    'class': settings.oClasses.sProcessing,\n    'role': 'status'\n  }).html(settings.oLanguage.sProcessing).append('<div><div></div><div></div><div></div><div></div></div>').insertBefore(settings.nTable)[0];\n}\n\n/**\r\n * Display or hide the processing indicator\r\n *  @param {object} settings dataTables settings object\r\n *  @param {bool} show Show the processing indicator (true) or not (false)\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnProcessingDisplay(settings, show) {\n  if (settings.oFeatures.bProcessing) {\n    $(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n  }\n  _fnCallbackFire(settings, null, 'processing', [settings, show]);\n}\n\n/**\r\n * Add any control elements for the table - specifically scrolling\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Node to add to the DOM\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnFeatureHtmlTable(settings) {\n  var table = $(settings.nTable);\n\n  // Scrolling from here on in\n  var scroll = settings.oScroll;\n  if (scroll.sX === '' && scroll.sY === '') {\n    return settings.nTable;\n  }\n  var scrollX = scroll.sX;\n  var scrollY = scroll.sY;\n  var classes = settings.oClasses;\n  var caption = table.children('caption');\n  var captionSide = caption.length ? caption[0]._captionSide : null;\n  var headerClone = $(table[0].cloneNode(false));\n  var footerClone = $(table[0].cloneNode(false));\n  var footer = table.children('tfoot');\n  var _div = '<div/>';\n  var size = function (s) {\n    return !s ? null : _fnStringToCss(s);\n  };\n  if (!footer.length) {\n    footer = null;\n  }\n\n  /*\r\n   * The HTML structure that we want to generate in this function is:\r\n   *  div - scroller\r\n   *    div - scroll head\r\n   *      div - scroll head inner\r\n   *        table - scroll head table\r\n   *          thead - thead\r\n   *    div - scroll body\r\n   *      table - table (master table)\r\n   *        thead - thead clone for sizing\r\n   *        tbody - tbody\r\n   *    div - scroll foot\r\n   *      div - scroll foot inner\r\n   *        table - scroll foot table\r\n   *          tfoot - tfoot\r\n   */\n  var scroller = $(_div, {\n    'class': classes.sScrollWrapper\n  }).append($(_div, {\n    'class': classes.sScrollHead\n  }).css({\n    overflow: 'hidden',\n    position: 'relative',\n    border: 0,\n    width: scrollX ? size(scrollX) : '100%'\n  }).append($(_div, {\n    'class': classes.sScrollHeadInner\n  }).css({\n    'box-sizing': 'content-box',\n    width: scroll.sXInner || '100%'\n  }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n    'class': classes.sScrollBody\n  }).css({\n    position: 'relative',\n    overflow: 'auto',\n    width: size(scrollX)\n  }).append(table));\n  if (footer) {\n    scroller.append($(_div, {\n      'class': classes.sScrollFoot\n    }).css({\n      overflow: 'hidden',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.sScrollFootInner\n    }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n  }\n  var children = scroller.children();\n  var scrollHead = children[0];\n  var scrollBody = children[1];\n  var scrollFoot = footer ? children[2] : null;\n\n  // When the body is scrolled, then we also want to scroll the headers\n  if (scrollX) {\n    $(scrollBody).on('scroll.DT', function (e) {\n      var scrollLeft = this.scrollLeft;\n      scrollHead.scrollLeft = scrollLeft;\n      if (footer) {\n        scrollFoot.scrollLeft = scrollLeft;\n      }\n    });\n  }\n  $(scrollBody).css('max-height', scrollY);\n  if (!scroll.bCollapse) {\n    $(scrollBody).css('height', scrollY);\n  }\n  settings.nScrollHead = scrollHead;\n  settings.nScrollBody = scrollBody;\n  settings.nScrollFoot = scrollFoot;\n\n  // On redraw - align columns\n  settings.aoDrawCallback.push({\n    \"fn\": _fnScrollDraw,\n    \"sName\": \"scrolling\"\n  });\n  return scroller[0];\n}\n\n/**\r\n * Update the header, footer and body tables for resizing - i.e. column\r\n * alignment.\r\n *\r\n * Welcome to the most horrible function DataTables. The process that this\r\n * function follows is basically:\r\n *   1. Re-create the table inside the scrolling div\r\n *   2. Take live measurements from the DOM\r\n *   3. Apply the measurements to align the columns\r\n *   4. Clean up\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnScrollDraw(settings) {\n  // Given that this is such a monster function, a lot of variables are use\n  // to try and keep the minimised size as small as possible\n  var scroll = settings.oScroll,\n    scrollX = scroll.sX,\n    scrollXInner = scroll.sXInner,\n    scrollY = scroll.sY,\n    barWidth = scroll.iBarWidth,\n    divHeader = $(settings.nScrollHead),\n    divHeaderStyle = divHeader[0].style,\n    divHeaderInner = divHeader.children('div'),\n    divHeaderInnerStyle = divHeaderInner[0].style,\n    divHeaderTable = divHeaderInner.children('table'),\n    divBodyEl = settings.nScrollBody,\n    divBody = $(divBodyEl),\n    divBodyStyle = divBodyEl.style,\n    divFooter = $(settings.nScrollFoot),\n    divFooterInner = divFooter.children('div'),\n    divFooterTable = divFooterInner.children('table'),\n    header = $(settings.nTHead),\n    table = $(settings.nTable),\n    tableEl = table[0],\n    tableStyle = tableEl.style,\n    footer = settings.nTFoot ? $(settings.nTFoot) : null,\n    browser = settings.oBrowser,\n    ie67 = browser.bScrollOversize,\n    dtHeaderCells = _pluck(settings.aoColumns, 'nTh'),\n    headerTrgEls,\n    footerTrgEls,\n    headerSrcEls,\n    footerSrcEls,\n    headerCopy,\n    footerCopy,\n    headerWidths = [],\n    footerWidths = [],\n    headerContent = [],\n    footerContent = [],\n    idx,\n    correction,\n    sanityWidth,\n    zeroOut = function (nSizer) {\n      var style = nSizer.style;\n      style.paddingTop = \"0\";\n      style.paddingBottom = \"0\";\n      style.borderTopWidth = \"0\";\n      style.borderBottomWidth = \"0\";\n      style.height = 0;\n    };\n\n  // If the scrollbar visibility has changed from the last draw, we need to\n  // adjust the column sizes as the table width will have changed to account\n  // for the scrollbar\n  var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n  if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n    settings.scrollBarVis = scrollBarVis;\n    _fnAdjustColumnSizing(settings);\n    return; // adjust column sizing will call this function again\n  } else {\n    settings.scrollBarVis = scrollBarVis;\n  }\n\n  /*\r\n   * 1. Re-create the table inside the scrolling div\r\n   */\n\n  // Remove the old minimised thead and tfoot elements in the inner table\n  table.children('thead, tfoot').remove();\n  if (footer) {\n    footerCopy = footer.clone().prependTo(table);\n    footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n    footerSrcEls = footerCopy.find('tr');\n    footerCopy.find('[id]').removeAttr('id');\n  }\n\n  // Clone the current header and footer elements and then place it into the inner table\n  headerCopy = header.clone().prependTo(table);\n  headerTrgEls = header.find('tr'); // original header is in its own table\n  headerSrcEls = headerCopy.find('tr');\n  headerCopy.find('th, td').removeAttr('tabindex');\n  headerCopy.find('[id]').removeAttr('id');\n\n  /*\r\n   * 2. Take live measurements from the DOM - do not alter the DOM itself!\r\n   */\n\n  // Remove old sizing and apply the calculated column widths\n  // Get the unique column headers in the newly created (cloned) header. We want to apply the\n  // calculated sizes to this header\n  if (!scrollX) {\n    divBodyStyle.width = '100%';\n    divHeader[0].style.width = '100%';\n  }\n  $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n    idx = _fnVisibleToColumnIndex(settings, i);\n    el.style.width = settings.aoColumns[idx].sWidth;\n  });\n  if (footer) {\n    _fnApplyToChildren(function (n) {\n      n.style.width = \"\";\n    }, footerSrcEls);\n  }\n\n  // Size the table as a whole\n  sanityWidth = table.outerWidth();\n  if (scrollX === \"\") {\n    // No x scrolling\n    tableStyle.width = \"100%\";\n\n    // IE7 will make the width of the table when 100% include the scrollbar\n    // - which is shouldn't. When there is a scrollbar we need to take this\n    // into account.\n    if (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")) {\n      tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n    }\n\n    // Recalculate the sanity width\n    sanityWidth = table.outerWidth();\n  } else if (scrollXInner !== \"\") {\n    // legacy x scroll inner has been given - use it\n    tableStyle.width = _fnStringToCss(scrollXInner);\n\n    // Recalculate the sanity width\n    sanityWidth = table.outerWidth();\n  }\n\n  // Hidden header should have zero height, so remove padding and borders. Then\n  // set the width based on the real headers\n\n  // Apply all styles in one pass\n  _fnApplyToChildren(zeroOut, headerSrcEls);\n\n  // Read all widths in next pass\n  _fnApplyToChildren(function (nSizer) {\n    var style = window.getComputedStyle ? window.getComputedStyle(nSizer).width : _fnStringToCss($(nSizer).width());\n    headerContent.push(nSizer.innerHTML);\n    headerWidths.push(style);\n  }, headerSrcEls);\n\n  // Apply all widths in final pass\n  _fnApplyToChildren(function (nToSize, i) {\n    nToSize.style.width = headerWidths[i];\n  }, headerTrgEls);\n  $(headerSrcEls).css('height', 0);\n\n  /* Same again with the footer if we have one */\n  if (footer) {\n    _fnApplyToChildren(zeroOut, footerSrcEls);\n    _fnApplyToChildren(function (nSizer) {\n      footerContent.push(nSizer.innerHTML);\n      footerWidths.push(_fnStringToCss($(nSizer).css('width')));\n    }, footerSrcEls);\n    _fnApplyToChildren(function (nToSize, i) {\n      nToSize.style.width = footerWidths[i];\n    }, footerTrgEls);\n    $(footerSrcEls).height(0);\n  }\n\n  /*\r\n   * 3. Apply the measurements\r\n   */\n\n  // \"Hide\" the header and footer that we used for the sizing. We need to keep\n  // the content of the cell so that the width applied to the header and body\n  // both match, but we want to hide it completely. We want to also fix their\n  // width to what they currently are\n  _fnApplyToChildren(function (nSizer, i) {\n    nSizer.innerHTML = '<div class=\"dataTables_sizing\">' + headerContent[i] + '</div>';\n    nSizer.childNodes[0].style.height = \"0\";\n    nSizer.childNodes[0].style.overflow = \"hidden\";\n    nSizer.style.width = headerWidths[i];\n  }, headerSrcEls);\n  if (footer) {\n    _fnApplyToChildren(function (nSizer, i) {\n      nSizer.innerHTML = '<div class=\"dataTables_sizing\">' + footerContent[i] + '</div>';\n      nSizer.childNodes[0].style.height = \"0\";\n      nSizer.childNodes[0].style.overflow = \"hidden\";\n      nSizer.style.width = footerWidths[i];\n    }, footerSrcEls);\n  }\n\n  // Sanity check that the table is of a sensible width. If not then we are going to get\n  // misalignment - try to prevent this by not allowing the table to shrink below its min width\n  if (Math.round(table.outerWidth()) < Math.round(sanityWidth)) {\n    // The min width depends upon if we have a vertical scrollbar visible or not */\n    correction = divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\" ? sanityWidth + barWidth : sanityWidth;\n\n    // IE6/7 are a law unto themselves...\n    if (ie67 && (divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")) {\n      tableStyle.width = _fnStringToCss(correction - barWidth);\n    }\n\n    // And give the user a warning that we've stopped the table getting too small\n    if (scrollX === \"\" || scrollXInner !== \"\") {\n      _fnLog(settings, 1, 'Possible column misalignment', 6);\n    }\n  } else {\n    correction = '100%';\n  }\n\n  // Apply to the container elements\n  divBodyStyle.width = _fnStringToCss(correction);\n  divHeaderStyle.width = _fnStringToCss(correction);\n  if (footer) {\n    settings.nScrollFoot.style.width = _fnStringToCss(correction);\n  }\n\n  /*\r\n   * 4. Clean up\r\n   */\n  if (!scrollY) {\n    /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\r\n     * the scrollbar height from the visible display, rather than adding it on. We need to\r\n     * set the height in order to sort this. Don't want to do it in any other browsers.\r\n     */\n    if (ie67) {\n      divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n    }\n  }\n\n  /* Finally set the width's of the header and footer tables */\n  var iOuterWidth = table.outerWidth();\n  divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n  divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);\n\n  // Figure out if there are scrollbar present - if so then we need a the header and footer to\n  // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n  var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n  var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n  divHeaderInnerStyle[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n  if (footer) {\n    divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n    divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n    divFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n  }\n\n  // Correct DOM ordering for colgroup - comes before the thead\n  table.children('colgroup').insertBefore(table.children('thead'));\n\n  /* Adjust the position of the header in case we loose the y-scrollbar */\n  divBody.trigger('scroll');\n\n  // If sorting or filtering has occurred, jump the scrolling back to the top\n  // only if we aren't holding the position\n  if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n    divBodyEl.scrollTop = 0;\n  }\n}\n\n/**\r\n * Apply a given function to the display child nodes of an element array (typically\r\n * TD children of TR rows\r\n *  @param {function} fn Method to apply to the objects\r\n *  @param array {nodes} an1 List of elements to look through for display children\r\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnApplyToChildren(fn, an1, an2) {\n  var index = 0,\n    i = 0,\n    iLen = an1.length;\n  var nNode1, nNode2;\n  while (i < iLen) {\n    nNode1 = an1[i].firstChild;\n    nNode2 = an2 ? an2[i].firstChild : null;\n    while (nNode1) {\n      if (nNode1.nodeType === 1) {\n        if (an2) {\n          fn(nNode1, nNode2, index);\n        } else {\n          fn(nNode1, index);\n        }\n        index++;\n      }\n      nNode1 = nNode1.nextSibling;\n      nNode2 = an2 ? nNode2.nextSibling : null;\n    }\n    i++;\n  }\n}\nvar __re_html_remove = /<.*?>/g;\n\n/**\r\n * Calculate the width of columns for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnCalculateColumnWidths(oSettings) {\n  var table = oSettings.nTable,\n    columns = oSettings.aoColumns,\n    scroll = oSettings.oScroll,\n    scrollY = scroll.sY,\n    scrollX = scroll.sX,\n    scrollXInner = scroll.sXInner,\n    columnCount = columns.length,\n    visibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n    headerCells = $('th', oSettings.nTHead),\n    tableWidthAttr = table.getAttribute('width'),\n    // from DOM element\n    tableContainer = table.parentNode,\n    userInputs = false,\n    i,\n    column,\n    columnIdx,\n    width,\n    outerWidth,\n    browser = oSettings.oBrowser,\n    ie67 = browser.bScrollOversize;\n  var styleWidth = table.style.width;\n  if (styleWidth && styleWidth.indexOf('%') !== -1) {\n    tableWidthAttr = styleWidth;\n  }\n\n  /* Convert any user input sizes into pixel sizes */\n  for (i = 0; i < visibleColumns.length; i++) {\n    column = columns[visibleColumns[i]];\n    if (column.sWidth !== null) {\n      column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n      userInputs = true;\n    }\n  }\n\n  /* If the number of columns in the DOM equals the number that we have to\r\n   * process in DataTables, then we can use the offsets that are created by\r\n   * the web- browser. No custom sizes can be set in order for this to happen,\r\n   * nor scrolling used\r\n   */\n  if (ie67 || !userInputs && !scrollX && !scrollY && columnCount == _fnVisbleColumns(oSettings) && columnCount == headerCells.length) {\n    for (i = 0; i < columnCount; i++) {\n      var colIdx = _fnVisibleToColumnIndex(oSettings, i);\n      if (colIdx !== null) {\n        columns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i).width());\n      }\n    }\n  } else {\n    // Otherwise construct a single row, worst case, table with the widest\n    // node in the data, assign any user defined widths, then insert it into\n    // the DOM and allow the browser to do all the hard work of calculating\n    // table widths\n    var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n    .css('visibility', 'hidden').removeAttr('id');\n\n    // Clean up the table body\n    tmpTable.find('tbody tr').remove();\n    var tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n    // Clone the table header and footer - we can't use the header / footer\n    // from the cloned table, since if scrolling is active, the table's\n    // real header and footer are contained in different table tags\n    tmpTable.find('thead, tfoot').remove();\n    tmpTable.append($(oSettings.nTHead).clone()).append($(oSettings.nTFoot).clone());\n\n    // Remove any assigned widths from the footer (from scrolling)\n    tmpTable.find('tfoot th, tfoot td').css('width', '');\n\n    // Apply custom sizing to the cloned header\n    headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n    for (i = 0; i < visibleColumns.length; i++) {\n      column = columns[visibleColumns[i]];\n      headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ? _fnStringToCss(column.sWidthOrig) : '';\n\n      // For scrollX we need to force the column width otherwise the\n      // browser will collapse it. If this width is smaller than the\n      // width the column requires, then it will have no effect\n      if (column.sWidthOrig && scrollX) {\n        $(headerCells[i]).append($('<div/>').css({\n          width: column.sWidthOrig,\n          margin: 0,\n          padding: 0,\n          border: 0,\n          height: 1\n        }));\n      }\n    }\n\n    // Find the widest cell for each column and put it into the table\n    if (oSettings.aoData.length) {\n      for (i = 0; i < visibleColumns.length; i++) {\n        columnIdx = visibleColumns[i];\n        column = columns[columnIdx];\n        $(_fnGetWidestNode(oSettings, columnIdx)).clone(false).append(column.sContentPadding).appendTo(tr);\n      }\n    }\n\n    // Tidy the temporary table - remove name attributes so there aren't\n    // duplicated in the dom (radio elements for example)\n    $('[name]', tmpTable).removeAttr('name');\n\n    // Table has been built, attach to the document so we can work with it.\n    // A holding element is used, positioned at the top of the container\n    // with minimal height, so it has no effect on if the container scrolls\n    // or not. Otherwise it might trigger scrolling when it actually isn't\n    // needed\n    var holder = $('<div/>').css(scrollX || scrollY ? {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      height: 1,\n      right: 0,\n      overflow: 'hidden'\n    } : {}).append(tmpTable).appendTo(tableContainer);\n\n    // When scrolling (X or Y) we want to set the width of the table as \n    // appropriate. However, when not scrolling leave the table width as it\n    // is. This results in slightly different, but I think correct behaviour\n    if (scrollX && scrollXInner) {\n      tmpTable.width(scrollXInner);\n    } else if (scrollX) {\n      tmpTable.css('width', 'auto');\n      tmpTable.removeAttr('width');\n\n      // If there is no width attribute or style, then allow the table to\n      // collapse\n      if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n        tmpTable.width(tableContainer.clientWidth);\n      }\n    } else if (scrollY) {\n      tmpTable.width(tableContainer.clientWidth);\n    } else if (tableWidthAttr) {\n      tmpTable.width(tableWidthAttr);\n    }\n\n    // Get the width of each column in the constructed table - we need to\n    // know the inner width (so it can be assigned to the other table's\n    // cells) and the outer width so we can calculate the full width of the\n    // table. This is safe since DataTables requires a unique cell for each\n    // column, but if ever a header can span multiple columns, this will\n    // need to be modified.\n    var total = 0;\n    for (i = 0; i < visibleColumns.length; i++) {\n      var cell = $(headerCells[i]);\n      var border = cell.outerWidth() - cell.width();\n\n      // Use getBounding... where possible (not IE8-) because it can give\n      // sub-pixel accuracy, which we then want to round up!\n      var bounding = browser.bBounding ? Math.ceil(headerCells[i].getBoundingClientRect().width) : cell.outerWidth();\n\n      // Total is tracked to remove any sub-pixel errors as the outerWidth\n      // of the table might not equal the total given here (IE!).\n      total += bounding;\n\n      // Width for each column to use\n      columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding - border);\n    }\n    table.style.width = _fnStringToCss(total);\n\n    // Finished with the table - ditch it\n    holder.remove();\n  }\n\n  // If there is a width attr, we want to attach an event listener which\n  // allows the table sizing to automatically adjust when the window is\n  // resized. Use the width attr rather than CSS, since we can't know if the\n  // CSS is a relative value or absolute - DOM read is always px.\n  if (tableWidthAttr) {\n    table.style.width = _fnStringToCss(tableWidthAttr);\n  }\n  if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n    var bindResize = function () {\n      $(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {\n        _fnAdjustColumnSizing(oSettings);\n      }));\n    };\n\n    // IE6/7 will crash if we bind a resize event handler on page load.\n    // To be removed in 1.11 which drops IE6/7 support\n    if (ie67) {\n      setTimeout(bindResize, 1000);\n    } else {\n      bindResize();\n    }\n    oSettings._reszEvt = true;\n  }\n}\n\n/**\r\n * Throttle the calls to a function. Arguments and context are maintained for\r\n * the throttled function\r\n *  @param {function} fn Function to be called\r\n *  @param {int} [freq=200] call frequency in mS\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#oApi\r\n */\nvar _fnThrottle = DataTable.util.throttle;\n\n/**\r\n * Convert a CSS unit width to pixels (e.g. 2em)\r\n *  @param {string} width width to be converted\r\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\r\n *  @returns {int} width in pixels\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnConvertToWidth(width, parent) {\n  if (!width) {\n    return 0;\n  }\n  var n = $('<div/>').css('width', _fnStringToCss(width)).appendTo(parent || document.body);\n  var val = n[0].offsetWidth;\n  n.remove();\n  return val;\n}\n\n/**\r\n * Get the widest node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {node} widest table node\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnGetWidestNode(settings, colIdx) {\n  var idx = _fnGetMaxLenString(settings, colIdx);\n  if (idx < 0) {\n    return null;\n  }\n  var data = settings.aoData[idx];\n  return !data.nTr ?\n  // Might not have been created when deferred rendering\n  $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] : data.anCells[colIdx];\n}\n\n/**\r\n * Get the maximum strlen for each data column\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {string} max string length for each column\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnGetMaxLenString(settings, colIdx) {\n  var s,\n    max = -1,\n    maxIdx = -1;\n  for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n    s = _fnGetCellData(settings, i, colIdx, 'display') + '';\n    s = s.replace(__re_html_remove, '');\n    s = s.replace(/&nbsp;/g, ' ');\n    if (s.length > max) {\n      max = s.length;\n      maxIdx = i;\n    }\n  }\n  return maxIdx;\n}\n\n/**\r\n * Append a CSS unit (only if required) to a string\r\n *  @param {string} value to css-ify\r\n *  @returns {string} value with css unit\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnStringToCss(s) {\n  if (s === null) {\n    return '0px';\n  }\n  if (typeof s == 'number') {\n    return s < 0 ? '0px' : s + 'px';\n  }\n\n  // Check it has a unit character already\n  return s.match(/\\d$/) ? s + 'px' : s;\n}\nfunction _fnSortFlatten(settings) {\n  var i,\n    iLen,\n    k,\n    kLen,\n    aSort = [],\n    aiOrig = [],\n    aoColumns = settings.aoColumns,\n    aDataSort,\n    iCol,\n    sType,\n    srcCol,\n    fixed = settings.aaSortingFixed,\n    fixedObj = $.isPlainObject(fixed),\n    nestedSort = [],\n    add = function (a) {\n      if (a.length && !Array.isArray(a[0])) {\n        // 1D array\n        nestedSort.push(a);\n      } else {\n        // 2D array\n        $.merge(nestedSort, a);\n      }\n    };\n\n  // Build the sort array, with pre-fix and post-fix options if they have been\n  // specified\n  if (Array.isArray(fixed)) {\n    add(fixed);\n  }\n  if (fixedObj && fixed.pre) {\n    add(fixed.pre);\n  }\n  add(settings.aaSorting);\n  if (fixedObj && fixed.post) {\n    add(fixed.post);\n  }\n  for (i = 0; i < nestedSort.length; i++) {\n    srcCol = nestedSort[i][0];\n    aDataSort = aoColumns[srcCol].aDataSort;\n    for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n      iCol = aDataSort[k];\n      sType = aoColumns[iCol].sType || 'string';\n      if (nestedSort[i]._idx === undefined) {\n        nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n      }\n      aSort.push({\n        src: srcCol,\n        col: iCol,\n        dir: nestedSort[i][1],\n        index: nestedSort[i]._idx,\n        type: sType,\n        formatter: DataTable.ext.type.order[sType + \"-pre\"]\n      });\n    }\n  }\n  return aSort;\n}\n\n/**\r\n * Change the order of the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n *  @todo This really needs split up!\r\n */\nfunction _fnSort(oSettings) {\n  var i,\n    ien,\n    iLen,\n    j,\n    jLen,\n    k,\n    kLen,\n    sDataType,\n    nTh,\n    aiOrig = [],\n    oExtSort = DataTable.ext.type.order,\n    aoData = oSettings.aoData,\n    aoColumns = oSettings.aoColumns,\n    aDataSort,\n    data,\n    iCol,\n    sType,\n    oSort,\n    formatters = 0,\n    sortCol,\n    displayMaster = oSettings.aiDisplayMaster,\n    aSort;\n\n  // Resolve any column types that are unknown due to addition or invalidation\n  // @todo Can this be moved into a 'data-ready' handler which is called when\n  //   data is going to be used in the table?\n  _fnColumnTypes(oSettings);\n  aSort = _fnSortFlatten(oSettings);\n  for (i = 0, ien = aSort.length; i < ien; i++) {\n    sortCol = aSort[i];\n\n    // Track if we can use the fast sort algorithm\n    if (sortCol.formatter) {\n      formatters++;\n    }\n\n    // Load the data needed for the sort, for each cell\n    _fnSortData(oSettings, sortCol.col);\n  }\n\n  /* No sorting required if server-side or no sorting array */\n  if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n    // Create a value - key array of the current row positions such that we can use their\n    // current position during the sort, if values match, in order to perform stable sorting\n    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n      aiOrig[displayMaster[i]] = i;\n    }\n\n    /* Do the sort - here we want multi-column sorting based on a given data source (column)\r\n     * and sorting function (from oSort) in a certain direction. It's reasonably complex to\r\n     * follow on it's own, but this is what we want (example two column sorting):\r\n     *  fnLocalSorting = function(a,b){\r\n     *    var iTest;\r\n     *    iTest = oSort['string-asc']('data11', 'data12');\r\n     *      if (iTest !== 0)\r\n     *        return iTest;\r\n     *    iTest = oSort['numeric-desc']('data21', 'data22');\r\n     *    if (iTest !== 0)\r\n     *      return iTest;\r\n     *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\r\n     *  }\r\n     * Basically we have a test for each sorting column, if the data in that column is equal,\r\n     * test the next column. If all columns match, then we use a numeric sort on the row\r\n     * positions in the original data array to provide a stable sort.\r\n     *\r\n     * Note - I know it seems excessive to have two sorting methods, but the first is around\r\n     * 15% faster, so the second is only maintained for backwards compatibility with sorting\r\n     * methods which do not have a pre-sort formatting function.\r\n     */\n    if (formatters === aSort.length) {\n      // All sort types have formatting functions\n      displayMaster.sort(function (a, b) {\n        var x,\n          y,\n          k,\n          test,\n          sort,\n          len = aSort.length,\n          dataA = aoData[a]._aSortData,\n          dataB = aoData[b]._aSortData;\n        for (k = 0; k < len; k++) {\n          sort = aSort[k];\n          x = dataA[sort.col];\n          y = dataB[sort.col];\n          test = x < y ? -1 : x > y ? 1 : 0;\n          if (test !== 0) {\n            return sort.dir === 'asc' ? test : -test;\n          }\n        }\n        x = aiOrig[a];\n        y = aiOrig[b];\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    } else {\n      // Depreciated - remove in 1.11 (providing a plug-in option)\n      // Not all sort types have formatting methods, so we have to call their sorting\n      // methods.\n      displayMaster.sort(function (a, b) {\n        var x,\n          y,\n          k,\n          l,\n          test,\n          sort,\n          fn,\n          len = aSort.length,\n          dataA = aoData[a]._aSortData,\n          dataB = aoData[b]._aSortData;\n        for (k = 0; k < len; k++) {\n          sort = aSort[k];\n          x = dataA[sort.col];\n          y = dataB[sort.col];\n          fn = oExtSort[sort.type + \"-\" + sort.dir] || oExtSort[\"string-\" + sort.dir];\n          test = fn(x, y);\n          if (test !== 0) {\n            return test;\n          }\n        }\n        x = aiOrig[a];\n        y = aiOrig[b];\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    }\n  }\n\n  /* Tell the draw function that we have sorted the data */\n  oSettings.bSorted = true;\n}\nfunction _fnSortAria(settings) {\n  var label;\n  var nextSort;\n  var columns = settings.aoColumns;\n  var aSort = _fnSortFlatten(settings);\n  var oAria = settings.oLanguage.oAria;\n\n  // ARIA attributes - need to loop all columns, to update all (removing old\n  // attributes as needed)\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    var col = columns[i];\n    var asSorting = col.asSorting;\n    var sTitle = col.ariaTitle || col.sTitle.replace(/<.*?>/g, \"\");\n    var th = col.nTh;\n\n    // IE7 is throwing an error when setting these properties with jQuery's\n    // attr() and removeAttr() methods...\n    th.removeAttribute('aria-sort');\n\n    /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n    if (col.bSortable) {\n      if (aSort.length > 0 && aSort[0].col == i) {\n        th.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n        nextSort = asSorting[aSort[0].index + 1] || asSorting[0];\n      } else {\n        nextSort = asSorting[0];\n      }\n      label = sTitle + (nextSort === \"asc\" ? oAria.sSortAscending : oAria.sSortDescending);\n    } else {\n      label = sTitle;\n    }\n    th.setAttribute('aria-label', label);\n  }\n}\n\n/**\r\n * Function to run on user sort request\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {boolean} [append=false] Append the requested sort to the existing\r\n *    sort if true (i.e. multi-column sort)\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSortListener(settings, colIdx, append, callback) {\n  var col = settings.aoColumns[colIdx];\n  var sorting = settings.aaSorting;\n  var asSorting = col.asSorting;\n  var nextSortIdx;\n  var next = function (a, overflow) {\n    var idx = a._idx;\n    if (idx === undefined) {\n      idx = $.inArray(a[1], asSorting);\n    }\n    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n  };\n\n  // Convert to 2D array if needed\n  if (typeof sorting[0] === 'number') {\n    sorting = settings.aaSorting = [sorting];\n  }\n\n  // If appending the sort then we are multi-column sorting\n  if (append && settings.oFeatures.bSortMulti) {\n    // Are we already doing some kind of sort on this column?\n    var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n    if (sortIdx !== -1) {\n      // Yes, modify the sort\n      nextSortIdx = next(sorting[sortIdx], true);\n      if (nextSortIdx === null && sorting.length === 1) {\n        nextSortIdx = 0; // can't remove sorting completely\n      }\n\n      if (nextSortIdx === null) {\n        sorting.splice(sortIdx, 1);\n      } else {\n        sorting[sortIdx][1] = asSorting[nextSortIdx];\n        sorting[sortIdx]._idx = nextSortIdx;\n      }\n    } else {\n      // No sort on this column yet\n      sorting.push([colIdx, asSorting[0], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    }\n  } else if (sorting.length && sorting[0][0] == colIdx) {\n    // Single column - already sorting on this column, modify the sort\n    nextSortIdx = next(sorting[0]);\n    sorting.length = 1;\n    sorting[0][1] = asSorting[nextSortIdx];\n    sorting[0]._idx = nextSortIdx;\n  } else {\n    // Single column - sort only on this column\n    sorting.length = 0;\n    sorting.push([colIdx, asSorting[0]]);\n    sorting[0]._idx = 0;\n  }\n\n  // Run the sort by calling a full redraw\n  _fnReDraw(settings);\n\n  // callback used for async user interaction\n  if (typeof callback == 'function') {\n    callback(settings);\n  }\n}\n\n/**\r\n * Attach a sort handler (click) to a node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSortAttachListener(settings, attachTo, colIdx, callback) {\n  var col = settings.aoColumns[colIdx];\n  _fnBindAction(attachTo, {}, function (e) {\n    /* If the column is not sortable - don't to anything */\n    if (col.bSortable === false) {\n      return;\n    }\n\n    // If processing is enabled use a timeout to allow the processing\n    // display to be shown - otherwise to it synchronously\n    if (settings.oFeatures.bProcessing) {\n      _fnProcessingDisplay(settings, true);\n      setTimeout(function () {\n        _fnSortListener(settings, colIdx, e.shiftKey, callback);\n\n        // In server-side processing, the draw callback will remove the\n        // processing display\n        if (_fnDataSource(settings) !== 'ssp') {\n          _fnProcessingDisplay(settings, false);\n        }\n      }, 0);\n    } else {\n      _fnSortListener(settings, colIdx, e.shiftKey, callback);\n    }\n  });\n}\n\n/**\r\n * Set the sorting classes on table's body, Note: it is safe to call this function\r\n * when bSort and bSortClasses are false\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSortingClasses(settings) {\n  var oldSort = settings.aLastSort;\n  var sortClass = settings.oClasses.sSortColumn;\n  var sort = _fnSortFlatten(settings);\n  var features = settings.oFeatures;\n  var i, ien, colIdx;\n  if (features.bSort && features.bSortClasses) {\n    // Remove old sorting classes\n    for (i = 0, ien = oldSort.length; i < ien; i++) {\n      colIdx = oldSort[i].src;\n\n      // Remove column sorting\n      $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n\n    // Add new column sorting\n    for (i = 0, ien = sort.length; i < ien; i++) {\n      colIdx = sort[i].src;\n      $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n  }\n  settings.aLastSort = sort;\n}\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData(settings, idx) {\n  // Custom sorting function - provided by the sort data type\n  var column = settings.aoColumns[idx];\n  var customSort = DataTable.ext.order[column.sSortDataType];\n  var customData;\n  if (customSort) {\n    customData = customSort.call(settings.oInstance, settings, idx, _fnColumnIndexToVisible(settings, idx));\n  }\n\n  // Use / populate cache\n  var row, cellData;\n  var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n  for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n    row = settings.aoData[i];\n    if (!row._aSortData) {\n      row._aSortData = [];\n    }\n    if (!row._aSortData[idx] || customSort) {\n      cellData = customSort ? customData[i] :\n      // If there was a custom sort function, use data from there\n      _fnGetCellData(settings, i, idx, 'sort');\n      row._aSortData[idx] = formatter ? formatter(cellData) : cellData;\n    }\n  }\n}\n\n/**\r\n * Save the state of a table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSaveState(settings) {\n  if (settings._bLoadingState) {\n    return;\n  }\n\n  /* Store the interesting variables */\n  var state = {\n    time: +new Date(),\n    start: settings._iDisplayStart,\n    length: settings._iDisplayLength,\n    order: $.extend(true, [], settings.aaSorting),\n    search: _fnSearchToCamel(settings.oPreviousSearch),\n    columns: $.map(settings.aoColumns, function (col, i) {\n      return {\n        visible: col.bVisible,\n        search: _fnSearchToCamel(settings.aoPreSearchCols[i])\n      };\n    })\n  };\n  settings.oSavedState = state;\n  _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n  if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n  }\n}\n\n/**\r\n * Attempt to load a saved table state\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oInit DataTables init object so we can override settings\r\n *  @param {function} callback Callback to execute when the state has been loaded\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnLoadState(settings, oInit, callback) {\n  if (!settings.oFeatures.bStateSave) {\n    callback();\n    return;\n  }\n  var loaded = function (state) {\n    _fnImplementState(settings, state, callback);\n  };\n  var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n  if (state !== undefined) {\n    _fnImplementState(settings, state, callback);\n  }\n  // otherwise, wait for the loaded callback to be executed\n\n  return true;\n}\nfunction _fnImplementState(settings, s, callback) {\n  var i, ien;\n  var columns = settings.aoColumns;\n  settings._bLoadingState = true;\n\n  // When StateRestore was introduced the state could now be implemented at any time\n  // Not just initialisation. To do this an api instance is required in some places\n  var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n  if (!s || !s.time) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Allow custom and plug-in manipulation functions to alter the saved data set and\n  // cancelling of loading by returning false\n  var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n  if ($.inArray(false, abStateLoad) !== -1) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Reject old data\n  var duration = settings.iStateDuration;\n  if (duration > 0 && s.time < +new Date() - duration * 1000) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Number of columns have changed - all bets are off, no restore of settings\n  if (s.columns && columns.length !== s.columns.length) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Store the saved state so it might be accessed at any time\n  settings.oLoadedState = $.extend(true, {}, s);\n\n  // Page Length\n  if (s.length !== undefined) {\n    // If already initialised just set the value directly so that the select element is also updated\n    if (api) {\n      api.page.len(s.length);\n    } else {\n      settings._iDisplayLength = s.length;\n    }\n  }\n\n  // Restore key features - todo - for 1.11 this needs to be done by\n  // subscribed events\n  if (s.start !== undefined) {\n    if (api === null) {\n      settings._iDisplayStart = s.start;\n      settings.iInitDisplayStart = s.start;\n    } else {\n      _fnPageChange(settings, s.start / settings._iDisplayLength);\n    }\n  }\n\n  // Order\n  if (s.order !== undefined) {\n    settings.aaSorting = [];\n    $.each(s.order, function (i, col) {\n      settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col);\n    });\n  }\n\n  // Search\n  if (s.search !== undefined) {\n    $.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));\n  }\n\n  // Columns\n  if (s.columns) {\n    for (i = 0, ien = s.columns.length; i < ien; i++) {\n      var col = s.columns[i];\n\n      // Visibility\n      if (col.visible !== undefined) {\n        // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n        if (api) {\n          // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n          api.column(i).visible(col.visible, false);\n        } else {\n          columns[i].bVisible = col.visible;\n        }\n      }\n\n      // Search\n      if (col.search !== undefined) {\n        $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n      }\n    }\n\n    // If the api is defined then we need to adjust the columns once the visibility has been changed\n    if (api) {\n      api.columns.adjust();\n    }\n  }\n  settings._bLoadingState = false;\n  _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n  callback();\n}\n;\n\n/**\r\n * Return the settings object for a particular table\r\n *  @param {node} table table we are using as a dataTable\r\n *  @returns {object} Settings object - or null if not found\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnSettingsFromNode(table) {\n  var settings = DataTable.settings;\n  var idx = $.inArray(table, _pluck(settings, 'nTable'));\n  return idx !== -1 ? settings[idx] : null;\n}\n\n/**\r\n * Log an error message\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} level log error messages, or display them to the user\r\n *  @param {string} msg error message\r\n *  @param {int} tn Technical note id to get more information about the error.\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnLog(settings, level, msg, tn) {\n  msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n  if (tn) {\n    msg += '. For more information about this error, please see ' + 'http://datatables.net/tn/' + tn;\n  }\n  if (!level) {\n    // Backwards compatibility pre 1.10\n    var ext = DataTable.ext;\n    var type = ext.sErrMode || ext.errMode;\n    if (settings) {\n      _fnCallbackFire(settings, null, 'error', [settings, tn, msg]);\n    }\n    if (type == 'alert') {\n      alert(msg);\n    } else if (type == 'throw') {\n      throw new Error(msg);\n    } else if (typeof type == 'function') {\n      type(settings, tn, msg);\n    }\n  } else if (window.console && console.log) {\n    console.log(msg);\n  }\n}\n\n/**\r\n * See if a property is defined on one object, if so assign it to the other object\r\n *  @param {object} ret target object\r\n *  @param {object} src source object\r\n *  @param {string} name property\r\n *  @param {string} [mappedName] name to map too - optional, name used if not given\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnMap(ret, src, name, mappedName) {\n  if (Array.isArray(name)) {\n    $.each(name, function (i, val) {\n      if (Array.isArray(val)) {\n        _fnMap(ret, src, val[0], val[1]);\n      } else {\n        _fnMap(ret, src, val);\n      }\n    });\n    return;\n  }\n  if (mappedName === undefined) {\n    mappedName = name;\n  }\n  if (src[name] !== undefined) {\n    ret[mappedName] = src[name];\n  }\n}\n\n/**\r\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\r\n * shallow copy arrays. The reason we need to do this, is that we don't want to\r\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\r\n * able to override them, but we do want to deep copy arrays.\r\n *  @param {object} out Object to extend\r\n *  @param {object} extender Object from which the properties will be applied to\r\n *      out\r\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\r\n *      independent copy with the exception of the `data` or `aaData` parameters\r\n *      if they are present. This is so you can pass in a collection to\r\n *      DataTables and have that used as your data source without breaking the\r\n *      references\r\n *  @returns {object} out Reference, just for convenience - out === the return.\r\n *  @memberof DataTable#oApi\r\n *  @todo This doesn't take account of arrays inside the deep copied objects.\r\n */\nfunction _fnExtend(out, extender, breakRefs) {\n  var val;\n  for (var prop in extender) {\n    if (extender.hasOwnProperty(prop)) {\n      val = extender[prop];\n      if ($.isPlainObject(val)) {\n        if (!$.isPlainObject(out[prop])) {\n          out[prop] = {};\n        }\n        $.extend(true, out[prop], val);\n      } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n        out[prop] = val.slice();\n      } else {\n        out[prop] = val;\n      }\n    }\n  }\n  return out;\n}\n\n/**\r\n * Bind an event handers to allow a click or return key to activate the callback.\r\n * This is good for accessibility since a return on the keyboard will have the\r\n * same effect as a click, if the element has focus.\r\n *  @param {element} n Element to bind the action to\r\n *  @param {object} oData Data object to pass to the triggered function\r\n *  @param {function} fn Callback function for when the event is triggered\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnBindAction(n, oData, fn) {\n  $(n).on('click.DT', oData, function (e) {\n    $(n).trigger('blur'); // Remove focus outline for mouse users\n    fn(e);\n  }).on('keypress.DT', oData, function (e) {\n    if (e.which === 13) {\n      e.preventDefault();\n      fn(e);\n    }\n  }).on('selectstart.DT', function () {\n    /* Take the brutal approach to cancelling text selection */\n    return false;\n  });\n}\n\n/**\r\n * Register a callback function. Easily allows a callback function to be added to\r\n * an array store of callback functions that can then all be called together.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\r\n *  @param {function} fn Function to be called back\r\n *  @param {string} sName Identifying name for the callback (i.e. a label)\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnCallbackReg(oSettings, sStore, fn, sName) {\n  if (fn) {\n    oSettings[sStore].push({\n      \"fn\": fn,\n      \"sName\": sName\n    });\n  }\n}\n\n/**\r\n * Fire callback functions and trigger events. Note that the loop over the\r\n * callback array store is done backwards! Further note that you do not want to\r\n * fire off triggers in time sensitive applications (for example cell creation)\r\n * as its slow.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} callbackArr Name of the array storage for the callbacks in\r\n *      oSettings\r\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\r\n *      null no trigger is fired\r\n *  @param {array} args Array of arguments to pass to the callback function /\r\n *      trigger\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnCallbackFire(settings, callbackArr, eventName, args) {\n  var ret = [];\n  if (callbackArr) {\n    ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n      return val.fn.apply(settings.oInstance, args);\n    });\n  }\n  if (eventName !== null) {\n    var e = $.Event(eventName + '.dt');\n    var table = $(settings.nTable);\n    table.trigger(e, args);\n\n    // If not yet attached to the document, trigger the event\n    // on the body directly to sort of simulate the bubble\n    if (table.parents('body').length === 0) {\n      $('body').trigger(e, args);\n    }\n    ret.push(e.result);\n  }\n  return ret;\n}\nfunction _fnLengthOverflow(settings) {\n  var start = settings._iDisplayStart,\n    end = settings.fnDisplayEnd(),\n    len = settings._iDisplayLength;\n\n  /* If we have space to show extra rows (backing up from the end point - then do so */\n  if (start >= end) {\n    start = end - len;\n  }\n\n  // Keep the start record on the current page\n  start -= start % len;\n  if (len === -1 || start < 0) {\n    start = 0;\n  }\n  settings._iDisplayStart = start;\n}\nfunction _fnRenderer(settings, type) {\n  var renderer = settings.renderer;\n  var host = DataTable.ext.renderer[type];\n  if ($.isPlainObject(renderer) && renderer[type]) {\n    // Specific renderer for this type. If available use it, otherwise use\n    // the default.\n    return host[renderer[type]] || host._;\n  } else if (typeof renderer === 'string') {\n    // Common renderer - if there is one available for this type use it,\n    // otherwise use the default\n    return host[renderer] || host._;\n  }\n\n  // Use the default\n  return host._;\n}\n\n/**\r\n * Detect the data source being used for the table. Used to simplify the code\r\n * a little (ajax) and to make it compress a little smaller.\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {string} Data source\r\n *  @memberof DataTable#oApi\r\n */\nfunction _fnDataSource(settings) {\n  if (settings.oFeatures.bServerSide) {\n    return 'ssp';\n  } else if (settings.ajax || settings.sAjaxSource) {\n    return 'ajax';\n  }\n  return 'dom';\n}\n\n/**\r\n * Computed structure of the DataTables API, defined by the options passed to\r\n * `DataTable.Api.register()` when building the API.\r\n *\r\n * The structure is built in order to speed creation and extension of the Api\r\n * objects since the extensions are effectively pre-parsed.\r\n *\r\n * The array is an array of objects with the following structure, where this\r\n * base array represents the Api prototype base:\r\n *\r\n *     [\r\n *       {\r\n *         name:      'data'                -- string   - Property name\r\n *         val:       function () {},       -- function - Api method (or undefined if just an object\r\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n *       },\r\n *       {\r\n *         name:     'row'\r\n *         val:       {},\r\n *         methodExt: [ ... ],\r\n *         propExt:   [\r\n *           {\r\n *             name:      'data'\r\n *             val:       function () {},\r\n *             methodExt: [ ... ],\r\n *             propExt:   [ ... ]\r\n *           },\r\n *           ...\r\n *         ]\r\n *       }\r\n *     ]\r\n *\r\n * @type {Array}\r\n * @ignore\r\n */\nvar __apiStruct = [];\n\n/**\r\n * `Array.prototype` reference.\r\n *\r\n * @type object\r\n * @ignore\r\n */\nvar __arrayProto = Array.prototype;\n\n/**\r\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\r\n * take several different forms for ease of use.\r\n *\r\n * Each of the input parameter types will be converted to a DataTables settings\r\n * object where possible.\r\n *\r\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\r\n *   of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n *   * `DataTables.Api` - API instance\r\n * @return {array|null} Matching DataTables settings objects. `null` or\r\n *   `undefined` is returned if no matching DataTable is found.\r\n * @ignore\r\n */\nvar _toSettings = function (mixed) {\n  var idx, jq;\n  var settings = DataTable.settings;\n  var tables = $.map(settings, function (el, i) {\n    return el.nTable;\n  });\n  if (!mixed) {\n    return [];\n  } else if (mixed.nTable && mixed.oApi) {\n    // DataTables settings object\n    return [mixed];\n  } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n    // Table node\n    idx = $.inArray(mixed, tables);\n    return idx !== -1 ? [settings[idx]] : null;\n  } else if (mixed && typeof mixed.settings === 'function') {\n    return mixed.settings().toArray();\n  } else if (typeof mixed === 'string') {\n    // jQuery selector\n    jq = $(mixed);\n  } else if (mixed instanceof $) {\n    // jQuery object (also DataTables instance)\n    jq = mixed;\n  }\n  if (jq) {\n    return jq.map(function (i) {\n      idx = $.inArray(this, tables);\n      return idx !== -1 ? settings[idx] : null;\n    }).toArray();\n  }\n};\n\n/**\r\n * DataTables API class - used to control and interface with  one or more\r\n * DataTables enhanced tables.\r\n *\r\n * The API class is heavily based on jQuery, presenting a chainable interface\r\n * that you can use to interact with tables. Each instance of the API class has\r\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\r\n * table, all tables on a page or a sub-set thereof.\r\n *\r\n * Additionally the API is designed to allow you to easily work with the data in\r\n * the tables, retrieving and manipulating it as required. This is done by\r\n * presenting the API class as an array like interface. The contents of the\r\n * array depend upon the actions requested by each method (for example\r\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\r\n * return an array of objects or arrays depending upon your table's\r\n * configuration). The API object has a number of array like methods (`push`,\r\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\r\n * `unique` etc) to assist your working with the data held in a table.\r\n *\r\n * Most methods (those which return an Api instance) are chainable, which means\r\n * the return from a method call also has all of the methods available that the\r\n * top level object had. For example, these two calls are equivalent:\r\n *\r\n *     // Not chained\r\n *     api.row.add( {...} );\r\n *     api.draw();\r\n *\r\n *     // Chained\r\n *     api.row.add( {...} ).draw();\r\n *\r\n * @class DataTable.Api\r\n * @param {array|object|string|jQuery} context DataTable identifier. This is\r\n *   used to define which DataTables enhanced tables this API will operate on.\r\n *   Can be one of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n * @param {array} [data] Data to initialise the Api instance with.\r\n *\r\n * @example\r\n *   // Direct initialisation during DataTables construction\r\n *   var api = $('#example').DataTable();\r\n *\r\n * @example\r\n *   // Initialisation using a DataTables jQuery object\r\n *   var api = $('#example').dataTable().api();\r\n *\r\n * @example\r\n *   // Initialisation as a constructor\r\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\r\n */\n_Api = function (context, data) {\n  if (!(this instanceof _Api)) {\n    return new _Api(context, data);\n  }\n  var settings = [];\n  var ctxSettings = function (o) {\n    var a = _toSettings(o);\n    if (a) {\n      settings.push.apply(settings, a);\n    }\n  };\n  if (Array.isArray(context)) {\n    for (var i = 0, ien = context.length; i < ien; i++) {\n      ctxSettings(context[i]);\n    }\n  } else {\n    ctxSettings(context);\n  }\n\n  // Remove duplicates\n  this.context = _unique(settings);\n\n  // Initial data\n  if (data) {\n    $.merge(this, data);\n  }\n\n  // selector\n  this.selector = {\n    rows: null,\n    cols: null,\n    opts: null\n  };\n  _Api.extend(this, this, __apiStruct);\n};\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend(_Api.prototype, {\n  any: function () {\n    return this.count() !== 0;\n  },\n  concat: __arrayProto.concat,\n  context: [],\n  // array of table settings objects\n\n  count: function () {\n    return this.flatten().length;\n  },\n  each: function (fn) {\n    for (var i = 0, ien = this.length; i < ien; i++) {\n      fn.call(this, this[i], i, this);\n    }\n    return this;\n  },\n  eq: function (idx) {\n    var ctx = this.context;\n    return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n  },\n  filter: function (fn) {\n    var a = [];\n    if (__arrayProto.filter) {\n      a = __arrayProto.filter.call(this, fn, this);\n    } else {\n      // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n      for (var i = 0, ien = this.length; i < ien; i++) {\n        if (fn.call(this, this[i], i, this)) {\n          a.push(this[i]);\n        }\n      }\n    }\n    return new _Api(this.context, a);\n  },\n  flatten: function () {\n    var a = [];\n    return new _Api(this.context, a.concat.apply(a, this.toArray()));\n  },\n  join: __arrayProto.join,\n  indexOf: __arrayProto.indexOf || function (obj, start) {\n    for (var i = start || 0, ien = this.length; i < ien; i++) {\n      if (this[i] === obj) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  iterator: function (flatten, type, fn, alwaysNew) {\n    var a = [],\n      ret,\n      i,\n      ien,\n      j,\n      jen,\n      context = this.context,\n      rows,\n      items,\n      item,\n      selector = this.selector;\n\n    // Argument shifting\n    if (typeof flatten === 'string') {\n      alwaysNew = fn;\n      fn = type;\n      type = flatten;\n      flatten = false;\n    }\n    for (i = 0, ien = context.length; i < ien; i++) {\n      var apiInst = new _Api(context[i]);\n      if (type === 'table') {\n        ret = fn.call(apiInst, context[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'columns' || type === 'rows') {\n        // this has same length as context - one entry for each table\n        ret = fn.call(apiInst, context[i], this[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n        // columns and rows share the same structure.\n        // 'this' is an array of column indexes for each context\n        items = this[i];\n        if (type === 'column-rows') {\n          rows = _selector_row_indexes(context[i], selector.opts);\n        }\n        for (j = 0, jen = items.length; j < jen; j++) {\n          item = items[j];\n          if (type === 'cell') {\n            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n          } else {\n            ret = fn.call(apiInst, context[i], item, i, j, rows);\n          }\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        }\n      }\n    }\n    if (a.length || alwaysNew) {\n      var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n      var apiSelector = api.selector;\n      apiSelector.rows = selector.rows;\n      apiSelector.cols = selector.cols;\n      apiSelector.opts = selector.opts;\n      return api;\n    }\n    return this;\n  },\n  lastIndexOf: __arrayProto.lastIndexOf || function (obj, start) {\n    // Bit cheeky...\n    return this.indexOf.apply(this.toArray.reverse(), arguments);\n  },\n  length: 0,\n  map: function (fn) {\n    var a = [];\n    if (__arrayProto.map) {\n      a = __arrayProto.map.call(this, fn, this);\n    } else {\n      // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n      for (var i = 0, ien = this.length; i < ien; i++) {\n        a.push(fn.call(this, this[i], i));\n      }\n    }\n    return new _Api(this.context, a);\n  },\n  pluck: function (prop) {\n    var fn = DataTable.util.get(prop);\n    return this.map(function (el) {\n      return fn(el);\n    });\n  },\n  pop: __arrayProto.pop,\n  push: __arrayProto.push,\n  // Does not return an API instance\n  reduce: __arrayProto.reduce || function (fn, init) {\n    return _fnReduce(this, fn, init, 0, this.length, 1);\n  },\n  reduceRight: __arrayProto.reduceRight || function (fn, init) {\n    return _fnReduce(this, fn, init, this.length - 1, -1, -1);\n  },\n  reverse: __arrayProto.reverse,\n  // Object with rows, columns and opts\n  selector: null,\n  shift: __arrayProto.shift,\n  slice: function () {\n    return new _Api(this.context, this);\n  },\n  sort: __arrayProto.sort,\n  // ? name - order?\n\n  splice: __arrayProto.splice,\n  toArray: function () {\n    return __arrayProto.slice.call(this);\n  },\n  to$: function () {\n    return $(this);\n  },\n  toJQuery: function () {\n    return $(this);\n  },\n  unique: function () {\n    return new _Api(this.context, _unique(this));\n  },\n  unshift: __arrayProto.unshift\n});\n_Api.extend = function (scope, obj, ext) {\n  // Only extend API instances and static properties of the API\n  if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {\n    return;\n  }\n  var i,\n    ien,\n    struct,\n    methodScoping = function (scope, fn, struc) {\n      return function () {\n        var ret = fn.apply(scope, arguments);\n\n        // Method extension\n        _Api.extend(ret, ret, struc.methodExt);\n        return ret;\n      };\n    };\n  for (i = 0, ien = ext.length; i < ien; i++) {\n    struct = ext[i];\n\n    // Value\n    obj[struct.name] = struct.type === 'function' ? methodScoping(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n    obj[struct.name].__dt_wrapper = true;\n\n    // Property extension\n    _Api.extend(scope, obj[struct.name], struct.propExt);\n  }\n};\n\n// @todo - Is there need for an augment function?\n// _Api.augment = function ( inst, name )\n// {\n// \t// Find src object in the structure from the name\n// \tvar parts = name.split('.');\n\n// \t_Api.extend( inst, obj );\n// };\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function (name, val) {\n  if (Array.isArray(name)) {\n    for (var j = 0, jen = name.length; j < jen; j++) {\n      _Api.register(name[j], val);\n    }\n    return;\n  }\n  var i,\n    ien,\n    heir = name.split('.'),\n    struct = __apiStruct,\n    key,\n    method;\n  var find = function (src, name) {\n    for (var i = 0, ien = src.length; i < ien; i++) {\n      if (src[i].name === name) {\n        return src[i];\n      }\n    }\n    return null;\n  };\n  for (i = 0, ien = heir.length; i < ien; i++) {\n    method = heir[i].indexOf('()') !== -1;\n    key = method ? heir[i].replace('()', '') : heir[i];\n    var src = find(struct, key);\n    if (!src) {\n      src = {\n        name: key,\n        val: {},\n        methodExt: [],\n        propExt: [],\n        type: 'object'\n      };\n      struct.push(src);\n    }\n    if (i === ien - 1) {\n      src.val = val;\n      src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n    } else {\n      struct = method ? src.methodExt : src.propExt;\n    }\n  }\n};\n_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n  _Api.register(pluralName, val);\n  _Api.register(singularName, function () {\n    var ret = val.apply(this, arguments);\n    if (ret === this) {\n      // Returned item is the API instance that was passed in, return it\n      return this;\n    } else if (ret instanceof _Api) {\n      // New API instance returned, want the value from the first item\n      // in the returned array for the singular result.\n      return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) :\n      // Array results are 'enhanced'\n      ret[0] : undefined;\n    }\n\n    // Non-API return - just fire it back\n    return ret;\n  });\n};\n\n/**\r\n * Selector for HTML tables. Apply the given selector to the give array of\r\n * DataTables settings objects.\r\n *\r\n * @param {string|integer} [selector] jQuery selector string or integer\r\n * @param  {array} Array of DataTables settings objects to be filtered\r\n * @return {array}\r\n * @ignore\r\n */\nvar __table_selector = function (selector, a) {\n  if (Array.isArray(selector)) {\n    return $.map(selector, function (item) {\n      return __table_selector(item, a);\n    });\n  }\n\n  // Integer is used to pick out a table by index\n  if (typeof selector === 'number') {\n    return [a[selector]];\n  }\n\n  // Perform a jQuery selector on the table nodes\n  var nodes = $.map(a, function (el, i) {\n    return el.nTable;\n  });\n  return $(nodes).filter(selector).map(function (i) {\n    // Need to translate back from the table node to the settings\n    var idx = $.inArray(this, nodes);\n    return a[idx];\n  }).toArray();\n};\n\n/**\r\n * Context selector for the API's context (i.e. the tables the API instance\r\n * refers to.\r\n *\r\n * @name    DataTable.Api#tables\r\n * @param {string|integer} [selector] Selector to pick which tables the iterator\r\n *   should operate on. If not given, all tables in the current context are\r\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\r\n *   select multiple tables or as an integer to select a single table.\r\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\r\n */\n_api_register('tables()', function (selector) {\n  // A new instance is created if there was a selector specified\n  return selector !== undefined && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;\n});\n_api_register('table()', function (selector) {\n  var tables = this.tables(selector);\n  var ctx = tables.context;\n\n  // Truncate to the first matched table\n  return ctx.length ? new _Api(ctx[0]) : tables;\n});\n_api_registerPlural('tables().nodes()', 'table().node()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTable;\n  }, 1);\n});\n_api_registerPlural('tables().body()', 'table().body()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTBody;\n  }, 1);\n});\n_api_registerPlural('tables().header()', 'table().header()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTHead;\n  }, 1);\n});\n_api_registerPlural('tables().footer()', 'table().footer()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTFoot;\n  }, 1);\n});\n_api_registerPlural('tables().containers()', 'table().container()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTableWrapper;\n  }, 1);\n});\n\n/**\r\n * Redraw the tables in the current context.\r\n */\n_api_register('draw()', function (paging) {\n  return this.iterator('table', function (settings) {\n    if (paging === 'page') {\n      _fnDraw(settings);\n    } else {\n      if (typeof paging === 'string') {\n        paging = paging === 'full-hold' ? false : true;\n      }\n      _fnReDraw(settings, paging === false);\n    }\n  });\n});\n\n/**\r\n * Get the current page index.\r\n *\r\n * @return {integer} Current page index (zero based)\r\n */ /**\r\n    * Set the current page.\r\n    *\r\n    * Note that if you attempt to show a page which does not exist, DataTables will\r\n    * not throw an error, but rather reset the paging.\r\n    *\r\n    * @param {integer|string} action The paging action to take. This can be one of:\r\n    *  * `integer` - The page index to jump to\r\n    *  * `string` - An action to take:\r\n    *    * `first` - Jump to first page.\r\n    *    * `next` - Jump to the next page\r\n    *    * `previous` - Jump to previous page\r\n    *    * `last` - Jump to the last page.\r\n    * @returns {DataTables.Api} this\r\n    */\n_api_register('page()', function (action) {\n  if (action === undefined) {\n    return this.page.info().page; // not an expensive call\n  }\n\n  // else, have an action to take on all tables\n  return this.iterator('table', function (settings) {\n    _fnPageChange(settings, action);\n  });\n});\n\n/**\r\n * Paging information for the first table in the current context.\r\n *\r\n * If you require paging information for another table, use the `table()` method\r\n * with a suitable selector.\r\n *\r\n * @return {object} Object with the following properties set:\r\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\r\n *  * `pages` - Total number of pages\r\n *  * `start` - Display index for the first record shown on the current page\r\n *  * `end` - Display index for the last record shown on the current page\r\n *  * `length` - Display length (number of records). Note that generally `start\r\n *    + length = end`, but this is not always true, for example if there are\r\n *    only 2 records to show on the final page, with a length of 10.\r\n *  * `recordsTotal` - Full data set length\r\n *  * `recordsDisplay` - Data set length once the current filtering criterion\r\n *    are applied.\r\n */\n_api_register('page.info()', function (action) {\n  if (this.context.length === 0) {\n    return undefined;\n  }\n  var settings = this.context[0],\n    start = settings._iDisplayStart,\n    len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1;\n  return {\n    \"page\": all ? 0 : Math.floor(start / len),\n    \"pages\": all ? 1 : Math.ceil(visRecords / len),\n    \"start\": start,\n    \"end\": settings.fnDisplayEnd(),\n    \"length\": len,\n    \"recordsTotal\": settings.fnRecordsTotal(),\n    \"recordsDisplay\": visRecords,\n    \"serverSide\": _fnDataSource(settings) === 'ssp'\n  };\n});\n\n/**\r\n * Get the current page length.\r\n *\r\n * @return {integer} Current page length. Note `-1` indicates that all records\r\n *   are to be shown.\r\n */ /**\r\n    * Set the current page length.\r\n    *\r\n    * @param {integer} Page length to set. Use `-1` to show all records.\r\n    * @returns {DataTables.Api} this\r\n    */\n_api_register('page.len()', function (len) {\n  // Note that we can't call this function 'length()' because `length`\n  // is a Javascript property of functions which defines how many arguments\n  // the function expects.\n  if (len === undefined) {\n    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n  }\n\n  // else, set the page length\n  return this.iterator('table', function (settings) {\n    _fnLengthChange(settings, len);\n  });\n});\nvar __reload = function (settings, holdPosition, callback) {\n  // Use the draw event to trigger a callback\n  if (callback) {\n    var api = new _Api(settings);\n    api.one('draw', function () {\n      callback(api.ajax.json());\n    });\n  }\n  if (_fnDataSource(settings) == 'ssp') {\n    _fnReDraw(settings, holdPosition);\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Cancel an existing request\n    var xhr = settings.jqXHR;\n    if (xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    }\n\n    // Trigger xhr\n    _fnBuildAjax(settings, [], function (json) {\n      _fnClearTable(settings);\n      var data = _fnAjaxDataSrc(settings, json);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        _fnAddData(settings, data[i]);\n      }\n      _fnReDraw(settings, holdPosition);\n      _fnProcessingDisplay(settings, false);\n    });\n  }\n};\n\n/**\r\n * Get the JSON response from the last Ajax request that DataTables made to the\r\n * server. Note that this returns the JSON from the first table in the current\r\n * context.\r\n *\r\n * @return {object} JSON received from the server.\r\n */\n_api_register('ajax.json()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].json;\n  }\n\n  // else return undefined;\n});\n\n/**\r\n * Get the data submitted in the last Ajax request\r\n */\n_api_register('ajax.params()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].oAjaxData;\n  }\n\n  // else return undefined;\n});\n\n/**\r\n * Reload tables from the Ajax data source. Note that this function will\r\n * automatically re-draw the table when the remote data has been loaded.\r\n *\r\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\r\n *   position. A full re-sort and re-filter is performed when this method is\r\n *   called, which is why the pagination reset is the default action.\r\n * @returns {DataTables.Api} this\r\n */\n_api_register('ajax.reload()', function (callback, resetPaging) {\n  return this.iterator('table', function (settings) {\n    __reload(settings, resetPaging === false, callback);\n  });\n});\n\n/**\r\n * Get the current Ajax URL. Note that this returns the URL from the first\r\n * table in the current context.\r\n *\r\n * @return {string} Current Ajax source URL\r\n */ /**\r\n    * Set the Ajax URL. Note that this will set the URL for all tables in the\r\n    * current context.\r\n    *\r\n    * @param {string} url URL to set.\r\n    * @returns {DataTables.Api} this\r\n    */\n_api_register('ajax.url()', function (url) {\n  var ctx = this.context;\n  if (url === undefined) {\n    // get\n    if (ctx.length === 0) {\n      return undefined;\n    }\n    ctx = ctx[0];\n    return ctx.ajax ? $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax : ctx.sAjaxSource;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if ($.isPlainObject(settings.ajax)) {\n      settings.ajax.url = url;\n    } else {\n      settings.ajax = url;\n    }\n    // No need to consider sAjaxSource here since DataTables gives priority\n    // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n    // value of `sAjaxSource` redundant.\n  });\n});\n\n/**\r\n * Load data from the newly set Ajax URL. Note that this method is only\r\n * available when `ajax.url()` is used to set a URL. Additionally, this method\r\n * has the same effect as calling `ajax.reload()` but is provided for\r\n * convenience when setting a new URL. Like `ajax.reload()` it will\r\n * automatically redraw the table once the remote data has been loaded.\r\n *\r\n * @returns {DataTables.Api} this\r\n */\n_api_register('ajax.url().load()', function (callback, resetPaging) {\n  // Same as a reload, but makes sense to present it for easy access after a\n  // url change\n  return this.iterator('table', function (ctx) {\n    __reload(ctx, resetPaging === false, callback);\n  });\n});\nvar _selector_run = function (type, selector, selectFn, settings, opts) {\n  var out = [],\n    res,\n    a,\n    i,\n    ien,\n    j,\n    jen,\n    selectorType = typeof selector;\n\n  // Can't just check for isArray here, as an API or jQuery instance might be\n  // given with their array like look\n  if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n    selector = [selector];\n  }\n  for (i = 0, ien = selector.length; i < ien; i++) {\n    // Only split on simple strings - complex expressions will be jQuery selectors\n    a = selector[i] && selector[i].split && !selector[i].match(/[\\[\\(:]/) ? selector[i].split(',') : [selector[i]];\n    for (j = 0, jen = a.length; j < jen; j++) {\n      res = selectFn(typeof a[j] === 'string' ? a[j].trim() : a[j]);\n      if (res && res.length) {\n        out = out.concat(res);\n      }\n    }\n  }\n\n  // selector extensions\n  var ext = _ext.selector[type];\n  if (ext.length) {\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      out = ext[i](settings, opts, out);\n    }\n  }\n  return _unique(out);\n};\nvar _selector_opts = function (opts) {\n  if (!opts) {\n    opts = {};\n  }\n\n  // Backwards compatibility for 1.9- which used the terminology filter rather\n  // than search\n  if (opts.filter && opts.search === undefined) {\n    opts.search = opts.filter;\n  }\n  return $.extend({\n    search: 'none',\n    order: 'current',\n    page: 'all'\n  }, opts);\n};\nvar _selector_first = function (inst) {\n  // Reduce the API instance to the first item found\n  for (var i = 0, ien = inst.length; i < ien; i++) {\n    if (inst[i].length > 0) {\n      // Assign the first element to the first item in the instance\n      // and truncate the instance and context\n      inst[0] = inst[i];\n      inst[0].length = 1;\n      inst.length = 1;\n      inst.context = [inst.context[i]];\n      return inst;\n    }\n  }\n\n  // Not found - return an empty instance\n  inst.length = 0;\n  return inst;\n};\nvar _selector_row_indexes = function (settings, opts) {\n  var i,\n    ien,\n    tmp,\n    a = [],\n    displayFiltered = settings.aiDisplay,\n    displayMaster = settings.aiDisplayMaster;\n  var search = opts.search,\n    // none, applied, removed\n    order = opts.order,\n    // applied, current, index (original - compatibility with 1.9)\n    page = opts.page; // all, current\n\n  if (_fnDataSource(settings) == 'ssp') {\n    // In server-side processing mode, most options are irrelevant since\n    // rows not shown don't exist and the index order is the applied order\n    // Removed is a special case - for consistency just return an empty\n    // array\n    return search === 'removed' ? [] : _range(0, displayMaster.length);\n  } else if (page == 'current') {\n    // Current page implies that order=current and filter=applied, since it is\n    // fairly senseless otherwise, regardless of what order and search actually\n    // are\n    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n      a.push(displayFiltered[i]);\n    }\n  } else if (order == 'current' || order == 'applied') {\n    if (search == 'none') {\n      a = displayMaster.slice();\n    } else if (search == 'applied') {\n      a = displayFiltered.slice();\n    } else if (search == 'removed') {\n      // O(n+m) solution by creating a hash map\n      var displayFilteredMap = {};\n      for (var i = 0, ien = displayFiltered.length; i < ien; i++) {\n        displayFilteredMap[displayFiltered[i]] = null;\n      }\n      a = $.map(displayMaster, function (el) {\n        return !displayFilteredMap.hasOwnProperty(el) ? el : null;\n      });\n    }\n  } else if (order == 'index' || order == 'original') {\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      if (search == 'none') {\n        a.push(i);\n      } else {\n        // applied | removed\n        tmp = $.inArray(i, displayFiltered);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(i);\n        }\n      }\n    }\n  }\n  return a;\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Rows\r\n *\r\n * {}          - no selector - use all available rows\r\n * {integer}   - row aoData index\r\n * {node}      - TR node\r\n * {string}    - jQuery selector to apply to the TR elements\r\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\r\n *\r\n */\nvar __row_selector = function (settings, selector, opts) {\n  var rows;\n  var run = function (sel) {\n    var selInt = _intVal(sel);\n    var i, ien;\n    var aoData = settings.aoData;\n\n    // Short cut - selector is a number and no options provided (default is\n    // all records, so no need to check if the index is in there, since it\n    // must be - dev error if the index doesn't exist).\n    if (selInt !== null && !opts) {\n      return [selInt];\n    }\n    if (!rows) {\n      rows = _selector_row_indexes(settings, opts);\n    }\n    if (selInt !== null && $.inArray(selInt, rows) !== -1) {\n      // Selector - integer\n      return [selInt];\n    } else if (sel === null || sel === undefined || sel === '') {\n      // Selector - none\n      return rows;\n    }\n\n    // Selector - function\n    if (typeof sel === 'function') {\n      return $.map(rows, function (idx) {\n        var row = aoData[idx];\n        return sel(idx, row._aData, row.nTr) ? idx : null;\n      });\n    }\n\n    // Selector - node\n    if (sel.nodeName) {\n      var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n      var cellIdx = sel._DT_CellIndex;\n      if (rowIdx !== undefined) {\n        // Make sure that the row is actually still present in the table\n        return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n      } else if (cellIdx) {\n        return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n      } else {\n        var host = $(sel).closest('*[data-dt-row]');\n        return host.length ? [host.data('dt-row')] : [];\n      }\n    }\n\n    // ID selector. Want to always be able to select rows by id, regardless\n    // of if the tr element has been created or not, so can't rely upon\n    // jQuery here - hence a custom implementation. This does not match\n    // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n    // but to select it using a CSS selector engine (like Sizzle or\n    // querySelect) it would need to need to be escaped for some characters.\n    // DataTables simplifies this for row selectors since you can select\n    // only a row. A # indicates an id any anything that follows is the id -\n    // unescaped.\n    if (typeof sel === 'string' && sel.charAt(0) === '#') {\n      // get row index from id\n      var rowObj = settings.aIds[sel.replace(/^#/, '')];\n      if (rowObj !== undefined) {\n        return [rowObj.idx];\n      }\n\n      // need to fall through to jQuery in case there is DOM id that\n      // matches\n    }\n\n    // Get nodes in the order from the `rows` array with null values removed\n    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr'));\n\n    // Selector - jQuery selector string, array of nodes or jQuery object/\n    // As jQuery's .filter() allows jQuery objects to be passed in filter,\n    // it also allows arrays, so this will cope with all three options\n    return $(nodes).filter(sel).map(function () {\n      return this._DT_RowIndex;\n    }).toArray();\n  };\n  return _selector_run('row', selector, run, settings, opts);\n};\n_api_register('rows()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __row_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in __row_selector?\n  inst.selector.rows = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_register('rows().nodes()', function () {\n  return this.iterator('row', function (settings, row) {\n    return settings.aoData[row].nTr || undefined;\n  }, 1);\n});\n_api_register('rows().data()', function () {\n  return this.iterator(true, 'rows', function (settings, rows) {\n    return _pluck_order(settings.aoData, rows, '_aData');\n  }, 1);\n});\n_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n  return this.iterator('row', function (settings, row) {\n    var r = settings.aoData[row];\n    return type === 'search' ? r._aFilterData : r._aSortData;\n  }, 1);\n});\n_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n  return this.iterator('row', function (settings, row) {\n    _fnInvalidate(settings, row, src);\n  });\n});\n_api_registerPlural('rows().indexes()', 'row().index()', function () {\n  return this.iterator('row', function (settings, row) {\n    return row;\n  }, 1);\n});\n_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n  var a = [];\n  var context = this.context;\n\n  // `iterator` will drop undefined values, but in this case we want them\n  for (var i = 0, ien = context.length; i < ien; i++) {\n    for (var j = 0, jen = this[i].length; j < jen; j++) {\n      var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n      a.push((hash === true ? '#' : '') + id);\n    }\n  }\n  return new _Api(context, a);\n});\n_api_registerPlural('rows().remove()', 'row().remove()', function () {\n  var that = this;\n  this.iterator('row', function (settings, row, thatIdx) {\n    var data = settings.aoData;\n    var rowData = data[row];\n    var i, ien, j, jen;\n    var loopRow, loopCells;\n    data.splice(row, 1);\n\n    // Update the cached indexes\n    for (i = 0, ien = data.length; i < ien; i++) {\n      loopRow = data[i];\n      loopCells = loopRow.anCells;\n\n      // Rows\n      if (loopRow.nTr !== null) {\n        loopRow.nTr._DT_RowIndex = i;\n      }\n\n      // Cells\n      if (loopCells !== null) {\n        for (j = 0, jen = loopCells.length; j < jen; j++) {\n          loopCells[j]._DT_CellIndex.row = i;\n        }\n      }\n    }\n\n    // Delete from the display arrays\n    _fnDeleteIndex(settings.aiDisplayMaster, row);\n    _fnDeleteIndex(settings.aiDisplay, row);\n    _fnDeleteIndex(that[thatIdx], row, false); // maintain local indexes\n\n    // For server-side processing tables - subtract the deleted row from the count\n    if (settings._iRecordsDisplay > 0) {\n      settings._iRecordsDisplay--;\n    }\n\n    // Check for an 'overflow' they case for displaying the table\n    _fnLengthOverflow(settings);\n\n    // Remove the row's ID reference if there is one\n    var id = settings.rowIdFn(rowData._aData);\n    if (id !== undefined) {\n      delete settings.aIds[id];\n    }\n  });\n  this.iterator('table', function (settings) {\n    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n      settings.aoData[i].idx = i;\n    }\n  });\n  return this;\n});\n_api_register('rows.add()', function (rows) {\n  var newRows = this.iterator('table', function (settings) {\n    var row, i, ien;\n    var out = [];\n    for (i = 0, ien = rows.length; i < ien; i++) {\n      row = rows[i];\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        out.push(_fnAddTr(settings, row)[0]);\n      } else {\n        out.push(_fnAddData(settings, row));\n      }\n    }\n    return out;\n  }, 1);\n\n  // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n  var modRows = this.rows(-1);\n  modRows.pop();\n  $.merge(modRows, newRows);\n  return modRows;\n});\n\n/**\r\n *\r\n */\n_api_register('row()', function (selector, opts) {\n  return _selector_first(this.rows(selector, opts));\n});\n_api_register('row().data()', function (data) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // Get\n    return ctx.length && this.length ? ctx[0].aoData[this[0]]._aData : undefined;\n  }\n\n  // Set\n  var row = ctx[0].aoData[this[0]];\n  row._aData = data;\n\n  // If the DOM has an id, and the data source is an array\n  if (Array.isArray(data) && row.nTr && row.nTr.id) {\n    _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n  }\n\n  // Automatically invalidate\n  _fnInvalidate(ctx[0], this[0], 'data');\n  return this;\n});\n_api_register('row().node()', function () {\n  var ctx = this.context;\n  return ctx.length && this.length ? ctx[0].aoData[this[0]].nTr || null : null;\n});\n_api_register('row.add()', function (row) {\n  // Allow a jQuery object to be passed in - only a single row is added from\n  // it though - the first element in the set\n  if (row instanceof $ && row.length) {\n    row = row[0];\n  }\n  var rows = this.iterator('table', function (settings) {\n    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n      return _fnAddTr(settings, row)[0];\n    }\n    return _fnAddData(settings, row);\n  });\n\n  // Return an Api.rows() extended instance, with the newly added row selected\n  return this.row(rows[0]);\n});\n$(document).on('plugin-init.dt', function (e, context) {\n  var api = new _Api(context);\n  var namespace = 'on-plugin-init';\n  var stateSaveParamsEvent = 'stateSaveParams.' + namespace;\n  var destroyEvent = 'destroy. ' + namespace;\n  api.on(stateSaveParamsEvent, function (e, settings, d) {\n    // This could be more compact with the API, but it is a lot faster as a simple\n    // internal loop\n    var idFn = settings.rowIdFn;\n    var data = settings.aoData;\n    var ids = [];\n    for (var i = 0; i < data.length; i++) {\n      if (data[i]._detailsShow) {\n        ids.push('#' + idFn(data[i]._aData));\n      }\n    }\n    d.childRows = ids;\n  });\n  api.on(destroyEvent, function () {\n    api.off(stateSaveParamsEvent + ' ' + destroyEvent);\n  });\n  var loaded = api.state.loaded();\n  if (loaded && loaded.childRows) {\n    api.rows($.map(loaded.childRows, function (id) {\n      return id.replace(/:/g, '\\\\:');\n    })).every(function () {\n      _fnCallbackFire(context, null, 'requestChild', [this]);\n    });\n  }\n});\nvar __details_add = function (ctx, row, data, klass) {\n  // Convert to array of TR elements\n  var rows = [];\n  var addRow = function (r, k) {\n    // Recursion to allow for arrays of jQuery objects\n    if (Array.isArray(r) || r instanceof $) {\n      for (var i = 0, ien = r.length; i < ien; i++) {\n        addRow(r[i], k);\n      }\n      return;\n    }\n\n    // If we get a TR element, then just add it directly - up to the dev\n    // to add the correct number of columns etc\n    if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n      rows.push(r);\n    } else {\n      // Otherwise create a row with a wrapper\n      var created = $('<tr><td></td></tr>').addClass(k);\n      $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n      rows.push(created[0]);\n    }\n  };\n  addRow(data, klass);\n  if (row._details) {\n    row._details.detach();\n  }\n  row._details = $(rows);\n\n  // If the children were already shown, that state should be retained\n  if (row._detailsShow) {\n    row._details.insertAfter(row.nTr);\n  }\n};\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(function (ctx) {\n  _fnSaveState(ctx[0]);\n}, 500);\nvar __details_remove = function (api, idx) {\n  var ctx = api.context;\n  if (ctx.length) {\n    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n    if (row && row._details) {\n      row._details.remove();\n      row._detailsShow = undefined;\n      row._details = undefined;\n      $(row.nTr).removeClass('dt-hasChild');\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_display = function (api, show) {\n  var ctx = api.context;\n  if (ctx.length && api.length) {\n    var row = ctx[0].aoData[api[0]];\n    if (row._details) {\n      row._detailsShow = show;\n      if (show) {\n        row._details.insertAfter(row.nTr);\n        $(row.nTr).addClass('dt-hasChild');\n      } else {\n        row._details.detach();\n        $(row.nTr).removeClass('dt-hasChild');\n      }\n      _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n      __details_events(ctx[0]);\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_events = function (settings) {\n  var api = new _Api(settings);\n  var namespace = '.dt.DT_details';\n  var drawEvent = 'draw' + namespace;\n  var colvisEvent = 'column-sizing' + namespace;\n  var destroyEvent = 'destroy' + namespace;\n  var data = settings.aoData;\n  api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n  if (_pluck(data, '_details').length > 0) {\n    // On each draw, insert the required elements into the document\n    api.on(drawEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      api.rows({\n        page: 'current'\n      }).eq(0).each(function (idx) {\n        // Internal data grab\n        var row = data[idx];\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr);\n        }\n      });\n    });\n\n    // Column visibility change - update the colspan\n    api.on(colvisEvent, function (e, ctx, idx, vis) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      // Update the colspan for the details rows (note, only if it already has\n      // a colspan)\n      var row,\n        visible = _fnVisbleColumns(ctx);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        row = data[i];\n        if (row._details) {\n          row._details.children('td[colspan]').attr('colspan', visible);\n        }\n      }\n    });\n\n    // Table destroyed - nuke any child rows\n    api.on(destroyEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        if (data[i]._details) {\n          __details_remove(api, i);\n        }\n      }\n    });\n  }\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp + 'row().child';\nvar _child_mth = _child_obj + '()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register(_child_mth, function (data, klass) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // get\n    return ctx.length && this.length ? ctx[0].aoData[this[0]]._details : undefined;\n  } else if (data === true) {\n    // show\n    this.child.show();\n  } else if (data === false) {\n    // remove\n    __details_remove(this);\n  } else if (ctx.length && this.length) {\n    // set\n    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n  }\n  return this;\n});\n_api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n], function (show) {\n  // it returns an object and this method is not executed)\n  __details_display(this, true);\n  return this;\n});\n_api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, false);\n  return this;\n});\n_api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_remove(this);\n  return this;\n});\n_api_register(_child_obj + '.isShown()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length) {\n    // _detailsShown as false or undefined will fall through to return false\n    return ctx[0].aoData[this[0]]._detailsShow || false;\n  }\n  return false;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Columns\r\n *\r\n * {integer}           - column index (>=0 count from left, <0 count from right)\r\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\r\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\r\n * \"{string}:name\"     - column name\r\n * \"{string}\"          - jQuery selector on column header nodes\r\n *\r\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function (settings, column, r1, r2, rows) {\n  var a = [];\n  for (var row = 0, ien = rows.length; row < ien; row++) {\n    a.push(_fnGetCellData(settings, rows[row], column));\n  }\n  return a;\n};\nvar __column_selector = function (settings, selector, opts) {\n  var columns = settings.aoColumns,\n    names = _pluck(columns, 'sName'),\n    nodes = _pluck(columns, 'nTh');\n  var run = function (s) {\n    var selInt = _intVal(s);\n\n    // Selector - all\n    if (s === '') {\n      return _range(columns.length);\n    }\n\n    // Selector - index\n    if (selInt !== null) {\n      return [selInt >= 0 ? selInt :\n      // Count from left\n      columns.length + selInt // Count from right (+ because its a negative value)\n      ];\n    }\n\n    // Selector = function\n    if (typeof s === 'function') {\n      var rows = _selector_row_indexes(settings, opts);\n      return $.map(columns, function (col, idx) {\n        return s(idx, __columnData(settings, idx, 0, 0, rows), nodes[idx]) ? idx : null;\n      });\n    }\n\n    // jQuery or string selector\n    var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n    if (match) {\n      switch (match[2]) {\n        case 'visIdx':\n        case 'visible':\n          var idx = parseInt(match[1], 10);\n          // Visible index given, convert to column index\n          if (idx < 0) {\n            // Counting from the right\n            var visColumns = $.map(columns, function (col, i) {\n              return col.bVisible ? i : null;\n            });\n            return [visColumns[visColumns.length + idx]];\n          }\n          // Counting from the left\n          return [_fnVisibleToColumnIndex(settings, idx)];\n        case 'name':\n          // match by name. `names` is column index complete and in order\n          return $.map(names, function (name, i) {\n            return name === match[1] ? i : null;\n          });\n        default:\n          return [];\n      }\n    }\n\n    // Cell in the table body\n    if (s.nodeName && s._DT_CellIndex) {\n      return [s._DT_CellIndex.column];\n    }\n\n    // jQuery selector on the TH elements for the columns\n    var jqResult = $(nodes).filter(s).map(function () {\n      return $.inArray(this, nodes); // `nodes` is column index complete and in order\n    }).toArray();\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise a node which might have a `dt-column` data attribute, or be\n    // a child or such an element\n    var host = $(s).closest('*[data-dt-column]');\n    return host.length ? [host.data('dt-column')] : [];\n  };\n  return _selector_run('column', selector, run, settings, opts);\n};\nvar __setColumnVis = function (settings, column, vis) {\n  var cols = settings.aoColumns,\n    col = cols[column],\n    data = settings.aoData,\n    row,\n    cells,\n    i,\n    ien,\n    tr;\n\n  // Get\n  if (vis === undefined) {\n    return col.bVisible;\n  }\n\n  // Set\n  // No change\n  if (col.bVisible === vis) {\n    return;\n  }\n  if (vis) {\n    // Insert column\n    // Need to decide if we should use appendChild or insertBefore\n    var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n    for (i = 0, ien = data.length; i < ien; i++) {\n      tr = data[i].nTr;\n      cells = data[i].anCells;\n      if (tr) {\n        // insertBefore can act like appendChild if 2nd arg is null\n        tr.insertBefore(cells[column], cells[insertBefore] || null);\n      }\n    }\n  } else {\n    // Remove column\n    $(_pluck(settings.aoData, 'anCells', column)).detach();\n  }\n\n  // Common actions\n  col.bVisible = vis;\n};\n_api_register('columns()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __column_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in _row_selector?\n  inst.selector.cols = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].nTh;\n  }, 1);\n});\n_api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].nTf;\n  }, 1);\n});\n_api_registerPlural('columns().data()', 'column().data()', function () {\n  return this.iterator('column-rows', __columnData, 1);\n});\n_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].mData;\n  }, 1);\n});\n_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n  }, 1);\n});\n_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, 'anCells', column);\n  }, 1);\n});\n_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n  var that = this;\n  var ret = this.iterator('column', function (settings, column) {\n    if (vis === undefined) {\n      return settings.aoColumns[column].bVisible;\n    } // else\n    __setColumnVis(settings, column, vis);\n  });\n\n  // Group the column visibility changes\n  if (vis !== undefined) {\n    this.iterator('table', function (settings) {\n      // Redraw the header after changes\n      _fnDrawHead(settings, settings.aoHeader);\n      _fnDrawHead(settings, settings.aoFooter);\n\n      // Update colspan for no records display. Child rows and extensions will use their own\n      // listeners to do this - only need to update the empty table item here\n      if (!settings.aiDisplay.length) {\n        $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n      }\n      _fnSaveState(settings);\n\n      // Second loop once the first is done for events\n      that.iterator('column', function (settings, column) {\n        _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n      });\n      if (calc === undefined || calc) {\n        that.columns.adjust();\n      }\n    });\n  }\n  return ret;\n});\n_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n  return this.iterator('column', function (settings, column) {\n    return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n  }, 1);\n});\n_api_register('columns.adjust()', function () {\n  return this.iterator('table', function (settings) {\n    _fnAdjustColumnSizing(settings);\n  }, 1);\n});\n_api_register('column.index()', function (type, idx) {\n  if (this.context.length !== 0) {\n    var ctx = this.context[0];\n    if (type === 'fromVisible' || type === 'toData') {\n      return _fnVisibleToColumnIndex(ctx, idx);\n    } else if (type === 'fromData' || type === 'toVisible') {\n      return _fnColumnIndexToVisible(ctx, idx);\n    }\n  }\n});\n_api_register('column()', function (selector, opts) {\n  return _selector_first(this.columns(selector, opts));\n});\nvar __cell_selector = function (settings, selector, opts) {\n  var data = settings.aoData;\n  var rows = _selector_row_indexes(settings, opts);\n  var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n  var allCells = $(_flatten([], cells));\n  var row;\n  var columns = settings.aoColumns.length;\n  var a, i, ien, j, o, host;\n  var run = function (s) {\n    var fnSelector = typeof s === 'function';\n    if (s === null || s === undefined || fnSelector) {\n      // All cells and function selectors\n      a = [];\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n        for (j = 0; j < columns; j++) {\n          o = {\n            row: row,\n            column: j\n          };\n          if (fnSelector) {\n            // Selector - function\n            host = data[row];\n            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n              a.push(o);\n            }\n          } else {\n            // Selector - all\n            a.push(o);\n          }\n        }\n      }\n      return a;\n    }\n\n    // Selector - index\n    if ($.isPlainObject(s)) {\n      // Valid cell index and its in the array of selectable rows\n      return s.column !== undefined && s.row !== undefined && $.inArray(s.row, rows) !== -1 ? [s] : [];\n    }\n\n    // Selector - jQuery filtered cells\n    var jqResult = allCells.filter(s).map(function (i, el) {\n      return {\n        // use a new object, in case someone changes the values\n        row: el._DT_CellIndex.row,\n        column: el._DT_CellIndex.column\n      };\n    }).toArray();\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise the selector is a node, and there is one last option - the\n    // element might be a child of an element which has dt-row and dt-column\n    // data attributes\n    host = $(s).closest('*[data-dt-row]');\n    return host.length ? [{\n      row: host.data('dt-row'),\n      column: host.data('dt-column')\n    }] : [];\n  };\n  return _selector_run('cell', selector, run, settings, opts);\n};\n_api_register('cells()', function (rowSelector, columnSelector, opts) {\n  // Argument shifting\n  if ($.isPlainObject(rowSelector)) {\n    // Indexes\n    if (rowSelector.row === undefined) {\n      // Selector options in first parameter\n      opts = rowSelector;\n      rowSelector = null;\n    } else {\n      // Cell index objects in first parameter\n      opts = columnSelector;\n      columnSelector = null;\n    }\n  }\n  if ($.isPlainObject(columnSelector)) {\n    opts = columnSelector;\n    columnSelector = null;\n  }\n\n  // Cell selector\n  if (columnSelector === null || columnSelector === undefined) {\n    return this.iterator('table', function (settings) {\n      return __cell_selector(settings, rowSelector, _selector_opts(opts));\n    });\n  }\n\n  // The default built in options need to apply to row and columns\n  var internalOpts = opts ? {\n    page: opts.page,\n    order: opts.order,\n    search: opts.search\n  } : {};\n\n  // Row + column selector\n  var columns = this.columns(columnSelector, internalOpts);\n  var rows = this.rows(rowSelector, internalOpts);\n  var i, ien, j, jen;\n  var cellsNoOpts = this.iterator('table', function (settings, idx) {\n    var a = [];\n    for (i = 0, ien = rows[idx].length; i < ien; i++) {\n      for (j = 0, jen = columns[idx].length; j < jen; j++) {\n        a.push({\n          row: rows[idx][i],\n          column: columns[idx][j]\n        });\n      }\n    }\n    return a;\n  }, 1);\n\n  // There is currently only one extension which uses a cell selector extension\n  // It is a _major_ performance drag to run this if it isn't needed, so this is\n  // an extension specific check at the moment\n  var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n  $.extend(cells.selector, {\n    cols: columnSelector,\n    rows: rowSelector,\n    opts: opts\n  });\n  return cells;\n});\n_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    var data = settings.aoData[row];\n    return data && data.anCells ? data.anCells[column] : undefined;\n  }, 1);\n});\n_api_register('cells().data()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column);\n  }, 1);\n});\n_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n  type = type === 'search' ? '_aFilterData' : '_aSortData';\n  return this.iterator('cell', function (settings, row, column) {\n    return settings.aoData[row][type][column];\n  }, 1);\n});\n_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column, type);\n  }, 1);\n});\n_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return {\n      row: row,\n      column: column,\n      columnVisible: _fnColumnIndexToVisible(settings, column)\n    };\n  }, 1);\n});\n_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n  return this.iterator('cell', function (settings, row, column) {\n    _fnInvalidate(settings, row, src, column);\n  });\n});\n_api_register('cell()', function (rowSelector, columnSelector, opts) {\n  return _selector_first(this.cells(rowSelector, columnSelector, opts));\n});\n_api_register('cell().data()', function (data) {\n  var ctx = this.context;\n  var cell = this[0];\n  if (data === undefined) {\n    // Get\n    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n  }\n\n  // Set\n  _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n  _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n  return this;\n});\n\n/**\r\n * Get current ordering (sorting) that has been applied to the table.\r\n *\r\n * @returns {array} 2D array containing the sorting information for the first\r\n *   table in the current context. Each element in the parent array represents\r\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\r\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\r\n *   the column index that the sorting condition applies to, the second is the\r\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\r\n *   index of the sorting order from the `column.sorting` initialisation array.\r\n */ /**\r\n    * Set the ordering for the table.\r\n    *\r\n    * @param {integer} order Column index to sort upon.\r\n    * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\r\n    * @returns {DataTables.Api} this\r\n    */ /**\r\n       * Set the ordering for the table.\r\n       *\r\n       * @param {array} order 1D array of sorting information to be applied.\r\n       * @param {array} [...] Optional additional sorting conditions\r\n       * @returns {DataTables.Api} this\r\n       */ /**\r\n          * Set the ordering for the table.\r\n          *\r\n          * @param {array} order 2D array of sorting information to be applied.\r\n          * @returns {DataTables.Api} this\r\n          */\n_api_register('order()', function (order, dir) {\n  var ctx = this.context;\n  if (order === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n  }\n\n  // set\n  if (typeof order === 'number') {\n    // Simple column / direction passed in\n    order = [[order, dir]];\n  } else if (order.length && !Array.isArray(order[0])) {\n    // Arguments passed in (list of 1D arrays)\n    order = Array.prototype.slice.call(arguments);\n  }\n  // otherwise a 2D array was passed in\n\n  return this.iterator('table', function (settings) {\n    settings.aaSorting = order.slice();\n  });\n});\n\n/**\r\n * Attach a sort listener to an element for a given column\r\n *\r\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\r\n *   listener to. This can take the form of a single DOM node, a jQuery\r\n *   collection of nodes or a jQuery selector which will identify the node(s).\r\n * @param {integer} column the column that a click on this node will sort on\r\n * @param {function} [callback] callback function when sort is run\r\n * @returns {DataTables.Api} this\r\n */\n_api_register('order.listener()', function (node, column, callback) {\n  return this.iterator('table', function (settings) {\n    _fnSortAttachListener(settings, node, column, callback);\n  });\n});\n_api_register('order.fixed()', function (set) {\n  if (!set) {\n    var ctx = this.context;\n    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n    return Array.isArray(fixed) ? {\n      pre: fixed\n    } : fixed;\n  }\n  return this.iterator('table', function (settings) {\n    settings.aaSortingFixed = $.extend(true, {}, set);\n  });\n});\n\n// Order by the selected column(s)\n_api_register(['columns().order()', 'column().order()'], function (dir) {\n  var that = this;\n  return this.iterator('table', function (settings, i) {\n    var sort = [];\n    $.each(that[i], function (j, col) {\n      sort.push([col, dir]);\n    });\n    settings.aaSorting = sort;\n  });\n});\n_api_register('search()', function (input, regex, smart, caseInsen) {\n  var ctx = this.context;\n  if (input === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].oPreviousSearch.sSearch : undefined;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n      \"sSearch\": input + \"\",\n      \"bRegex\": regex === null ? false : regex,\n      \"bSmart\": smart === null ? true : smart,\n      \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n    }), 1);\n  });\n});\n_api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n  return this.iterator('column', function (settings, column) {\n    var preSearch = settings.aoPreSearchCols;\n    if (input === undefined) {\n      // get\n      return preSearch[column].sSearch;\n    }\n\n    // set\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    $.extend(preSearch[column], {\n      \"sSearch\": input + \"\",\n      \"bRegex\": regex === null ? false : regex,\n      \"bSmart\": smart === null ? true : smart,\n      \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n    });\n    _fnFilterComplete(settings, settings.oPreviousSearch, 1);\n  });\n});\n\n/*\r\n * State API methods\r\n */\n\n_api_register('state()', function () {\n  return this.context.length ? this.context[0].oSavedState : null;\n});\n_api_register('state.clear()', function () {\n  return this.iterator('table', function (settings) {\n    // Save an empty object\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n  });\n});\n_api_register('state.loaded()', function () {\n  return this.context.length ? this.context[0].oLoadedState : null;\n});\n_api_register('state.save()', function () {\n  return this.iterator('table', function (settings) {\n    _fnSaveState(settings);\n  });\n});\n\n/**\r\n * Set the jQuery or window object to be used by DataTables\r\n *\r\n * @param {*} module Library / container object\r\n * @param {string} type Library or container type `lib` or `win`.\r\n */\nDataTable.use = function (module, type) {\n  if (type === 'lib' || module.fn) {\n    $ = module;\n  } else if (type == 'win' || module.document) {\n    window = module;\n    document = module.document;\n  }\n};\n\n/**\r\n * CommonJS factory function pass through. This will check if the arguments\r\n * given are a window object or a jQuery object. If so they are set\r\n * accordingly.\r\n * @param {*} root Window\r\n * @param {*} jq jQUery\r\n * @returns {boolean} Indicator\r\n */\nDataTable.factory = function (root, jq) {\n  var is = false;\n\n  // Test if the first parameter is a window object\n  if (root && root.document) {\n    window = root;\n    document = root.document;\n  }\n\n  // Test if the second parameter is a jQuery object\n  if (jq && jq.fn && jq.fn.jquery) {\n    $ = jq;\n    is = true;\n  }\n  return is;\n};\n\n/**\r\n * Provide a common method for plug-ins to check the version of DataTables being\r\n * used, in order to ensure compatibility.\r\n *\r\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\r\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\r\n *  @returns {boolean} true if this version of DataTables is greater or equal to\r\n *    the required version, or false if this version of DataTales is not\r\n *    suitable\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\r\n */\nDataTable.versionCheck = DataTable.fnVersionCheck = function (version) {\n  var aThis = DataTable.version.split('.');\n  var aThat = version.split('.');\n  var iThis, iThat;\n  for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n    iThis = parseInt(aThis[i], 10) || 0;\n    iThat = parseInt(aThat[i], 10) || 0;\n\n    // Parts are the same, keep comparing\n    if (iThis === iThat) {\n      continue;\n    }\n\n    // Parts are different, return immediately\n    return iThis > iThat;\n  }\n  return true;\n};\n\n/**\r\n * Check if a `<table>` node is a DataTable table already or not.\r\n *\r\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\r\n *      selector for the table to test. Note that if more than more than one\r\n *      table is passed on, only the first will be checked\r\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\r\n *      $('#example').dataTable();\r\n *    }\r\n */\nDataTable.isDataTable = DataTable.fnIsDataTable = function (table) {\n  var t = $(table).get(0);\n  var is = false;\n  if (table instanceof DataTable.Api) {\n    return true;\n  }\n  $.each(DataTable.settings, function (i, o) {\n    var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n    var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n    if (o.nTable === t || head === t || foot === t) {\n      is = true;\n    }\n  });\n  return is;\n};\n\n/**\r\n * Get all DataTable tables that have been initialised - optionally you can\r\n * select to get only currently visible tables.\r\n *\r\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\r\n *    or visible tables only.\r\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\r\n *    DataTables\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    $.each( $.fn.dataTable.tables(true), function () {\r\n *      $(table).DataTable().columns.adjust();\r\n *    } );\r\n */\nDataTable.tables = DataTable.fnTables = function (visible) {\n  var api = false;\n  if ($.isPlainObject(visible)) {\n    api = visible.api;\n    visible = visible.visible;\n  }\n  var a = $.map(DataTable.settings, function (o) {\n    if (!visible || visible && $(o.nTable).is(':visible')) {\n      return o.nTable;\n    }\n  });\n  return api ? new _Api(a) : a;\n};\n\n/**\r\n * Convert from camel case parameters to Hungarian notation. This is made public\r\n * for the extensions to provide the same ability as DataTables core to accept\r\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\r\n * parameters.\r\n *\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n/**\r\n *\r\n */\n_api_register('$()', function (selector, opts) {\n  var rows = this.rows(opts).nodes(),\n    // Get all rows\n    jqRows = $(rows);\n  return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n});\n\n// jQuery functions to operate on the tables\n$.each(['on', 'one', 'off'], function (i, key) {\n  _api_register(key + '()', function /* event, handler */\n  () {\n    var args = Array.prototype.slice.call(arguments);\n\n    // Add the `dt` namespace automatically if it isn't already present\n    args[0] = $.map(args[0].split(/\\s/), function (e) {\n      return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n    }).join(' ');\n    var inst = $(this.tables().nodes());\n    inst[key].apply(inst, args);\n    return this;\n  });\n});\n_api_register('clear()', function () {\n  return this.iterator('table', function (settings) {\n    _fnClearTable(settings);\n  });\n});\n_api_register('settings()', function () {\n  return new _Api(this.context, this.context);\n});\n_api_register('init()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].oInit : null;\n});\n_api_register('data()', function () {\n  return this.iterator('table', function (settings) {\n    return _pluck(settings.aoData, '_aData');\n  }).flatten();\n});\n_api_register('destroy()', function (remove) {\n  remove = remove || false;\n  return this.iterator('table', function (settings) {\n    var classes = settings.oClasses;\n    var table = settings.nTable;\n    var tbody = settings.nTBody;\n    var thead = settings.nTHead;\n    var tfoot = settings.nTFoot;\n    var jqTable = $(table);\n    var jqTbody = $(tbody);\n    var jqWrapper = $(settings.nTableWrapper);\n    var rows = $.map(settings.aoData, function (r) {\n      return r.nTr;\n    });\n    var i, ien;\n\n    // Flag to note that the table is currently being destroyed - no action\n    // should be taken\n    settings.bDestroying = true;\n\n    // Fire off the destroy callbacks for plug-ins etc\n    _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]);\n\n    // If not being removed from the document, make all columns visible\n    if (!remove) {\n      new _Api(settings).columns().visible(true);\n    }\n\n    // Blitz all `DT` namespaced events (these are internal events, the\n    // lowercase, `dt` events are user subscribed and they are responsible\n    // for removing them\n    jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n    $(window).off('.DT-' + settings.sInstance);\n\n    // When scrolling we had to break the table up - restore it\n    if (table != thead.parentNode) {\n      jqTable.children('thead').detach();\n      jqTable.append(thead);\n    }\n    if (tfoot && table != tfoot.parentNode) {\n      jqTable.children('tfoot').detach();\n      jqTable.append(tfoot);\n    }\n    settings.aaSorting = [];\n    settings.aaSortingFixed = [];\n    _fnSortingClasses(settings);\n    $(rows).removeClass(settings.asStripeClasses.join(' '));\n    $('th, td', thead).removeClass(classes.sSortable + ' ' + classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone);\n\n    // Add the TR elements back into the table in their original order\n    jqTbody.children().detach();\n    jqTbody.append(rows);\n    var orig = settings.nTableWrapper.parentNode;\n\n    // Remove the DataTables generated nodes, events and classes\n    var removedMethod = remove ? 'remove' : 'detach';\n    jqTable[removedMethod]();\n    jqWrapper[removedMethod]();\n\n    // If we need to reattach the table to the document\n    if (!remove && orig) {\n      // insertBefore acts like appendChild if !arg[1]\n      orig.insertBefore(table, settings.nTableReinsertBefore);\n\n      // Restore the width of the original table - was read from the style property,\n      // so we can restore directly to that\n      jqTable.css('width', settings.sDestroyWidth).removeClass(classes.sTable);\n\n      // If the were originally stripe classes - then we add them back here.\n      // Note this is not fool proof (for example if not all rows had stripe\n      // classes - but it's a good effort without getting carried away\n      ien = settings.asDestroyStripes.length;\n      if (ien) {\n        jqTbody.children().each(function (i) {\n          $(this).addClass(settings.asDestroyStripes[i % ien]);\n        });\n      }\n    }\n\n    /* Remove the settings object from the settings array */\n    var idx = $.inArray(settings, DataTable.settings);\n    if (idx !== -1) {\n      DataTable.settings.splice(idx, 1);\n    }\n  });\n});\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each(['column', 'row', 'cell'], function (i, type) {\n  _api_register(type + 's().every()', function (fn) {\n    var opts = this.selector.opts;\n    var api = this;\n    return this.iterator(type, function (settings, arg1, arg2, arg3, arg4) {\n      // Rows and columns:\n      //  arg1 - index\n      //  arg2 - table counter\n      //  arg3 - loop counter\n      //  arg4 - undefined\n      // Cells:\n      //  arg1 - row index\n      //  arg2 - column index\n      //  arg3 - table counter\n      //  arg4 - loop counter\n      fn.call(api[type](arg1, type === 'cell' ? arg2 : opts, type === 'cell' ? opts : undefined), arg1, arg2, arg3, arg4);\n    });\n  });\n});\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register('i18n()', function (token, def, plural) {\n  var ctx = this.context[0];\n  var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n  if (resolved === undefined) {\n    resolved = def;\n  }\n  if (plural !== undefined && $.isPlainObject(resolved)) {\n    resolved = resolved[plural] !== undefined ? resolved[plural] : resolved._;\n  }\n  return resolved.replace('%d', plural); // nb: plural might be undefined,\n});\n/**\r\n * Version string for plug-ins to check compatibility. Allowed format is\r\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\r\n * only for non-release builds. See http://semver.org/ for more information.\r\n *  @member\r\n *  @type string\r\n *  @default Version number\r\n */\nDataTable.version = \"1.13.4\";\n\n/**\r\n * Private data store, containing all of the settings objects that are\r\n * created for the tables on a given page.\r\n *\r\n * Note that the `DataTable.settings` object is aliased to\r\n * `jQuery.fn.dataTableExt` through which it may be accessed and\r\n * manipulated, or `jQuery.fn.dataTable.settings`.\r\n *  @member\r\n *  @type array\r\n *  @default []\r\n *  @private\r\n */\nDataTable.settings = [];\n\n/**\r\n * Object models container, for the various models that DataTables has\r\n * available to it. These models define the objects that are used to hold\r\n * the active state and configuration of the table.\r\n *  @namespace\r\n */\nDataTable.models = {};\n\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * search information for the global filter and individual column filters.\r\n *  @namespace\r\n */\nDataTable.models.oSearch = {\n  /**\r\n   * Flag to indicate if the filtering should be case insensitive or not\r\n   *  @type boolean\r\n   *  @default true\r\n   */\n  \"bCaseInsensitive\": true,\n  /**\r\n   * Applied search term\r\n   *  @type string\r\n   *  @default <i>Empty string</i>\r\n   */\n  \"sSearch\": \"\",\n  /**\r\n   * Flag to indicate if the search term should be interpreted as a\r\n   * regular expression (true) or not (false) and therefore and special\r\n   * regex characters escaped.\r\n   *  @type boolean\r\n   *  @default false\r\n   */\n  \"bRegex\": false,\n  /**\r\n   * Flag to indicate if DataTables is to use its smart filtering or not.\r\n   *  @type boolean\r\n   *  @default true\r\n   */\n  \"bSmart\": true,\n  /**\r\n   * Flag to indicate if DataTables should only trigger a search when\r\n   * the return key is pressed.\r\n   *  @type boolean\r\n   *  @default false\r\n   */\n  \"return\": false\n};\n\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * each individual row. This is the object format used for the settings\r\n * aoData array.\r\n *  @namespace\r\n */\nDataTable.models.oRow = {\n  /**\r\n   * TR element for the row\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTr\": null,\n  /**\r\n   * Array of TD elements for each row. This is null until the row has been\r\n   * created.\r\n   *  @type array nodes\r\n   *  @default []\r\n   */\n  \"anCells\": null,\n  /**\r\n   * Data object from the original data source for the row. This is either\r\n   * an array if using the traditional form of DataTables, or an object if\r\n   * using mData options. The exact type will depend on the passed in\r\n   * data from the data source, or will be an array if using DOM a data\r\n   * source.\r\n   *  @type array|object\r\n   *  @default []\r\n   */\n  \"_aData\": [],\n  /**\r\n   * Sorting data cache - this array is ostensibly the same length as the\r\n   * number of columns (although each index is generated only as it is\r\n   * needed), and holds the data that is used for sorting each column in the\r\n   * row. We do this cache generation at the start of the sort in order that\r\n   * the formatting of the sort data need be done only once for each cell\r\n   * per sort. This array should not be read from or written to by anything\r\n   * other than the master sorting methods.\r\n   *  @type array\r\n   *  @default null\r\n   *  @private\r\n   */\n  \"_aSortData\": null,\n  /**\r\n   * Per cell filtering data cache. As per the sort data cache, used to\r\n   * increase the performance of the filtering in DataTables\r\n   *  @type array\r\n   *  @default null\r\n   *  @private\r\n   */\n  \"_aFilterData\": null,\n  /**\r\n   * Filtering data cache. This is the same as the cell filtering cache, but\r\n   * in this case a string rather than an array. This is easily computed with\r\n   * a join on `_aFilterData`, but is provided as a cache so the join isn't\r\n   * needed on every search (memory traded for performance)\r\n   *  @type array\r\n   *  @default null\r\n   *  @private\r\n   */\n  \"_sFilterRow\": null,\n  /**\r\n   * Cache of the class name that DataTables has applied to the row, so we\r\n   * can quickly look at this variable rather than needing to do a DOM check\r\n   * on className for the nTr property.\r\n   *  @type string\r\n   *  @default <i>Empty string</i>\r\n   *  @private\r\n   */\n  \"_sRowStripe\": \"\",\n  /**\r\n   * Denote if the original data source was from the DOM, or the data source\r\n   * object. This is used for invalidating data, so DataTables can\r\n   * automatically read data from the original source, unless uninstructed\r\n   * otherwise.\r\n   *  @type string\r\n   *  @default null\r\n   *  @private\r\n   */\n  \"src\": null,\n  /**\r\n   * Index in the aoData array. This saves an indexOf lookup when we have the\r\n   * object, but want to know the index\r\n   *  @type integer\r\n   *  @default -1\r\n   *  @private\r\n   */\n  \"idx\": -1\n};\n\n/**\r\n * Template object for the column information object in DataTables. This object\r\n * is held in the settings aoColumns array and contains all the information that\r\n * DataTables needs about each individual column.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults.column}\r\n * but this one is the internal data store for DataTables's cache of columns.\r\n * It should NOT be manipulated outside of DataTables. Any configuration should\r\n * be done through the initialisation options.\r\n *  @namespace\r\n */\nDataTable.models.oColumn = {\n  /**\r\n   * Column index. This could be worked out on-the-fly with $.inArray, but it\r\n   * is faster to just hold it as a variable\r\n   *  @type integer\r\n   *  @default null\r\n   */\n  \"idx\": null,\n  /**\r\n   * A list of the columns that sorting should occur on when this column\r\n   * is sorted. That this property is an array allows multi-column sorting\r\n   * to be defined for a column (for example first name / last name columns\r\n   * would benefit from this). The values are integers pointing to the\r\n   * columns to be sorted on (typically it will be a single integer pointing\r\n   * at itself, but that doesn't need to be the case).\r\n   *  @type array\r\n   */\n  \"aDataSort\": null,\n  /**\r\n   * Define the sorting directions that are applied to the column, in sequence\r\n   * as the column is repeatedly sorted upon - i.e. the first value is used\r\n   * as the sorting direction when the column if first sorted (clicked on).\r\n   * Sort it again (click again) and it will move on to the next index.\r\n   * Repeat until loop.\r\n   *  @type array\r\n   */\n  \"asSorting\": null,\n  /**\r\n   * Flag to indicate if the column is searchable, and thus should be included\r\n   * in the filtering or not.\r\n   *  @type boolean\r\n   */\n  \"bSearchable\": null,\n  /**\r\n   * Flag to indicate if the column is sortable or not.\r\n   *  @type boolean\r\n   */\n  \"bSortable\": null,\n  /**\r\n   * Flag to indicate if the column is currently visible in the table or not\r\n   *  @type boolean\r\n   */\n  \"bVisible\": null,\n  /**\r\n   * Store for manual type assignment using the `column.type` option. This\r\n   * is held in store so we can manipulate the column's `sType` property.\r\n   *  @type string\r\n   *  @default null\r\n   *  @private\r\n   */\n  \"_sManualType\": null,\n  /**\r\n   * Flag to indicate if HTML5 data attributes should be used as the data\r\n   * source for filtering or sorting. True is either are.\r\n   *  @type boolean\r\n   *  @default false\r\n   *  @private\r\n   */\n  \"_bAttrSrc\": false,\n  /**\r\n   * Developer definable function that is called whenever a cell is created (Ajax source,\r\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n   * allowing you to modify the DOM element (add background colour for example) when the\r\n   * element is available.\r\n   *  @type function\r\n   *  @param {element} nTd The TD node that has been created\r\n   *  @param {*} sData The Data for the cell\r\n   *  @param {array|object} oData The data for the whole row\r\n   *  @param {int} iRow The row index for the aoData data store\r\n   *  @default null\r\n   */\n  \"fnCreatedCell\": null,\n  /**\r\n   * Function to get data from a cell in a column. You should <b>never</b>\r\n   * access data directly through _aData internally in DataTables - always use\r\n   * the method attached to this property. It allows mData to function as\r\n   * required. This function is automatically assigned by the column\r\n   * initialisation method\r\n   *  @type function\r\n   *  @param {array|object} oData The data array/object for the array\r\n   *    (i.e. aoData[]._aData)\r\n   *  @param {string} sSpecific The specific data type you want to get -\r\n   *    'display', 'type' 'filter' 'sort'\r\n   *  @returns {*} The data for the cell from the given row's data\r\n   *  @default null\r\n   */\n  \"fnGetData\": null,\n  /**\r\n   * Function to set data for a cell in the column. You should <b>never</b>\r\n   * set the data directly to _aData internally in DataTables - always use\r\n   * this method. It allows mData to function as required. This function\r\n   * is automatically assigned by the column initialisation method\r\n   *  @type function\r\n   *  @param {array|object} oData The data array/object for the array\r\n   *    (i.e. aoData[]._aData)\r\n   *  @param {*} sValue Value to set\r\n   *  @default null\r\n   */\n  \"fnSetData\": null,\n  /**\r\n   * Property to read the value for the cells in the column from the data\r\n   * source array / object. If null, then the default content is used, if a\r\n   * function is given then the return from the function is used.\r\n   *  @type function|int|string|null\r\n   *  @default null\r\n   */\n  \"mData\": null,\n  /**\r\n   * Partner property to mData which is used (only when defined) to get\r\n   * the data - i.e. it is basically the same as mData, but without the\r\n   * 'set' option, and also the data fed to it is the result from mData.\r\n   * This is the rendering method to match the data method of mData.\r\n   *  @type function|int|string|null\r\n   *  @default null\r\n   */\n  \"mRender\": null,\n  /**\r\n   * Unique header TH/TD element for this column - this is what the sorting\r\n   * listener is attached to (if sorting is enabled.)\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTh\": null,\n  /**\r\n   * Unique footer TH/TD element for this column (if there is one). Not used\r\n   * in DataTables as such, but can be used for plug-ins to reference the\r\n   * footer for each column.\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTf\": null,\n  /**\r\n   * The class to apply to all TD elements in the table's TBODY for the column\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sClass\": null,\n  /**\r\n   * When DataTables calculates the column widths to assign to each column,\r\n   * it finds the longest string in each column and then constructs a\r\n   * temporary table and reads the widths from that. The problem with this\r\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n   * string - thus the calculation can go wrong (doing it properly and putting\r\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n   * a \"work around\" we provide this option. It will append its value to the\r\n   * text that is found to be the longest string for the column - i.e. padding.\r\n   *  @type string\r\n   */\n  \"sContentPadding\": null,\n  /**\r\n   * Allows a default value to be given for a column's data, and will be used\r\n   * whenever a null data source is encountered (this can be because mData\r\n   * is set to null, or because the data source itself is null).\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sDefaultContent\": null,\n  /**\r\n   * Name for the column, allowing reference to the column by name as well as\r\n   * by index (needs a lookup to work by name).\r\n   *  @type string\r\n   */\n  \"sName\": null,\n  /**\r\n   * Custom sorting data type - defines which of the available plug-ins in\r\n   * afnSortData the custom sorting will use - if any is defined.\r\n   *  @type string\r\n   *  @default std\r\n   */\n  \"sSortDataType\": 'std',\n  /**\r\n   * Class to be applied to the header element when sorting on this column\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sSortingClass\": null,\n  /**\r\n   * Class to be applied to the header element when sorting on this column -\r\n   * when jQuery UI theming is used.\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sSortingClassJUI\": null,\n  /**\r\n   * Title of the column - what is seen in the TH element (nTh).\r\n   *  @type string\r\n   */\n  \"sTitle\": null,\n  /**\r\n   * Column sorting and filtering type\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sType\": null,\n  /**\r\n   * Width of the column\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sWidth\": null,\n  /**\r\n   * Width of the column when it was first \"encountered\"\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sWidthOrig\": null\n};\n\n/*\r\n * Developer note: The properties of the object below are given in Hungarian\r\n * notation, that was used as the interface for DataTables prior to v1.10, however\r\n * from v1.10 onwards the primary interface is camel case. In order to avoid\r\n * breaking backwards compatibility utterly with this change, the Hungarian\r\n * version is still, internally the primary interface, but is is not documented\r\n * - hence the @name tags in each doc comment. This allows a Javascript function\r\n * to create a map from Hungarian notation to camel case (going the other direction\r\n * would require each property to be listed, which would add around 3K to the size\r\n * of DataTables, while this method is about a 0.5K hit).\r\n *\r\n * Ultimately this does pave the way for Hungarian notation to be dropped\r\n * completely, but that is a massive amount of work and will break current\r\n * installs (therefore is on-hold until v2).\r\n */\n\n/**\r\n * Initialisation options that can be given to DataTables at initialisation\r\n * time.\r\n *  @namespace\r\n */\nDataTable.defaults = {\n  /**\r\n   * An array of data to use for the table, passed in at initialisation which\r\n   * will be used in preference to any data which is already in the DOM. This is\r\n   * particularly useful for constructing tables purely in Javascript, for\r\n   * example with a custom Ajax call.\r\n   *  @type array\r\n   *  @default null\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.data\r\n   *\r\n   *  @example\r\n   *    // Using a 2D array data source\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"data\": [\r\n   *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\r\n   *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\r\n   *        ],\r\n   *        \"columns\": [\r\n   *          { \"title\": \"Engine\" },\r\n   *          { \"title\": \"Browser\" },\r\n   *          { \"title\": \"Platform\" },\r\n   *          { \"title\": \"Version\" },\r\n   *          { \"title\": \"Grade\" }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using an array of objects as a data source (`data`)\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"data\": [\r\n   *          {\r\n   *            \"engine\":   \"Trident\",\r\n   *            \"browser\":  \"Internet Explorer 4.0\",\r\n   *            \"platform\": \"Win 95+\",\r\n   *            \"version\":  4,\r\n   *            \"grade\":    \"X\"\r\n   *          },\r\n   *          {\r\n   *            \"engine\":   \"Trident\",\r\n   *            \"browser\":  \"Internet Explorer 5.0\",\r\n   *            \"platform\": \"Win 95+\",\r\n   *            \"version\":  5,\r\n   *            \"grade\":    \"C\"\r\n   *          }\r\n   *        ],\r\n   *        \"columns\": [\r\n   *          { \"title\": \"Engine\",   \"data\": \"engine\" },\r\n   *          { \"title\": \"Browser\",  \"data\": \"browser\" },\r\n   *          { \"title\": \"Platform\", \"data\": \"platform\" },\r\n   *          { \"title\": \"Version\",  \"data\": \"version\" },\r\n   *          { \"title\": \"Grade\",    \"data\": \"grade\" }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"aaData\": null,\n  /**\r\n   * If ordering is enabled, then DataTables will perform a first pass sort on\r\n   * initialisation. You can define which column(s) the sort is performed\r\n   * upon, and the sorting direction, with this variable. The `sorting` array\r\n   * should contain an array for each column to be sorted initially containing\r\n   * the column's index and a direction string ('asc' or 'desc').\r\n   *  @type array\r\n   *  @default [[0,'asc']]\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.order\r\n   *\r\n   *  @example\r\n   *    // Sort by 3rd column first, and then 4th column\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"order\": [[2,'asc'], [3,'desc']]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *    // No initial sorting\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"order\": []\r\n   *      } );\r\n   *    } );\r\n   */\n  \"aaSorting\": [[0, 'asc']],\n  /**\r\n   * This parameter is basically identical to the `sorting` parameter, but\r\n   * cannot be overridden by user interaction with the table. What this means\r\n   * is that you could have a column (visible or hidden) which the sorting\r\n   * will always be forced on first - any sorting after that (from the user)\r\n   * will then be performed as required. This can be useful for grouping rows\r\n   * together.\r\n   *  @type array\r\n   *  @default null\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.orderFixed\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"orderFixed\": [[0,'asc']]\r\n   *      } );\r\n   *    } )\r\n   */\n  \"aaSortingFixed\": [],\n  /**\r\n   * DataTables can be instructed to load data to display in the table from a\r\n   * Ajax source. This option defines how that Ajax call is made and where to.\r\n   *\r\n   * The `ajax` property has three different modes of operation, depending on\r\n   * how it is defined. These are:\r\n   *\r\n   * * `string` - Set the URL from where the data should be loaded from.\r\n   * * `object` - Define properties for `jQuery.ajax`.\r\n   * * `function` - Custom data get function\r\n   *\r\n   * `string`\r\n   * --------\r\n   *\r\n   * As a string, the `ajax` property simply defines the URL from which\r\n   * DataTables will load data.\r\n   *\r\n   * `object`\r\n   * --------\r\n   *\r\n   * As an object, the parameters in the object are passed to\r\n   * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\r\n   * of the Ajax request. DataTables has a number of default parameters which\r\n   * you can override using this option. Please refer to the jQuery\r\n   * documentation for a full description of the options available, although\r\n   * the following parameters provide additional options in DataTables or\r\n   * require special consideration:\r\n   *\r\n   * * `data` - As with jQuery, `data` can be provided as an object, but it\r\n   *   can also be used as a function to manipulate the data DataTables sends\r\n   *   to the server. The function takes a single parameter, an object of\r\n   *   parameters with the values that DataTables has readied for sending. An\r\n   *   object may be returned which will be merged into the DataTables\r\n   *   defaults, or you can add the items to the object that was passed in and\r\n   *   not return anything from the function. This supersedes `fnServerParams`\r\n   *   from DataTables 1.9-.\r\n   *\r\n   * * `dataSrc` - By default DataTables will look for the property `data` (or\r\n   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\r\n   *   from an Ajax source or for server-side processing - this parameter\r\n   *   allows that property to be changed. You can use Javascript dotted\r\n   *   object notation to get a data source for multiple levels of nesting, or\r\n   *   it my be used as a function. As a function it takes a single parameter,\r\n   *   the JSON returned from the server, which can be manipulated as\r\n   *   required, with the returned value being that used by DataTables as the\r\n   *   data source for the table. This supersedes `sAjaxDataProp` from\r\n   *   DataTables 1.9-.\r\n   *\r\n   * * `success` - Should not be overridden it is used internally in\r\n   *   DataTables. To manipulate / transform the data returned by the server\r\n   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\r\n   *\r\n   * `function`\r\n   * ----------\r\n   *\r\n   * As a function, making the Ajax call is left up to yourself allowing\r\n   * complete control of the Ajax request. Indeed, if desired, a method other\r\n   * than Ajax could be used to obtain the required data, such as Web storage\r\n   * or an AIR database.\r\n   *\r\n   * The function is given four parameters and no return is required. The\r\n   * parameters are:\r\n   *\r\n   * 1. _object_ - Data to send to the server\r\n   * 2. _function_ - Callback function that must be executed when the required\r\n   *    data has been obtained. That data should be passed into the callback\r\n   *    as the only parameter\r\n   * 3. _object_ - DataTables settings object for the table\r\n   *\r\n   * Note that this supersedes `fnServerData` from DataTables 1.9-.\r\n   *\r\n   *  @type string|object|function\r\n   *  @default null\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.ajax\r\n   *  @since 1.10.0\r\n   *\r\n   * @example\r\n   *   // Get JSON data from a file via Ajax.\r\n   *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": \"data.json\"\r\n   *   } );\r\n   *\r\n   * @example\r\n   *   // Get JSON data from a file via Ajax, using `dataSrc` to change\r\n   *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": {\r\n   *       \"url\": \"data.json\",\r\n   *       \"dataSrc\": \"tableData\"\r\n   *     }\r\n   *   } );\r\n   *\r\n   * @example\r\n   *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\r\n   *   // from a plain array rather than an array in an object\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": {\r\n   *       \"url\": \"data.json\",\r\n   *       \"dataSrc\": \"\"\r\n   *     }\r\n   *   } );\r\n   *\r\n   * @example\r\n   *   // Manipulate the data returned from the server - add a link to data\r\n   *   // (note this can, should, be done using `render` for the column - this\r\n   *   // is just a simple example of how the data can be manipulated).\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": {\r\n   *       \"url\": \"data.json\",\r\n   *       \"dataSrc\": function ( json ) {\r\n   *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\r\n   *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\r\n   *         }\r\n   *         return json;\r\n   *       }\r\n   *     }\r\n   *   } );\r\n   *\r\n   * @example\r\n   *   // Add data to the request\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": {\r\n   *       \"url\": \"data.json\",\r\n   *       \"data\": function ( d ) {\r\n   *         return {\r\n   *           \"extra_search\": $('#extra').val()\r\n   *         };\r\n   *       }\r\n   *     }\r\n   *   } );\r\n   *\r\n   * @example\r\n   *   // Send request as POST\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": {\r\n   *       \"url\": \"data.json\",\r\n   *       \"type\": \"POST\"\r\n   *     }\r\n   *   } );\r\n   *\r\n   * @example\r\n   *   // Get the data from localStorage (could interface with a form for\r\n   *   // adding, editing and removing rows).\r\n   *   $('#example').dataTable( {\r\n   *     \"ajax\": function (data, callback, settings) {\r\n   *       callback(\r\n   *         JSON.parse( localStorage.getItem('dataTablesData') )\r\n   *       );\r\n   *     }\r\n   *   } );\r\n   */\n  \"ajax\": null,\n  /**\r\n   * This parameter allows you to readily specify the entries in the length drop\r\n   * down menu that DataTables shows when pagination is enabled. It can be\r\n   * either a 1D array of options which will be used for both the displayed\r\n   * option and the value, or a 2D array which will use the array in the first\r\n   * position as the value, and the array in the second position as the\r\n   * displayed options (useful for language strings such as 'All').\r\n   *\r\n   * Note that the `pageLength` property will be automatically set to the\r\n   * first value given in this array, unless `pageLength` is also provided.\r\n   *  @type array\r\n   *  @default [ 10, 25, 50, 100 ]\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.lengthMenu\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"aLengthMenu\": [10, 25, 50, 100],\n  /**\r\n   * The `columns` option in the initialisation parameter allows you to define\r\n   * details about the way individual columns behave. For a full list of\r\n   * column options that can be set, please see\r\n   * {@link DataTable.defaults.column}. Note that if you use `columns` to\r\n   * define your columns, you must have an entry in the array for every single\r\n   * column that you have in your table (these can be null if you don't which\r\n   * to specify any options).\r\n   *  @member\r\n   *\r\n   *  @name DataTable.defaults.column\r\n   */\n  \"aoColumns\": null,\n  /**\r\n   * Very similar to `columns`, `columnDefs` allows you to target a specific\r\n   * column, multiple columns, or all columns, using the `targets` property of\r\n   * each object in the array. This allows great flexibility when creating\r\n   * tables, as the `columnDefs` arrays can be of any length, targeting the\r\n   * columns you specifically want. `columnDefs` may use any of the column\r\n   * options available: {@link DataTable.defaults.column}, but it _must_\r\n   * have `targets` defined in each object in the array. Values in the `targets`\r\n   * array may be:\r\n   *   <ul>\r\n   *     <li>a string - class name will be matched on the TH for the column</li>\r\n   *     <li>0 or a positive integer - column index counting from the left</li>\r\n   *     <li>a negative integer - column index counting from the right</li>\r\n   *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\r\n   *   </ul>\r\n   *  @member\r\n   *\r\n   *  @name DataTable.defaults.columnDefs\r\n   */\n  \"aoColumnDefs\": null,\n  /**\r\n   * Basically the same as `search`, this parameter defines the individual column\r\n   * filtering state at initialisation time. The array must be of the same size\r\n   * as the number of columns, and each element be an object with the parameters\r\n   * `search` and `escapeRegex` (the latter is optional). 'null' is also\r\n   * accepted and the default will be used.\r\n   *  @type array\r\n   *  @default []\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.searchCols\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"searchCols\": [\r\n   *          null,\r\n   *          { \"search\": \"My filter\" },\r\n   *          null,\r\n   *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\r\n   *        ]\r\n   *      } );\r\n   *    } )\r\n   */\n  \"aoSearchCols\": [],\n  /**\r\n   * An array of CSS classes that should be applied to displayed rows. This\r\n   * array may be of any length, and DataTables will apply each class\r\n   * sequentially, looping when required.\r\n   *  @type array\r\n   *  @default null <i>Will take the values determined by the `oClasses.stripe*`\r\n   *    options</i>\r\n   *\r\n   *  @dtopt Option\r\n   *  @name DataTable.defaults.stripeClasses\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\r\n   *      } );\r\n   *    } )\r\n   */\n  \"asStripeClasses\": null,\n  /**\r\n   * Enable or disable automatic column width calculation. This can be disabled\r\n   * as an optimisation (it takes some time to calculate the widths) if the\r\n   * tables widths are passed in using `columns`.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.autoWidth\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"autoWidth\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bAutoWidth\": true,\n  /**\r\n   * Deferred rendering can provide DataTables with a huge speed boost when you\r\n   * are using an Ajax or JS data source for the table. This option, when set to\r\n   * true, will cause DataTables to defer the creation of the table elements for\r\n   * each row until they are needed for a draw - saving a significant amount of\r\n   * time.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.deferRender\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"ajax\": \"sources/arrays.txt\",\r\n   *        \"deferRender\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bDeferRender\": false,\n  /**\r\n   * Replace a DataTable which matches the given selector and replace it with\r\n   * one which has the properties of the new initialisation object passed. If no\r\n   * table matches the selector, then the new DataTable will be constructed as\r\n   * per normal.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.destroy\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"srollY\": \"200px\",\r\n   *        \"paginate\": false\r\n   *      } );\r\n   *\r\n   *      // Some time later....\r\n   *      $('#example').dataTable( {\r\n   *        \"filter\": false,\r\n   *        \"destroy\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bDestroy\": false,\n  /**\r\n   * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\n   * that it allows the end user to input multiple words (space separated) and\r\n   * will match a row containing those words, even if not in the order that was\r\n   * specified (this allow matching across multiple columns). Note that if you\r\n   * wish to use filtering in DataTables this must remain 'true' - to remove the\r\n   * default filtering input box and retain filtering abilities, please use\r\n   * {@link DataTable.defaults.dom}.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.searching\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"searching\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bFilter\": true,\n  /**\r\n   * Enable or disable the table information display. This shows information\r\n   * about the data that is currently visible on the page, including information\r\n   * about filtered data if that action is being performed.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.info\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"info\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bInfo\": true,\n  /**\r\n   * Allows the end user to select the size of a formatted page from a select\r\n   * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.lengthChange\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"lengthChange\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bLengthChange\": true,\n  /**\r\n   * Enable or disable pagination.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.paging\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"paging\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bPaginate\": true,\n  /**\r\n   * Enable or disable the display of a 'processing' indicator when the table is\r\n   * being processed (e.g. a sort). This is particularly useful for tables with\r\n   * large amounts of data where it can take a noticeable amount of time to sort\r\n   * the entries.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.processing\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"processing\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bProcessing\": false,\n  /**\r\n   * Retrieve the DataTables object for the given selector. Note that if the\r\n   * table has already been initialised, this parameter will cause DataTables\r\n   * to simply return the object that has already been set up - it will not take\r\n   * account of any changes you might have made to the initialisation object\r\n   * passed to DataTables (setting this parameter to true is an acknowledgement\r\n   * that you understand this). `destroy` can be used to reinitialise a table if\r\n   * you need.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.retrieve\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      initTable();\r\n   *      tableActions();\r\n   *    } );\r\n   *\r\n   *    function initTable ()\r\n   *    {\r\n   *      return $('#example').dataTable( {\r\n   *        \"scrollY\": \"200px\",\r\n   *        \"paginate\": false,\r\n   *        \"retrieve\": true\r\n   *      } );\r\n   *    }\r\n   *\r\n   *    function tableActions ()\r\n   *    {\r\n   *      var table = initTable();\r\n   *      // perform API operations with oTable\r\n   *    }\r\n   */\n  \"bRetrieve\": false,\n  /**\r\n   * When vertical (y) scrolling is enabled, DataTables will force the height of\r\n   * the table's viewport to the given height at all times (useful for layout).\r\n   * However, this can look odd when filtering data down to a small data set,\r\n   * and the footer is left \"floating\" further down. This parameter (when\r\n   * enabled) will cause DataTables to collapse the table's viewport down when\r\n   * the result set will fit within the given Y height.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.scrollCollapse\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"scrollY\": \"200\",\r\n   *        \"scrollCollapse\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bScrollCollapse\": false,\n  /**\r\n   * Configure DataTables to use server-side processing. Note that the\r\n   * `ajax` parameter must also be given in order to give DataTables a\r\n   * source to obtain the required data for each draw.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Features\r\n   *  @dtopt Server-side\r\n   *  @name DataTable.defaults.serverSide\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"serverSide\": true,\r\n   *        \"ajax\": \"xhr.php\"\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bServerSide\": false,\n  /**\r\n   * Enable or disable sorting of columns. Sorting of individual columns can be\r\n   * disabled by the `sortable` option for each column.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.ordering\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"ordering\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bSort\": true,\n  /**\r\n   * Enable or display DataTables' ability to sort multiple columns at the\r\n   * same time (activated by shift-click by the user).\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.orderMulti\r\n   *\r\n   *  @example\r\n   *    // Disable multiple column sorting ability\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"orderMulti\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bSortMulti\": true,\n  /**\r\n   * Allows control over whether DataTables should use the top (true) unique\r\n   * cell that is found for a single column, or the bottom (false - default).\r\n   * This is useful when using complex headers.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.orderCellsTop\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"orderCellsTop\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bSortCellsTop\": false,\n  /**\r\n   * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\r\n   * `sorting\\_3` to the columns which are currently being sorted on. This is\r\n   * presented as a feature switch as it can increase processing time (while\r\n   * classes are removed and added) so for large data sets you might want to\r\n   * turn this off.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.orderClasses\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"orderClasses\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bSortClasses\": true,\n  /**\r\n   * Enable or disable state saving. When enabled HTML5 `localStorage` will be\r\n   * used to save table display information such as pagination information,\r\n   * display length, filtering and sorting. As such when the end user reloads\r\n   * the page the display display will match what thy had previously set up.\r\n   *\r\n   * Due to the use of `localStorage` the default state saving is not supported\r\n   * in IE6 or 7. If state saving is required in those browsers, use\r\n   * `stateSaveCallback` to provide a storage solution such as cookies.\r\n   *  @type boolean\r\n   *  @default false\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.stateSave\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function () {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"bStateSave\": false,\n  /**\r\n   * This function is called when a TR element is created (and all TD child\r\n   * elements have been inserted), or registered if using a DOM source, allowing\r\n   * manipulation of the TR element (adding classes etc).\r\n   *  @type function\r\n   *  @param {node} row \"TR\" element for the current row\r\n   *  @param {array} data Raw data array for this row\r\n   *  @param {int} dataIndex The index of this row in the internal aoData array\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.createdRow\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"createdRow\": function( row, data, dataIndex ) {\r\n   *          // Bold the grade for all 'A' grade browsers\r\n   *          if ( data[4] == \"A\" )\r\n   *          {\r\n   *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n   *          }\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnCreatedRow\": null,\n  /**\r\n   * This function is called on every 'draw' event, and allows you to\r\n   * dynamically modify any aspect you want about the created DOM.\r\n   *  @type function\r\n   *  @param {object} settings DataTables settings object\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.drawCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"drawCallback\": function( settings ) {\r\n   *          alert( 'DataTables has redrawn the table' );\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnDrawCallback\": null,\n  /**\r\n   * Identical to fnHeaderCallback() but for the table footer this function\r\n   * allows you to modify the table footer on every 'draw' event.\r\n   *  @type function\r\n   *  @param {node} foot \"TR\" element for the footer\r\n   *  @param {array} data Full table data (as derived from the original HTML)\r\n   *  @param {int} start Index for the current display starting point in the\r\n   *    display array\r\n   *  @param {int} end Index for the current display ending point in the\r\n   *    display array\r\n   *  @param {array int} display Index array to translate the visual position\r\n   *    to the full data array\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.footerCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"footerCallback\": function( tfoot, data, start, end, display ) {\r\n   *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\r\n   *        }\r\n   *      } );\r\n   *    } )\r\n   */\n  \"fnFooterCallback\": null,\n  /**\r\n   * When rendering large numbers in the information element for the table\r\n   * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\r\n   * to have a comma separator for the 'thousands' units (e.g. 1 million is\r\n   * rendered as \"1,000,000\") to help readability for the end user. This\r\n   * function will override the default method DataTables uses.\r\n   *  @type function\r\n   *  @member\r\n   *  @param {int} toFormat number to be formatted\r\n   *  @returns {string} formatted string for DataTables to show the number\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.formatNumber\r\n   *\r\n   *  @example\r\n   *    // Format a number using a single quote for the separator (note that\r\n   *    // this can also be done with the language.thousands option)\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"formatNumber\": function ( toFormat ) {\r\n   *          return toFormat.toString().replace(\r\n   *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\r\n   *          );\r\n   *        };\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnFormatNumber\": function (toFormat) {\n    return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n  },\n  /**\r\n   * This function is called on every 'draw' event, and allows you to\r\n   * dynamically modify the header row. This can be used to calculate and\r\n   * display useful information about the table.\r\n   *  @type function\r\n   *  @param {node} head \"TR\" element for the header\r\n   *  @param {array} data Full table data (as derived from the original HTML)\r\n   *  @param {int} start Index for the current display starting point in the\r\n   *    display array\r\n   *  @param {int} end Index for the current display ending point in the\r\n   *    display array\r\n   *  @param {array int} display Index array to translate the visual position\r\n   *    to the full data array\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.headerCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"fheaderCallback\": function( head, data, start, end, display ) {\r\n   *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\r\n   *        }\r\n   *      } );\r\n   *    } )\r\n   */\n  \"fnHeaderCallback\": null,\n  /**\r\n   * The information element can be used to convey information about the current\r\n   * state of the table. Although the internationalisation options presented by\r\n   * DataTables are quite capable of dealing with most customisations, there may\r\n   * be times where you wish to customise the string further. This callback\r\n   * allows you to do exactly that.\r\n   *  @type function\r\n   *  @param {object} oSettings DataTables settings object\r\n   *  @param {int} start Starting position in data for the draw\r\n   *  @param {int} end End position in data for the draw\r\n   *  @param {int} max Total number of rows in the table (regardless of\r\n   *    filtering)\r\n   *  @param {int} total Total number of rows in the data set, after filtering\r\n   *  @param {string} pre The string that DataTables has formatted using it's\r\n   *    own rules\r\n   *  @returns {string} The string to be displayed in the information element.\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.infoCallback\r\n   *\r\n   *  @example\r\n   *    $('#example').dataTable( {\r\n   *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\r\n   *        return start +\" to \"+ end;\r\n   *      }\r\n   *    } );\r\n   */\n  \"fnInfoCallback\": null,\n  /**\r\n   * Called when the table has been initialised. Normally DataTables will\r\n   * initialise sequentially and there will be no need for this function,\r\n   * however, this does not hold true when using external language information\r\n   * since that is obtained using an async XHR call.\r\n   *  @type function\r\n   *  @param {object} settings DataTables settings object\r\n   *  @param {object} json The JSON object request from the server - only\r\n   *    present if client-side Ajax sourced data is used\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.initComplete\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"initComplete\": function(settings, json) {\r\n   *          alert( 'DataTables has finished its initialisation.' );\r\n   *        }\r\n   *      } );\r\n   *    } )\r\n   */\n  \"fnInitComplete\": null,\n  /**\r\n   * Called at the very start of each table draw and can be used to cancel the\r\n   * draw by returning false, any other return (including undefined) results in\r\n   * the full draw occurring).\r\n   *  @type function\r\n   *  @param {object} settings DataTables settings object\r\n   *  @returns {boolean} False will cancel the draw, anything else (including no\r\n   *    return) will allow it to complete.\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.preDrawCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"preDrawCallback\": function( settings ) {\r\n   *          if ( $('#test').val() == 1 ) {\r\n   *            return false;\r\n   *          }\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnPreDrawCallback\": null,\n  /**\r\n   * This function allows you to 'post process' each row after it have been\r\n   * generated for each table draw, but before it is rendered on screen. This\r\n   * function might be used for setting the row class name etc.\r\n   *  @type function\r\n   *  @param {node} row \"TR\" element for the current row\r\n   *  @param {array} data Raw data array for this row\r\n   *  @param {int} displayIndex The display index for the current table draw\r\n   *  @param {int} displayIndexFull The index of the data in the full list of\r\n   *    rows (after filtering)\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.rowCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\r\n   *          // Bold the grade for all 'A' grade browsers\r\n   *          if ( data[4] == \"A\" ) {\r\n   *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n   *          }\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnRowCallback\": null,\n  /**\r\n   * __Deprecated__ The functionality provided by this parameter has now been\r\n   * superseded by that provided through `ajax`, which should be used instead.\r\n   *\r\n   * This parameter allows you to override the default function which obtains\r\n   * the data from the server so something more suitable for your application.\r\n   * For example you could use POST data, or pull information from a Gears or\r\n   * AIR database.\r\n   *  @type function\r\n   *  @member\r\n   *  @param {string} source HTTP source to obtain the data from (`ajax`)\r\n   *  @param {array} data A key/value pair object containing the data to send\r\n   *    to the server\r\n   *  @param {function} callback to be called on completion of the data get\r\n   *    process that will draw the data on the page.\r\n   *  @param {object} settings DataTables settings object\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @dtopt Server-side\r\n   *  @name DataTable.defaults.serverData\r\n   *\r\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n   */\n  \"fnServerData\": null,\n  /**\r\n   * __Deprecated__ The functionality provided by this parameter has now been\r\n   * superseded by that provided through `ajax`, which should be used instead.\r\n   *\r\n   *  It is often useful to send extra data to the server when making an Ajax\r\n   * request - for example custom filtering information, and this callback\r\n   * function makes it trivial to send extra information to the server. The\r\n   * passed in parameter is the data set that has been constructed by\r\n   * DataTables, and you can add to this or modify it as you require.\r\n   *  @type function\r\n   *  @param {array} data Data array (array of objects which are name/value\r\n   *    pairs) that has been constructed by DataTables and will be sent to the\r\n   *    server. In the case of Ajax sourced data with server-side processing\r\n   *    this will be an empty array, for server-side processing there will be a\r\n   *    significant number of parameters!\r\n   *  @returns {undefined} Ensure that you modify the data array passed in,\r\n   *    as this is passed by reference.\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @dtopt Server-side\r\n   *  @name DataTable.defaults.serverParams\r\n   *\r\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n   */\n  \"fnServerParams\": null,\n  /**\r\n   * Load the table state. With this function you can define from where, and how, the\r\n   * state of a table is loaded. By default DataTables will load from `localStorage`\r\n   * but you might wish to use a server-side database or cookies.\r\n   *  @type function\r\n   *  @member\r\n   *  @param {object} settings DataTables settings object\r\n   *  @param {object} callback Callback that can be executed when done. It\r\n   *    should be passed the loaded state object.\r\n   *  @return {object} The DataTables state object to be loaded\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.stateLoadCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true,\r\n   *        \"stateLoadCallback\": function (settings, callback) {\r\n   *          $.ajax( {\r\n   *            \"url\": \"/state_load\",\r\n   *            \"dataType\": \"json\",\r\n   *            \"success\": function (json) {\r\n   *              callback( json );\r\n   *            }\r\n   *          } );\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnStateLoadCallback\": function (settings) {\n    try {\n      return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n    } catch (e) {\n      return {};\n    }\n  },\n  /**\r\n   * Callback which allows modification of the saved state prior to loading that state.\r\n   * This callback is called when the table is loading state from the stored data, but\r\n   * prior to the settings object being modified by the saved state. Note that for\r\n   * plug-in authors, you should use the `stateLoadParams` event to load parameters for\r\n   * a plug-in.\r\n   *  @type function\r\n   *  @param {object} settings DataTables settings object\r\n   *  @param {object} data The state object that is to be loaded\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.stateLoadParams\r\n   *\r\n   *  @example\r\n   *    // Remove a saved filter, so filtering is never loaded\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true,\r\n   *        \"stateLoadParams\": function (settings, data) {\r\n   *          data.oSearch.sSearch = \"\";\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Disallow state loading by returning false\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true,\r\n   *        \"stateLoadParams\": function (settings, data) {\r\n   *          return false;\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnStateLoadParams\": null,\n  /**\r\n   * Callback that is called when the state has been loaded from the state saving method\r\n   * and the DataTables settings object has been modified as a result of the loaded state.\r\n   *  @type function\r\n   *  @param {object} settings DataTables settings object\r\n   *  @param {object} data The state object that was loaded\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.stateLoaded\r\n   *\r\n   *  @example\r\n   *    // Show an alert with the filtering value that was saved\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true,\r\n   *        \"stateLoaded\": function (settings, data) {\r\n   *          alert( 'Saved filter was: '+data.oSearch.sSearch );\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnStateLoaded\": null,\n  /**\r\n   * Save the table state. This function allows you to define where and how the state\r\n   * information for the table is stored By default DataTables will use `localStorage`\r\n   * but you might wish to use a server-side database or cookies.\r\n   *  @type function\r\n   *  @member\r\n   *  @param {object} settings DataTables settings object\r\n   *  @param {object} data The state object to be saved\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.stateSaveCallback\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true,\r\n   *        \"stateSaveCallback\": function (settings, data) {\r\n   *          // Send an Ajax request to the server with the state object\r\n   *          $.ajax( {\r\n   *            \"url\": \"/state_save\",\r\n   *            \"data\": data,\r\n   *            \"dataType\": \"json\",\r\n   *            \"method\": \"POST\"\r\n   *            \"success\": function () {}\r\n   *          } );\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnStateSaveCallback\": function (settings, data) {\n    try {\n      (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n    } catch (e) {}\n  },\n  /**\r\n   * Callback which allows modification of the state to be saved. Called when the table\r\n   * has changed state a new state save is required. This method allows modification of\r\n   * the state saving object prior to actually doing the save, including addition or\r\n   * other state properties or modification. Note that for plug-in authors, you should\r\n   * use the `stateSaveParams` event to save parameters for a plug-in.\r\n   *  @type function\r\n   *  @param {object} settings DataTables settings object\r\n   *  @param {object} data The state object to be saved\r\n   *\r\n   *  @dtopt Callbacks\r\n   *  @name DataTable.defaults.stateSaveParams\r\n   *\r\n   *  @example\r\n   *    // Remove a saved filter, so filtering is never saved\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateSave\": true,\r\n   *        \"stateSaveParams\": function (settings, data) {\r\n   *          data.oSearch.sSearch = \"\";\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"fnStateSaveParams\": null,\n  /**\r\n   * Duration for which the saved state information is considered valid. After this period\r\n   * has elapsed the state will be returned to the default.\r\n   * Value is given in seconds.\r\n   *  @type int\r\n   *  @default 7200 <i>(2 hours)</i>\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.stateDuration\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"stateDuration\": 60*60*24; // 1 day\r\n   *      } );\r\n   *    } )\r\n   */\n  \"iStateDuration\": 7200,\n  /**\r\n   * When enabled DataTables will not make a request to the server for the first\r\n   * page draw - rather it will use the data already on the page (no sorting etc\r\n   * will be applied to it), thus saving on an XHR at load time. `deferLoading`\r\n   * is used to indicate that deferred loading is required, but it is also used\r\n   * to tell DataTables how many records there are in the full table (allowing\r\n   * the information element and pagination to be displayed correctly). In the case\r\n   * where a filtering is applied to the table on initial load, this can be\r\n   * indicated by giving the parameter as an array, where the first element is\r\n   * the number of records available after filtering and the second element is the\r\n   * number of records without filtering (allowing the table information element\r\n   * to be shown correctly).\r\n   *  @type int | array\r\n   *  @default null\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.deferLoading\r\n   *\r\n   *  @example\r\n   *    // 57 records available in the table, no filtering applied\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"serverSide\": true,\r\n   *        \"ajax\": \"scripts/server_processing.php\",\r\n   *        \"deferLoading\": 57\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // 57 records after filtering, 100 without filtering (an initial filter applied)\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"serverSide\": true,\r\n   *        \"ajax\": \"scripts/server_processing.php\",\r\n   *        \"deferLoading\": [ 57, 100 ],\r\n   *        \"search\": {\r\n   *          \"search\": \"my_filter\"\r\n   *        }\r\n   *      } );\r\n   *    } );\r\n   */\n  \"iDeferLoading\": null,\n  /**\r\n   * Number of rows to display on a single page when using pagination. If\r\n   * feature enabled (`lengthChange`) then the end user will be able to override\r\n   * this to a custom setting using a pop-up menu.\r\n   *  @type int\r\n   *  @default 10\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.pageLength\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"pageLength\": 50\r\n   *      } );\r\n   *    } )\r\n   */\n  \"iDisplayLength\": 10,\n  /**\r\n   * Define the starting point for data display when using DataTables with\r\n   * pagination. Note that this parameter is the number of records, rather than\r\n   * the page number, so if you have 10 records per page and want to start on\r\n   * the third page, it should be \"20\".\r\n   *  @type int\r\n   *  @default 0\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.displayStart\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"displayStart\": 20\r\n   *      } );\r\n   *    } )\r\n   */\n  \"iDisplayStart\": 0,\n  /**\r\n   * By default DataTables allows keyboard navigation of the table (sorting, paging,\r\n   * and filtering) by adding a `tabindex` attribute to the required elements. This\r\n   * allows you to tab through the controls and press the enter key to activate them.\r\n   * The tabindex is default 0, meaning that the tab follows the flow of the document.\r\n   * You can overrule this using this parameter if you wish. Use a value of -1 to\r\n   * disable built-in keyboard navigation.\r\n   *  @type int\r\n   *  @default 0\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.tabIndex\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"tabIndex\": 1\r\n   *      } );\r\n   *    } );\r\n   */\n  \"iTabIndex\": 0,\n  /**\r\n   * Classes that DataTables assigns to the various components and features\r\n   * that it adds to the HTML table. This allows classes to be configured\r\n   * during initialisation in addition to through the static\r\n   * {@link DataTable.ext.oStdClasses} object).\r\n   *  @namespace\r\n   *  @name DataTable.defaults.classes\r\n   */\n  \"oClasses\": {},\n  /**\r\n   * All strings that DataTables uses in the user interface that it creates\r\n   * are defined in this object, allowing you to modified them individually or\r\n   * completely replace them all as required.\r\n   *  @namespace\r\n   *  @name DataTable.defaults.language\r\n   */\n  \"oLanguage\": {\n    /**\r\n     * Strings that are used for WAI-ARIA labels and controls only (these are not\r\n     * actually visible on the page, but will be read by screenreaders, and thus\r\n     * must be internationalised as well).\r\n     *  @namespace\r\n     *  @name DataTable.defaults.language.aria\r\n     */\n    \"oAria\": {\n      /**\r\n       * ARIA label that is added to the table headers when the column may be\r\n       * sorted ascending by activing the column (click or return when focused).\r\n       * Note that the column header is prefixed to this string.\r\n       *  @type string\r\n       *  @default : activate to sort column ascending\r\n       *\r\n       *  @dtopt Language\r\n       *  @name DataTable.defaults.language.aria.sortAscending\r\n       *\r\n       *  @example\r\n       *    $(document).ready( function() {\r\n       *      $('#example').dataTable( {\r\n       *        \"language\": {\r\n       *          \"aria\": {\r\n       *            \"sortAscending\": \" - click/return to sort ascending\"\r\n       *          }\r\n       *        }\r\n       *      } );\r\n       *    } );\r\n       */\n      \"sSortAscending\": \": activate to sort column ascending\",\n      /**\r\n       * ARIA label that is added to the table headers when the column may be\r\n       * sorted descending by activing the column (click or return when focused).\r\n       * Note that the column header is prefixed to this string.\r\n       *  @type string\r\n       *  @default : activate to sort column ascending\r\n       *\r\n       *  @dtopt Language\r\n       *  @name DataTable.defaults.language.aria.sortDescending\r\n       *\r\n       *  @example\r\n       *    $(document).ready( function() {\r\n       *      $('#example').dataTable( {\r\n       *        \"language\": {\r\n       *          \"aria\": {\r\n       *            \"sortDescending\": \" - click/return to sort descending\"\r\n       *          }\r\n       *        }\r\n       *      } );\r\n       *    } );\r\n       */\n      \"sSortDescending\": \": activate to sort column descending\"\n    },\n    /**\r\n     * Pagination string used by DataTables for the built-in pagination\r\n     * control types.\r\n     *  @namespace\r\n     *  @name DataTable.defaults.language.paginate\r\n     */\n    \"oPaginate\": {\n      /**\r\n       * Text to use when using the 'full_numbers' type of pagination for the\r\n       * button to take the user to the first page.\r\n       *  @type string\r\n       *  @default First\r\n       *\r\n       *  @dtopt Language\r\n       *  @name DataTable.defaults.language.paginate.first\r\n       *\r\n       *  @example\r\n       *    $(document).ready( function() {\r\n       *      $('#example').dataTable( {\r\n       *        \"language\": {\r\n       *          \"paginate\": {\r\n       *            \"first\": \"First page\"\r\n       *          }\r\n       *        }\r\n       *      } );\r\n       *    } );\r\n       */\n      \"sFirst\": \"First\",\n      /**\r\n       * Text to use when using the 'full_numbers' type of pagination for the\r\n       * button to take the user to the last page.\r\n       *  @type string\r\n       *  @default Last\r\n       *\r\n       *  @dtopt Language\r\n       *  @name DataTable.defaults.language.paginate.last\r\n       *\r\n       *  @example\r\n       *    $(document).ready( function() {\r\n       *      $('#example').dataTable( {\r\n       *        \"language\": {\r\n       *          \"paginate\": {\r\n       *            \"last\": \"Last page\"\r\n       *          }\r\n       *        }\r\n       *      } );\r\n       *    } );\r\n       */\n      \"sLast\": \"Last\",\n      /**\r\n       * Text to use for the 'next' pagination button (to take the user to the\r\n       * next page).\r\n       *  @type string\r\n       *  @default Next\r\n       *\r\n       *  @dtopt Language\r\n       *  @name DataTable.defaults.language.paginate.next\r\n       *\r\n       *  @example\r\n       *    $(document).ready( function() {\r\n       *      $('#example').dataTable( {\r\n       *        \"language\": {\r\n       *          \"paginate\": {\r\n       *            \"next\": \"Next page\"\r\n       *          }\r\n       *        }\r\n       *      } );\r\n       *    } );\r\n       */\n      \"sNext\": \"Next\",\n      /**\r\n       * Text to use for the 'previous' pagination button (to take the user to\r\n       * the previous page).\r\n       *  @type string\r\n       *  @default Previous\r\n       *\r\n       *  @dtopt Language\r\n       *  @name DataTable.defaults.language.paginate.previous\r\n       *\r\n       *  @example\r\n       *    $(document).ready( function() {\r\n       *      $('#example').dataTable( {\r\n       *        \"language\": {\r\n       *          \"paginate\": {\r\n       *            \"previous\": \"Previous page\"\r\n       *          }\r\n       *        }\r\n       *      } );\r\n       *    } );\r\n       */\n      \"sPrevious\": \"Previous\"\n    },\n    /**\r\n     * This string is shown in preference to `zeroRecords` when the table is\r\n     * empty of data (regardless of filtering). Note that this is an optional\r\n     * parameter - if it is not given, the value of `zeroRecords` will be used\r\n     * instead (either the default or given value).\r\n     *  @type string\r\n     *  @default No data available in table\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.emptyTable\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"emptyTable\": \"No data available in table\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sEmptyTable\": \"No data available in table\",\n    /**\r\n     * This string gives information to the end user about the information\r\n     * that is current on display on the page. The following tokens can be\r\n     * used in the string and will be dynamically replaced as the table\r\n     * display updates. This tokens can be placed anywhere in the string, or\r\n     * removed as needed by the language requires:\r\n     *\r\n     * * `\\_START\\_` - Display index of the first record on the current page\r\n     * * `\\_END\\_` - Display index of the last record on the current page\r\n     * * `\\_TOTAL\\_` - Number of records in the table after filtering\r\n     * * `\\_MAX\\_` - Number of records in the table without filtering\r\n     * * `\\_PAGE\\_` - Current page number\r\n     * * `\\_PAGES\\_` - Total number of pages of data in the table\r\n     *\r\n     *  @type string\r\n     *  @default Showing _START_ to _END_ of _TOTAL_ entries\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.info\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n    /**\r\n     * Display information string for when the table is empty. Typically the\r\n     * format of this string should match `info`.\r\n     *  @type string\r\n     *  @default Showing 0 to 0 of 0 entries\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.infoEmpty\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"infoEmpty\": \"No entries to show\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n    /**\r\n     * When a user filters the information in a table, this string is appended\r\n     * to the information (`info`) to give an idea of how strong the filtering\r\n     * is. The variable _MAX_ is dynamically updated.\r\n     *  @type string\r\n     *  @default (filtered from _MAX_ total entries)\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.infoFiltered\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"infoFiltered\": \" - filtering from _MAX_ records\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n    /**\r\n     * If can be useful to append extra information to the info string at times,\r\n     * and this variable does exactly that. This information will be appended to\r\n     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\r\n     * being used) at all times.\r\n     *  @type string\r\n     *  @default <i>Empty string</i>\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.infoPostFix\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"infoPostFix\": \"All records shown are derived from real information.\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sInfoPostFix\": \"\",\n    /**\r\n     * This decimal place operator is a little different from the other\r\n     * language options since DataTables doesn't output floating point\r\n     * numbers, so it won't ever use this for display of a number. Rather,\r\n     * what this parameter does is modify the sort methods of the table so\r\n     * that numbers which are in a format which has a character other than\r\n     * a period (`.`) as a decimal place will be sorted numerically.\r\n     *\r\n     * Note that numbers with different decimal places cannot be shown in\r\n     * the same table and still be sortable, the table must be consistent.\r\n     * However, multiple different tables on the page can use different\r\n     * decimal place characters.\r\n     *  @type string\r\n     *  @default \r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.decimal\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"decimal\": \",\"\r\n     *          \"thousands\": \".\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sDecimal\": \"\",\n    /**\r\n     * DataTables has a build in number formatter (`formatNumber`) which is\r\n     * used to format large numbers that are used in the table information.\r\n     * By default a comma is used, but this can be trivially changed to any\r\n     * character you wish with this parameter.\r\n     *  @type string\r\n     *  @default ,\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.thousands\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"thousands\": \"'\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sThousands\": \",\",\n    /**\r\n     * Detail the action that will be taken when the drop down menu for the\r\n     * pagination length option is changed. The '_MENU_' variable is replaced\r\n     * with a default select list of 10, 25, 50 and 100, and can be replaced\r\n     * with a custom select box if required.\r\n     *  @type string\r\n     *  @default Show _MENU_ entries\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.lengthMenu\r\n     *\r\n     *  @example\r\n     *    // Language change only\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"lengthMenu\": \"Display _MENU_ records\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     *\r\n     *  @example\r\n     *    // Language and options change\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"lengthMenu\": 'Display <select>'+\r\n     *            '<option value=\"10\">10</option>'+\r\n     *            '<option value=\"20\">20</option>'+\r\n     *            '<option value=\"30\">30</option>'+\r\n     *            '<option value=\"40\">40</option>'+\r\n     *            '<option value=\"50\">50</option>'+\r\n     *            '<option value=\"-1\">All</option>'+\r\n     *            '</select> records'\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sLengthMenu\": \"Show _MENU_ entries\",\n    /**\r\n     * When using Ajax sourced data and during the first draw when DataTables is\r\n     * gathering the data, this message is shown in an empty row in the table to\r\n     * indicate to the end user the the data is being loaded. Note that this\r\n     * parameter is not used when loading data by server-side processing, just\r\n     * Ajax sourced data with client-side processing.\r\n     *  @type string\r\n     *  @default Loading...\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.loadingRecords\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"loadingRecords\": \"Please wait - loading...\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sLoadingRecords\": \"Loading...\",\n    /**\r\n     * Text which is displayed when the table is processing a user action\r\n     * (usually a sort command or similar).\r\n     *  @type string\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.processing\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"processing\": \"DataTables is currently busy\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sProcessing\": \"\",\n    /**\r\n     * Details the actions that will be taken when the user types into the\r\n     * filtering input text box. The variable \"_INPUT_\", if used in the string,\r\n     * is replaced with the HTML text box for the filtering input allowing\r\n     * control over where it appears in the string. If \"_INPUT_\" is not given\r\n     * then the input box is appended to the string automatically.\r\n     *  @type string\r\n     *  @default Search:\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.search\r\n     *\r\n     *  @example\r\n     *    // Input text box will be appended at the end automatically\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"search\": \"Filter records:\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     *\r\n     *  @example\r\n     *    // Specify where the filter should appear\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"search\": \"Apply filter _INPUT_ to table\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sSearch\": \"Search:\",\n    /**\r\n     * Assign a `placeholder` attribute to the search `input` element\r\n     *  @type string\r\n     *  @default \r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.searchPlaceholder\r\n     */\n    \"sSearchPlaceholder\": \"\",\n    /**\r\n     * All of the language information can be stored in a file on the\r\n     * server-side, which DataTables will look up if this parameter is passed.\r\n     * It must store the URL of the language file, which is in a JSON format,\r\n     * and the object has the same properties as the oLanguage object in the\r\n     * initialiser object (i.e. the above parameters). Please refer to one of\r\n     * the example language files to see how this works in action.\r\n     *  @type string\r\n     *  @default <i>Empty string - i.e. disabled</i>\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.url\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sUrl\": \"\",\n    /**\r\n     * Text shown inside the table records when the is no information to be\r\n     * displayed after filtering. `emptyTable` is shown when there is simply no\r\n     * information in the table at all (regardless of filtering).\r\n     *  @type string\r\n     *  @default No matching records found\r\n     *\r\n     *  @dtopt Language\r\n     *  @name DataTable.defaults.language.zeroRecords\r\n     *\r\n     *  @example\r\n     *    $(document).ready( function() {\r\n     *      $('#example').dataTable( {\r\n     *        \"language\": {\r\n     *          \"zeroRecords\": \"No records to display\"\r\n     *        }\r\n     *      } );\r\n     *    } );\r\n     */\n    \"sZeroRecords\": \"No matching records found\"\n  },\n  /**\r\n   * This parameter allows you to have define the global filtering state at\r\n   * initialisation time. As an object the `search` parameter must be\r\n   * defined, but all other parameters are optional. When `regex` is true,\r\n   * the search string will be treated as a regular expression, when false\r\n   * (default) it will be treated as a straight string. When `smart`\r\n   * DataTables will use it's smart filtering methods (to word match at\r\n   * any point in the data), when false this will not be done.\r\n   *  @namespace\r\n   *  @extends DataTable.models.oSearch\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.search\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"search\": {\"search\": \"Initial search\"}\r\n   *      } );\r\n   *    } )\r\n   */\n  \"oSearch\": $.extend({}, DataTable.models.oSearch),\n  /**\r\n   * __Deprecated__ The functionality provided by this parameter has now been\r\n   * superseded by that provided through `ajax`, which should be used instead.\r\n   *\r\n   * By default DataTables will look for the property `data` (or `aaData` for\r\n   * compatibility with DataTables 1.9-) when obtaining data from an Ajax\r\n   * source or for server-side processing - this parameter allows that\r\n   * property to be changed. You can use Javascript dotted object notation to\r\n   * get a data source for multiple levels of nesting.\r\n   *  @type string\r\n   *  @default data\r\n   *\r\n   *  @dtopt Options\r\n   *  @dtopt Server-side\r\n   *  @name DataTable.defaults.ajaxDataProp\r\n   *\r\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n   */\n  \"sAjaxDataProp\": \"data\",\n  /**\r\n   * __Deprecated__ The functionality provided by this parameter has now been\r\n   * superseded by that provided through `ajax`, which should be used instead.\r\n   *\r\n   * You can instruct DataTables to load data from an external\r\n   * source using this parameter (use aData if you want to pass data in you\r\n   * already have). Simply provide a url a JSON object can be obtained from.\r\n   *  @type string\r\n   *  @default null\r\n   *\r\n   *  @dtopt Options\r\n   *  @dtopt Server-side\r\n   *  @name DataTable.defaults.ajaxSource\r\n   *\r\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n   */\n  \"sAjaxSource\": null,\n  /**\r\n   * This initialisation variable allows you to specify exactly where in the\r\n   * DOM you want DataTables to inject the various controls it adds to the page\r\n   * (for example you might want the pagination controls at the top of the\r\n   * table). DIV elements (with or without a custom class) can also be added to\r\n   * aid styling. The follow syntax is used:\r\n   *   <ul>\r\n   *     <li>The following options are allowed:\r\n   *       <ul>\r\n   *         <li>'l' - Length changing</li>\r\n   *         <li>'f' - Filtering input</li>\r\n   *         <li>'t' - The table!</li>\r\n   *         <li>'i' - Information</li>\r\n   *         <li>'p' - Pagination</li>\r\n   *         <li>'r' - pRocessing</li>\r\n   *       </ul>\r\n   *     </li>\r\n   *     <li>The following constants are allowed:\r\n   *       <ul>\r\n   *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\r\n   *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\r\n   *       </ul>\r\n   *     </li>\r\n   *     <li>The following syntax is expected:\r\n   *       <ul>\r\n   *         <li>'&lt;' and '&gt;' - div elements</li>\r\n   *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\r\n   *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\r\n   *       </ul>\r\n   *     </li>\r\n   *     <li>Examples:\r\n   *       <ul>\r\n   *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\r\n   *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\r\n   *       </ul>\r\n   *     </li>\r\n   *   </ul>\r\n   *  @type string\r\n   *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\r\n   *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.dom\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sDom\": \"lfrtip\",\n  /**\r\n   * Search delay option. This will throttle full table searches that use the\r\n   * DataTables provided search input element (it does not effect calls to\r\n   * `dt-api search()`, providing a delay before the search is made.\r\n   *  @type integer\r\n   *  @default 0\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.searchDelay\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"searchDelay\": 200\r\n   *      } );\r\n   *    } )\r\n   */\n  \"searchDelay\": null,\n  /**\r\n   * DataTables features six different built-in options for the buttons to\r\n   * display for pagination control:\r\n   *\r\n   * * `numbers` - Page number buttons only\r\n   * * `simple` - 'Previous' and 'Next' buttons only\r\n   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\r\n   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\r\n   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\r\n   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\r\n   *  \r\n   * Further methods can be added using {@link DataTable.ext.oPagination}.\r\n   *  @type string\r\n   *  @default simple_numbers\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.pagingType\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"pagingType\": \"full_numbers\"\r\n   *      } );\r\n   *    } )\r\n   */\n  \"sPaginationType\": \"simple_numbers\",\n  /**\r\n   * Enable horizontal scrolling. When a table is too wide to fit into a\r\n   * certain layout, or you have a large number of columns in the table, you\r\n   * can enable x-scrolling to show the table in a viewport, which can be\r\n   * scrolled. This property can be `true` which will allow the table to\r\n   * scroll horizontally when needed, or any CSS unit, or a number (in which\r\n   * case it will be treated as a pixel measurement). Setting as simply `true`\r\n   * is recommended.\r\n   *  @type boolean|string\r\n   *  @default <i>blank string - i.e. disabled</i>\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.scrollX\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"scrollX\": true,\r\n   *        \"scrollCollapse\": true\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sScrollX\": \"\",\n  /**\r\n   * This property can be used to force a DataTable to use more width than it\r\n   * might otherwise do when x-scrolling is enabled. For example if you have a\r\n   * table which requires to be well spaced, this parameter is useful for\r\n   * \"over-sizing\" the table, and thus forcing scrolling. This property can by\r\n   * any CSS unit, or a number (in which case it will be treated as a pixel\r\n   * measurement).\r\n   *  @type string\r\n   *  @default <i>blank string - i.e. disabled</i>\r\n   *\r\n   *  @dtopt Options\r\n   *  @name DataTable.defaults.scrollXInner\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"scrollX\": \"100%\",\r\n   *        \"scrollXInner\": \"110%\"\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sScrollXInner\": \"\",\n  /**\r\n   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\r\n   * to the given height, and enable scrolling for any data which overflows the\r\n   * current viewport. This can be used as an alternative to paging to display\r\n   * a lot of data in a small area (although paging and scrolling can both be\r\n   * enabled at the same time). This property can be any CSS unit, or a number\r\n   * (in which case it will be treated as a pixel measurement).\r\n   *  @type string\r\n   *  @default <i>blank string - i.e. disabled</i>\r\n   *\r\n   *  @dtopt Features\r\n   *  @name DataTable.defaults.scrollY\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"scrollY\": \"200px\",\r\n   *        \"paginate\": false\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sScrollY\": \"\",\n  /**\r\n   * __Deprecated__ The functionality provided by this parameter has now been\r\n   * superseded by that provided through `ajax`, which should be used instead.\r\n   *\r\n   * Set the HTTP method that is used to make the Ajax call for server-side\r\n   * processing or Ajax sourced data.\r\n   *  @type string\r\n   *  @default GET\r\n   *\r\n   *  @dtopt Options\r\n   *  @dtopt Server-side\r\n   *  @name DataTable.defaults.serverMethod\r\n   *\r\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n   */\n  \"sServerMethod\": \"GET\",\n  /**\r\n   * DataTables makes use of renderers when displaying HTML elements for\r\n   * a table. These renderers can be added or modified by plug-ins to\r\n   * generate suitable mark-up for a site. For example the Bootstrap\r\n   * integration plug-in for DataTables uses a paging button renderer to\r\n   * display pagination buttons in the mark-up required by Bootstrap.\r\n   *\r\n   * For further information about the renderers available see\r\n   * DataTable.ext.renderer\r\n   *  @type string|object\r\n   *  @default null\r\n   *\r\n   *  @name DataTable.defaults.renderer\r\n   *\r\n   */\n  \"renderer\": null,\n  /**\r\n   * Set the data property name that DataTables should use to get a row's id\r\n   * to set as the `id` property in the node.\r\n   *  @type string\r\n   *  @default DT_RowId\r\n   *\r\n   *  @name DataTable.defaults.rowId\r\n   */\n  \"rowId\": \"DT_RowId\"\n};\n_fnHungarianMap(DataTable.defaults);\n\n/*\r\n * Developer note - See note in model.defaults.js about the use of Hungarian\r\n * notation and camel case.\r\n */\n\n/**\r\n * Column options that can be given to DataTables at initialisation time.\r\n *  @namespace\r\n */\nDataTable.defaults.column = {\n  /**\r\n   * Define which column(s) an order will occur on for this column. This\r\n   * allows a column's ordering to take multiple columns into account when\r\n   * doing a sort or use the data from a different column. For example first\r\n   * name / last name columns make sense to do a multi-column sort over the\r\n   * two columns.\r\n   *  @type array|int\r\n   *  @default null <i>Takes the value of the column index automatically</i>\r\n   *\r\n   *  @name DataTable.defaults.column.orderData\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\r\n   *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\r\n   *          { \"orderData\": 2, \"targets\": [ 2 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"orderData\": [ 0, 1 ] },\r\n   *          { \"orderData\": [ 1, 0 ] },\r\n   *          { \"orderData\": 2 },\r\n   *          null,\r\n   *          null\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"aDataSort\": null,\n  \"iDataSort\": -1,\n  /**\r\n   * You can control the default ordering direction, and even alter the\r\n   * behaviour of the sort handler (i.e. only allow ascending ordering etc)\r\n   * using this parameter.\r\n   *  @type array\r\n   *  @default [ 'asc', 'desc' ]\r\n   *\r\n   *  @name DataTable.defaults.column.orderSequence\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\r\n   *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\r\n   *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          null,\r\n   *          { \"orderSequence\": [ \"asc\" ] },\r\n   *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\r\n   *          { \"orderSequence\": [ \"desc\" ] },\r\n   *          null\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"asSorting\": ['asc', 'desc'],\n  /**\r\n   * Enable or disable filtering on the data in this column.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @name DataTable.defaults.column.searchable\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"searchable\": false, \"targets\": [ 0 ] }\r\n   *        ] } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"searchable\": false },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ] } );\r\n   *    } );\r\n   */\n  \"bSearchable\": true,\n  /**\r\n   * Enable or disable ordering on this column.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @name DataTable.defaults.column.orderable\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"orderable\": false, \"targets\": [ 0 ] }\r\n   *        ] } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"orderable\": false },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ] } );\r\n   *    } );\r\n   */\n  \"bSortable\": true,\n  /**\r\n   * Enable or disable the display of this column.\r\n   *  @type boolean\r\n   *  @default true\r\n   *\r\n   *  @name DataTable.defaults.column.visible\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"visible\": false, \"targets\": [ 0 ] }\r\n   *        ] } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"visible\": false },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ] } );\r\n   *    } );\r\n   */\n  \"bVisible\": true,\n  /**\r\n   * Developer definable function that is called whenever a cell is created (Ajax source,\r\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n   * allowing you to modify the DOM element (add background colour for example) when the\r\n   * element is available.\r\n   *  @type function\r\n   *  @param {element} td The TD node that has been created\r\n   *  @param {*} cellData The Data for the cell\r\n   *  @param {array|object} rowData The data for the whole row\r\n   *  @param {int} row The row index for the aoData data store\r\n   *  @param {int} col The column index for aoColumns\r\n   *\r\n   *  @name DataTable.defaults.column.createdCell\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [3],\r\n   *          \"createdCell\": function (td, cellData, rowData, row, col) {\r\n   *            if ( cellData == \"1.7\" ) {\r\n   *              $(td).css('color', 'blue')\r\n   *            }\r\n   *          }\r\n   *        } ]\r\n   *      });\r\n   *    } );\r\n   */\n  \"fnCreatedCell\": null,\n  /**\r\n   * This parameter has been replaced by `data` in DataTables to ensure naming\r\n   * consistency. `dataProp` can still be used, as there is backwards\r\n   * compatibility in DataTables for this option, but it is strongly\r\n   * recommended that you use `data` in preference to `dataProp`.\r\n   *  @name DataTable.defaults.column.dataProp\r\n   */\n\n  /**\r\n   * This property can be used to read data from any data source property,\r\n   * including deeply nested objects / properties. `data` can be given in a\r\n   * number of different ways which effect its behaviour:\r\n   *\r\n   * * `integer` - treated as an array index for the data source. This is the\r\n   *   default that DataTables uses (incrementally increased for each column).\r\n   * * `string` - read an object property from the data source. There are\r\n   *   three 'special' options that can be used in the string to alter how\r\n   *   DataTables reads the data from the source object:\r\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n   *      Javascript to read from nested objects, so to can the options\r\n   *      specified in `data`. For example: `browser.version` or\r\n   *      `browser.name`. If your object parameter name contains a period, use\r\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n   *    * `[]` - Array notation. DataTables can automatically combine data\r\n   *      from and array source, joining the data with the characters provided\r\n   *      between the two brackets. For example: `name[, ]` would provide a\r\n   *      comma-space separated list from the source array. If no characters\r\n   *      are provided between the brackets, the original array source is\r\n   *      returned.\r\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n   *      execute a function of the name given. For example: `browser()` for a\r\n   *      simple function on the data source, `browser.version()` for a\r\n   *      function in a nested property or even `browser().version` to get an\r\n   *      object property if the function called returns an object. Note that\r\n   *      function notation is recommended for use in `render` rather than\r\n   *      `data` as it is much simpler to use as a renderer.\r\n   * * `null` - use the original data source for the row rather than plucking\r\n   *   data directly from it. This action has effects on two other\r\n   *   initialisation options:\r\n   *    * `defaultContent` - When null is given as the `data` option and\r\n   *      `defaultContent` is specified for the column, the value defined by\r\n   *      `defaultContent` will be used for the cell.\r\n   *    * `render` - When null is used for the `data` option and the `render`\r\n   *      option is specified for the column, the whole data source for the\r\n   *      row is used for the renderer.\r\n   * * `function` - the function given will be executed whenever DataTables\r\n   *   needs to set or get the data for a cell in the column. The function\r\n   *   takes three parameters:\r\n   *    * Parameters:\r\n   *      * `{array|object}` The data source for the row\r\n   *      * `{string}` The type call data requested - this will be 'set' when\r\n   *        setting data or 'filter', 'display', 'type', 'sort' or undefined\r\n   *        when gathering data. Note that when `undefined` is given for the\r\n   *        type DataTables expects to get the raw data for the object back<\r\n   *      * `{*}` Data to set when the second parameter is 'set'.\r\n   *    * Return:\r\n   *      * The return value from the function is not required when 'set' is\r\n   *        the type of call, but otherwise the return is what will be used\r\n   *        for the data requested.\r\n   *\r\n   * Note that `data` is a getter and setter option. If you just require\r\n   * formatting of data for output, you will likely want to use `render` which\r\n   * is simply a getter and thus simpler to use.\r\n   *\r\n   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\r\n   * name change reflects the flexibility of this property and is consistent\r\n   * with the naming of mRender. If 'mDataProp' is given, then it will still\r\n   * be used by DataTables, as it automatically maps the old name to the new\r\n   * if required.\r\n   *\r\n   *  @type string|int|function|null\r\n   *  @default null <i>Use automatically calculated column index</i>\r\n   *\r\n   *  @name DataTable.defaults.column.data\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Read table data from objects\r\n   *    // JSON structure for each row:\r\n   *    //   {\r\n   *    //      \"engine\": {value},\r\n   *    //      \"browser\": {value},\r\n   *    //      \"platform\": {value},\r\n   *    //      \"version\": {value},\r\n   *    //      \"grade\": {value}\r\n   *    //   }\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"ajaxSource\": \"sources/objects.txt\",\r\n   *        \"columns\": [\r\n   *          { \"data\": \"engine\" },\r\n   *          { \"data\": \"browser\" },\r\n   *          { \"data\": \"platform\" },\r\n   *          { \"data\": \"version\" },\r\n   *          { \"data\": \"grade\" }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Read information from deeply nested objects\r\n   *    // JSON structure for each row:\r\n   *    //   {\r\n   *    //      \"engine\": {value},\r\n   *    //      \"browser\": {value},\r\n   *    //      \"platform\": {\r\n   *    //         \"inner\": {value}\r\n   *    //      },\r\n   *    //      \"details\": [\r\n   *    //         {value}, {value}\r\n   *    //      ]\r\n   *    //   }\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"ajaxSource\": \"sources/deep.txt\",\r\n   *        \"columns\": [\r\n   *          { \"data\": \"engine\" },\r\n   *          { \"data\": \"browser\" },\r\n   *          { \"data\": \"platform.inner\" },\r\n   *          { \"data\": \"details.0\" },\r\n   *          { \"data\": \"details.1\" }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `data` as a function to provide different information for\r\n   *    // sorting, filtering and display. In this case, currency (price)\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"data\": function ( source, type, val ) {\r\n   *            if (type === 'set') {\r\n   *              source.price = val;\r\n   *              // Store the computed display and filter values for efficiency\r\n   *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\r\n   *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\r\n   *              return;\r\n   *            }\r\n   *            else if (type === 'display') {\r\n   *              return source.price_display;\r\n   *            }\r\n   *            else if (type === 'filter') {\r\n   *              return source.price_filter;\r\n   *            }\r\n   *            // 'sort', 'type' and undefined all just use the integer\r\n   *            return source.price;\r\n   *          }\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using default content\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"data\": null,\r\n   *          \"defaultContent\": \"Click to edit\"\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using array notation - outputting a list from an array\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"data\": \"name[, ]\"\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   */\n  \"mData\": null,\n  /**\r\n   * This property is the rendering partner to `data` and it is suggested that\r\n   * when you want to manipulate data for display (including filtering,\r\n   * sorting etc) without altering the underlying data for the table, use this\r\n   * property. `render` can be considered to be the the read only companion to\r\n   * `data` which is read / write (then as such more complex). Like `data`\r\n   * this option can be given in a number of different ways to effect its\r\n   * behaviour:\r\n   *\r\n   * * `integer` - treated as an array index for the data source. This is the\r\n   *   default that DataTables uses (incrementally increased for each column).\r\n   * * `string` - read an object property from the data source. There are\r\n   *   three 'special' options that can be used in the string to alter how\r\n   *   DataTables reads the data from the source object:\r\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n   *      Javascript to read from nested objects, so to can the options\r\n   *      specified in `data`. For example: `browser.version` or\r\n   *      `browser.name`. If your object parameter name contains a period, use\r\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n   *    * `[]` - Array notation. DataTables can automatically combine data\r\n   *      from and array source, joining the data with the characters provided\r\n   *      between the two brackets. For example: `name[, ]` would provide a\r\n   *      comma-space separated list from the source array. If no characters\r\n   *      are provided between the brackets, the original array source is\r\n   *      returned.\r\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n   *      execute a function of the name given. For example: `browser()` for a\r\n   *      simple function on the data source, `browser.version()` for a\r\n   *      function in a nested property or even `browser().version` to get an\r\n   *      object property if the function called returns an object.\r\n   * * `object` - use different data for the different data types requested by\r\n   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\r\n   *   of the object is the data type the property refers to and the value can\r\n   *   defined using an integer, string or function using the same rules as\r\n   *   `render` normally does. Note that an `_` option _must_ be specified.\r\n   *   This is the default value to use if you haven't specified a value for\r\n   *   the data type requested by DataTables.\r\n   * * `function` - the function given will be executed whenever DataTables\r\n   *   needs to set or get the data for a cell in the column. The function\r\n   *   takes three parameters:\r\n   *    * Parameters:\r\n   *      * {array|object} The data source for the row (based on `data`)\r\n   *      * {string} The type call data requested - this will be 'filter',\r\n   *        'display', 'type' or 'sort'.\r\n   *      * {array|object} The full data source for the row (not based on\r\n   *        `data`)\r\n   *    * Return:\r\n   *      * The return value from the function is what will be used for the\r\n   *        data requested.\r\n   *\r\n   *  @type string|int|function|object|null\r\n   *  @default null Use the data source value.\r\n   *\r\n   *  @name DataTable.defaults.column.render\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Create a comma separated list from an array of objects\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"ajaxSource\": \"sources/deep.txt\",\r\n   *        \"columns\": [\r\n   *          { \"data\": \"engine\" },\r\n   *          { \"data\": \"browser\" },\r\n   *          {\r\n   *            \"data\": \"platform\",\r\n   *            \"render\": \"[, ].name\"\r\n   *          }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Execute a function to obtain data\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"data\": null, // Use the full data source object for the renderer's source\r\n   *          \"render\": \"browserName()\"\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // As an object, extracting different data for the different types\r\n   *    // This would be used with a data source such as:\r\n   *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\r\n   *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\r\n   *    // (which has both forms) is used for filtering for if a user inputs either format, while\r\n   *    // the formatted phone number is the one that is shown in the table.\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"data\": null, // Use the full data source object for the renderer's source\r\n   *          \"render\": {\r\n   *            \"_\": \"phone\",\r\n   *            \"filter\": \"phone_filter\",\r\n   *            \"display\": \"phone_display\"\r\n   *          }\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Use as a function to create a link from the data source\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"data\": \"download_link\",\r\n   *          \"render\": function ( data, type, full ) {\r\n   *            return '<a href=\"'+data+'\">Download</a>';\r\n   *          }\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"mRender\": null,\n  /**\r\n   * Change the cell type created for the column - either TD cells or TH cells. This\r\n   * can be useful as TH cells have semantic meaning in the table body, allowing them\r\n   * to act as a header for a row (you may wish to add scope='row' to the TH elements).\r\n   *  @type string\r\n   *  @default td\r\n   *\r\n   *  @name DataTable.defaults.column.cellType\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Make the first column use TH cells\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [ {\r\n   *          \"targets\": [ 0 ],\r\n   *          \"cellType\": \"th\"\r\n   *        } ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sCellType\": \"td\",\n  /**\r\n   * Class to give to each cell in this column.\r\n   *  @type string\r\n   *  @default <i>Empty string</i>\r\n   *\r\n   *  @name DataTable.defaults.column.class\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"class\": \"my_class\" },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sClass\": \"\",\n  /**\r\n   * When DataTables calculates the column widths to assign to each column,\r\n   * it finds the longest string in each column and then constructs a\r\n   * temporary table and reads the widths from that. The problem with this\r\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n   * string - thus the calculation can go wrong (doing it properly and putting\r\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n   * a \"work around\" we provide this option. It will append its value to the\r\n   * text that is found to be the longest string for the column - i.e. padding.\r\n   * Generally you shouldn't need this!\r\n   *  @type string\r\n   *  @default <i>Empty string<i>\r\n   *\r\n   *  @name DataTable.defaults.column.contentPadding\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          {\r\n   *            \"contentPadding\": \"mmm\"\r\n   *          }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sContentPadding\": \"\",\n  /**\r\n   * Allows a default value to be given for a column's data, and will be used\r\n   * whenever a null data source is encountered (this can be because `data`\r\n   * is set to null, or because the data source itself is null).\r\n   *  @type string\r\n   *  @default null\r\n   *\r\n   *  @name DataTable.defaults.column.defaultContent\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          {\r\n   *            \"data\": null,\r\n   *            \"defaultContent\": \"Edit\",\r\n   *            \"targets\": [ -1 ]\r\n   *          }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          {\r\n   *            \"data\": null,\r\n   *            \"defaultContent\": \"Edit\"\r\n   *          }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sDefaultContent\": null,\n  /**\r\n   * This parameter is only used in DataTables' server-side processing. It can\r\n   * be exceptionally useful to know what columns are being displayed on the\r\n   * client side, and to map these to database fields. When defined, the names\r\n   * also allow DataTables to reorder information from the server if it comes\r\n   * back in an unexpected order (i.e. if you switch your columns around on the\r\n   * client-side, your server-side code does not also need updating).\r\n   *  @type string\r\n   *  @default <i>Empty string</i>\r\n   *\r\n   *  @name DataTable.defaults.column.name\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"name\": \"engine\", \"targets\": [ 0 ] },\r\n   *          { \"name\": \"browser\", \"targets\": [ 1 ] },\r\n   *          { \"name\": \"platform\", \"targets\": [ 2 ] },\r\n   *          { \"name\": \"version\", \"targets\": [ 3 ] },\r\n   *          { \"name\": \"grade\", \"targets\": [ 4 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"name\": \"engine\" },\r\n   *          { \"name\": \"browser\" },\r\n   *          { \"name\": \"platform\" },\r\n   *          { \"name\": \"version\" },\r\n   *          { \"name\": \"grade\" }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sName\": \"\",\n  /**\r\n   * Defines a data source type for the ordering which can be used to read\r\n   * real-time information from the table (updating the internally cached\r\n   * version) prior to ordering. This allows ordering to occur on user\r\n   * editable elements such as form inputs.\r\n   *  @type string\r\n   *  @default std\r\n   *\r\n   *  @name DataTable.defaults.column.orderDataType\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\r\n   *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\r\n   *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\r\n   *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          null,\r\n   *          null,\r\n   *          { \"orderDataType\": \"dom-text\" },\r\n   *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\r\n   *          { \"orderDataType\": \"dom-select\" },\r\n   *          { \"orderDataType\": \"dom-checkbox\" }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sSortDataType\": \"std\",\n  /**\r\n   * The title of this column.\r\n   *  @type string\r\n   *  @default null <i>Derived from the 'TH' value for this column in the\r\n   *    original HTML table.</i>\r\n   *\r\n   *  @name DataTable.defaults.column.title\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"title\": \"My column title\" },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sTitle\": null,\n  /**\r\n   * The type allows you to specify how the data for this column will be\r\n   * ordered. Four types (string, numeric, date and html (which will strip\r\n   * HTML tags before ordering)) are currently available. Note that only date\r\n   * formats understood by Javascript's Date() object will be accepted as type\r\n   * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\r\n   * 'numeric', 'date' or 'html' (by default). Further types can be adding\r\n   * through plug-ins.\r\n   *  @type string\r\n   *  @default null <i>Auto-detected from raw data</i>\r\n   *\r\n   *  @name DataTable.defaults.column.type\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"type\": \"html\", \"targets\": [ 0 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"type\": \"html\" },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sType\": null,\n  /**\r\n   * Defining the width of the column, this parameter may take any CSS value\r\n   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\n   * been given a specific width through this interface ensuring that the table\r\n   * remains readable.\r\n   *  @type string\r\n   *  @default null <i>Automatic</i>\r\n   *\r\n   *  @name DataTable.defaults.column.width\r\n   *  @dtopt Columns\r\n   *\r\n   *  @example\r\n   *    // Using `columnDefs`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columnDefs\": [\r\n   *          { \"width\": \"20%\", \"targets\": [ 0 ] }\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   *\r\n   *  @example\r\n   *    // Using `columns`\r\n   *    $(document).ready( function() {\r\n   *      $('#example').dataTable( {\r\n   *        \"columns\": [\r\n   *          { \"width\": \"20%\" },\r\n   *          null,\r\n   *          null,\r\n   *          null,\r\n   *          null\r\n   *        ]\r\n   *      } );\r\n   *    } );\r\n   */\n  \"sWidth\": null\n};\n_fnHungarianMap(DataTable.defaults.column);\n\n/**\r\n * DataTables settings object - this holds all the information needed for a\r\n * given table, including configuration, data and current application of the\r\n * table options. DataTables does not have a single instance for each DataTable\r\n * with the settings attached to that instance, but rather instances of the\r\n * DataTable \"class\" are created on-the-fly as needed (typically by a\r\n * $().dataTable() call) and the settings object is then applied to that\r\n * instance.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults} but this\r\n * one is the internal data store for DataTables's cache of columns. It should\r\n * NOT be manipulated outside of DataTables. Any configuration should be done\r\n * through the initialisation options.\r\n *  @namespace\r\n *  @todo Really should attach the settings object to individual instances so we\r\n *    don't need to create new instances on each $().dataTable() call (if the\r\n *    table already exists). It would also save passing oSettings around and\r\n *    into every single function. However, this is a very significant\r\n *    architecture change for DataTables and will almost certainly break\r\n *    backwards compatibility with older installations. This is something that\r\n *    will be done in 2.0.\r\n */\nDataTable.models.oSettings = {\n  /**\r\n   * Primary features of DataTables and their enablement state.\r\n   *  @namespace\r\n   */\n  \"oFeatures\": {\n    /**\r\n     * Flag to say if DataTables should automatically try to calculate the\r\n     * optimum table and columns widths (true) or not (false).\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bAutoWidth\": null,\n    /**\r\n     * Delay the creation of TR and TD elements until they are actually\r\n     * needed by a driven page draw. This can give a significant speed\r\n     * increase for Ajax source and Javascript source data, but makes no\r\n     * difference at all for DOM and server-side processing tables.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bDeferRender\": null,\n    /**\r\n     * Enable filtering on the table or not. Note that if this is disabled\r\n     * then there is no filtering at all on the table, including fnFilter.\r\n     * To just remove the filtering input use sDom and remove the 'f' option.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bFilter\": null,\n    /**\r\n     * Table information element (the 'Showing x of y records' div) enable\r\n     * flag.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bInfo\": null,\n    /**\r\n     * Present a user control allowing the end user to change the page size\r\n     * when pagination is enabled.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bLengthChange\": null,\n    /**\r\n     * Pagination enabled or not. Note that if this is disabled then length\r\n     * changing must also be disabled.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bPaginate\": null,\n    /**\r\n     * Processing indicator enable flag whenever DataTables is enacting a\r\n     * user request - typically an Ajax request for server-side processing.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bProcessing\": null,\n    /**\r\n     * Server-side processing enabled flag - when enabled DataTables will\r\n     * get all data from the server for every draw - there is no filtering,\r\n     * sorting or paging done on the client-side.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bServerSide\": null,\n    /**\r\n     * Sorting enablement flag.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bSort\": null,\n    /**\r\n     * Multi-column sorting\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bSortMulti\": null,\n    /**\r\n     * Apply a class to the columns which are being sorted to provide a\r\n     * visual highlight or not. This can slow things down when enabled since\r\n     * there is a lot of DOM interaction.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bSortClasses\": null,\n    /**\r\n     * State saving enablement flag.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bStateSave\": null\n  },\n  /**\r\n   * Scrolling settings for a table.\r\n   *  @namespace\r\n   */\n  \"oScroll\": {\n    /**\r\n     * When the table is shorter in height than sScrollY, collapse the\r\n     * table container down to the height of the table (when true).\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type boolean\r\n     */\n    \"bCollapse\": null,\n    /**\r\n     * Width of the scrollbar for the web-browser's platform. Calculated\r\n     * during table initialisation.\r\n     *  @type int\r\n     *  @default 0\r\n     */\n    \"iBarWidth\": 0,\n    /**\r\n     * Viewport width for horizontal scrolling. Horizontal scrolling is\r\n     * disabled if an empty string.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type string\r\n     */\n    \"sX\": null,\n    /**\r\n     * Width to expand the table to when using x-scrolling. Typically you\r\n     * should not need to use this.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type string\r\n     *  @deprecated\r\n     */\n    \"sXInner\": null,\n    /**\r\n     * Viewport height for vertical scrolling. Vertical scrolling is disabled\r\n     * if an empty string.\r\n     * Note that this parameter will be set by the initialisation routine. To\r\n     * set a default use {@link DataTable.defaults}.\r\n     *  @type string\r\n     */\n    \"sY\": null\n  },\n  /**\r\n   * Language information for the table.\r\n   *  @namespace\r\n   *  @extends DataTable.defaults.oLanguage\r\n   */\n  \"oLanguage\": {\n    /**\r\n     * Information callback function. See\r\n     * {@link DataTable.defaults.fnInfoCallback}\r\n     *  @type function\r\n     *  @default null\r\n     */\n    \"fnInfoCallback\": null\n  },\n  /**\r\n   * Browser support parameters\r\n   *  @namespace\r\n   */\n  \"oBrowser\": {\n    /**\r\n     * Indicate if the browser incorrectly calculates width:100% inside a\r\n     * scrolling element (IE6/7)\r\n     *  @type boolean\r\n     *  @default false\r\n     */\n    \"bScrollOversize\": false,\n    /**\r\n     * Determine if the vertical scrollbar is on the right or left of the\r\n     * scrolling container - needed for rtl language layout, although not\r\n     * all browsers move the scrollbar (Safari).\r\n     *  @type boolean\r\n     *  @default false\r\n     */\n    \"bScrollbarLeft\": false,\n    /**\r\n     * Flag for if `getBoundingClientRect` is fully supported or not\r\n     *  @type boolean\r\n     *  @default false\r\n     */\n    \"bBounding\": false,\n    /**\r\n     * Browser scrollbar width\r\n     *  @type integer\r\n     *  @default 0\r\n     */\n    \"barWidth\": 0\n  },\n  \"ajax\": null,\n  /**\r\n   * Array referencing the nodes which are used for the features. The\r\n   * parameters of this object match what is allowed by sDom - i.e.\r\n   *   <ul>\r\n   *     <li>'l' - Length changing</li>\r\n   *     <li>'f' - Filtering input</li>\r\n   *     <li>'t' - The table!</li>\r\n   *     <li>'i' - Information</li>\r\n   *     <li>'p' - Pagination</li>\r\n   *     <li>'r' - pRocessing</li>\r\n   *   </ul>\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aanFeatures\": [],\n  /**\r\n   * Store data information - see {@link DataTable.models.oRow} for detailed\r\n   * information.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoData\": [],\n  /**\r\n   * Array of indexes which are in the current display (after filtering etc)\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aiDisplay\": [],\n  /**\r\n   * Array of indexes for display - no filtering\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aiDisplayMaster\": [],\n  /**\r\n   * Map of row ids to data indexes\r\n   *  @type object\r\n   *  @default {}\r\n   */\n  \"aIds\": {},\n  /**\r\n   * Store information about each column that is in use\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoColumns\": [],\n  /**\r\n   * Store information about the table's header\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoHeader\": [],\n  /**\r\n   * Store information about the table's footer\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoFooter\": [],\n  /**\r\n   * Store the applied global search information in case we want to force a\r\n   * research or compare the old search to a new one.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @namespace\r\n   *  @extends DataTable.models.oSearch\r\n   */\n  \"oPreviousSearch\": {},\n  /**\r\n   * Store the applied search for each column - see\r\n   * {@link DataTable.models.oSearch} for the format that is used for the\r\n   * filtering information for each column.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoPreSearchCols\": [],\n  /**\r\n   * Sorting that is applied to the table. Note that the inner arrays are\r\n   * used in the following manner:\r\n   * <ul>\r\n   *   <li>Index 0 - column number</li>\r\n   *   <li>Index 1 - current sorting direction</li>\r\n   * </ul>\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type array\r\n   *  @todo These inner arrays should really be objects\r\n   */\n  \"aaSorting\": null,\n  /**\r\n   * Sorting that is always applied to the table (i.e. prefixed in front of\r\n   * aaSorting).\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aaSortingFixed\": [],\n  /**\r\n   * Classes to use for the striping of a table.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"asStripeClasses\": null,\n  /**\r\n   * If restoring a table - we should restore its striping classes as well\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"asDestroyStripes\": [],\n  /**\r\n   * If restoring a table - we should restore its width\r\n   *  @type int\r\n   *  @default 0\r\n   */\n  \"sDestroyWidth\": 0,\n  /**\r\n   * Callback functions array for every time a row is inserted (i.e. on a draw).\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoRowCallback\": [],\n  /**\r\n   * Callback functions for the header on each draw.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoHeaderCallback\": [],\n  /**\r\n   * Callback function for the footer on each draw.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoFooterCallback\": [],\n  /**\r\n   * Array of callback functions for draw callback functions\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoDrawCallback\": [],\n  /**\r\n   * Array of callback functions for row created function\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoRowCreatedCallback\": [],\n  /**\r\n   * Callback functions for just before the table is redrawn. A return of\r\n   * false will be used to cancel the draw.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoPreDrawCallback\": [],\n  /**\r\n   * Callback functions for when the table has been initialised.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoInitComplete\": [],\n  /**\r\n   * Callbacks for modifying the settings to be stored for state saving, prior to\r\n   * saving state.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoStateSaveParams\": [],\n  /**\r\n   * Callbacks for modifying the settings that have been stored for state saving\r\n   * prior to using the stored values to restore the state.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoStateLoadParams\": [],\n  /**\r\n   * Callbacks for operating on the settings object once the saved state has been\r\n   * loaded\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoStateLoaded\": [],\n  /**\r\n   * Cache the table ID for quick access\r\n   *  @type string\r\n   *  @default <i>Empty string</i>\r\n   */\n  \"sTableId\": \"\",\n  /**\r\n   * The TABLE node for the main table\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTable\": null,\n  /**\r\n   * Permanent ref to the thead element\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTHead\": null,\n  /**\r\n   * Permanent ref to the tfoot element - if it exists\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTFoot\": null,\n  /**\r\n   * Permanent ref to the tbody element\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTBody\": null,\n  /**\r\n   * Cache the wrapper node (contains all DataTables controlled elements)\r\n   *  @type node\r\n   *  @default null\r\n   */\n  \"nTableWrapper\": null,\n  /**\r\n   * Indicate if when using server-side processing the loading of data\r\n   * should be deferred until the second draw.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type boolean\r\n   *  @default false\r\n   */\n  \"bDeferLoading\": false,\n  /**\r\n   * Indicate if all required information has been read in\r\n   *  @type boolean\r\n   *  @default false\r\n   */\n  \"bInitialised\": false,\n  /**\r\n   * Information about open rows. Each object in the array has the parameters\r\n   * 'nTr' and 'nParent'\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoOpenRows\": [],\n  /**\r\n   * Dictate the positioning of DataTables' control elements - see\r\n   * {@link DataTable.model.oInit.sDom}.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sDom\": null,\n  /**\r\n   * Search delay (in mS)\r\n   *  @type integer\r\n   *  @default null\r\n   */\n  \"searchDelay\": null,\n  /**\r\n   * Which type of pagination should be used.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type string\r\n   *  @default two_button\r\n   */\n  \"sPaginationType\": \"two_button\",\n  /**\r\n   * The state duration (for `stateSave`) in seconds.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type int\r\n   *  @default 0\r\n   */\n  \"iStateDuration\": 0,\n  /**\r\n   * Array of callback functions for state saving. Each array element is an\r\n   * object with the following parameters:\r\n   *   <ul>\r\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n   *       and the JSON string to save that has been thus far created. Returns\r\n   *       a JSON string to be inserted into a json object\r\n   *       (i.e. '\"param\": [ 0, 1, 2]')</li>\r\n   *     <li>string:sName - name of callback</li>\r\n   *   </ul>\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoStateSave\": [],\n  /**\r\n   * Array of callback functions for state loading. Each array element is an\r\n   * object with the following parameters:\r\n   *   <ul>\r\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n   *       and the object stored. May return false to cancel state loading</li>\r\n   *     <li>string:sName - name of callback</li>\r\n   *   </ul>\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoStateLoad\": [],\n  /**\r\n   * State that was saved. Useful for back reference\r\n   *  @type object\r\n   *  @default null\r\n   */\n  \"oSavedState\": null,\n  /**\r\n   * State that was loaded. Useful for back reference\r\n   *  @type object\r\n   *  @default null\r\n   */\n  \"oLoadedState\": null,\n  /**\r\n   * Source url for AJAX data for the table.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sAjaxSource\": null,\n  /**\r\n   * Property from a given object from which to read the table data from. This\r\n   * can be an empty string (when not server-side processing), in which case\r\n   * it is  assumed an an array is given directly.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type string\r\n   */\n  \"sAjaxDataProp\": null,\n  /**\r\n   * The last jQuery XHR object that was used for server-side data gathering.\r\n   * This can be used for working with the XHR information in one of the\r\n   * callbacks\r\n   *  @type object\r\n   *  @default null\r\n   */\n  \"jqXHR\": null,\n  /**\r\n   * JSON returned from the server in the last Ajax request\r\n   *  @type object\r\n   *  @default undefined\r\n   */\n  \"json\": undefined,\n  /**\r\n   * Data submitted as part of the last Ajax request\r\n   *  @type object\r\n   *  @default undefined\r\n   */\n  \"oAjaxData\": undefined,\n  /**\r\n   * Function to get the server-side data.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type function\r\n   */\n  \"fnServerData\": null,\n  /**\r\n   * Functions which are called prior to sending an Ajax request so extra\r\n   * parameters can easily be sent to the server\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoServerParams\": [],\n  /**\r\n   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\r\n   * required).\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type string\r\n   */\n  \"sServerMethod\": null,\n  /**\r\n   * Format numbers for display.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type function\r\n   */\n  \"fnFormatNumber\": null,\n  /**\r\n   * List of options that can be used for the user selectable length menu.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aLengthMenu\": null,\n  /**\r\n   * Counter for the draws that the table does. Also used as a tracker for\r\n   * server-side processing\r\n   *  @type int\r\n   *  @default 0\r\n   */\n  \"iDraw\": 0,\n  /**\r\n   * Indicate if a redraw is being done - useful for Ajax\r\n   *  @type boolean\r\n   *  @default false\r\n   */\n  \"bDrawing\": false,\n  /**\r\n   * Draw index (iDraw) of the last error when parsing the returned data\r\n   *  @type int\r\n   *  @default -1\r\n   */\n  \"iDrawError\": -1,\n  /**\r\n   * Paging display length\r\n   *  @type int\r\n   *  @default 10\r\n   */\n  \"_iDisplayLength\": 10,\n  /**\r\n   * Paging start point - aiDisplay index\r\n   *  @type int\r\n   *  @default 0\r\n   */\n  \"_iDisplayStart\": 0,\n  /**\r\n   * Server-side processing - number of records in the result set\r\n   * (i.e. before filtering), Use fnRecordsTotal rather than\r\n   * this property to get the value of the number of records, regardless of\r\n   * the server-side processing setting.\r\n   *  @type int\r\n   *  @default 0\r\n   *  @private\r\n   */\n  \"_iRecordsTotal\": 0,\n  /**\r\n   * Server-side processing - number of records in the current display set\r\n   * (i.e. after filtering). Use fnRecordsDisplay rather than\r\n   * this property to get the value of the number of records, regardless of\r\n   * the server-side processing setting.\r\n   *  @type boolean\r\n   *  @default 0\r\n   *  @private\r\n   */\n  \"_iRecordsDisplay\": 0,\n  /**\r\n   * The classes to use for the table\r\n   *  @type object\r\n   *  @default {}\r\n   */\n  \"oClasses\": {},\n  /**\r\n   * Flag attached to the settings object so you can check in the draw\r\n   * callback if filtering has been done in the draw. Deprecated in favour of\r\n   * events.\r\n   *  @type boolean\r\n   *  @default false\r\n   *  @deprecated\r\n   */\n  \"bFiltered\": false,\n  /**\r\n   * Flag attached to the settings object so you can check in the draw\r\n   * callback if sorting has been done in the draw. Deprecated in favour of\r\n   * events.\r\n   *  @type boolean\r\n   *  @default false\r\n   *  @deprecated\r\n   */\n  \"bSorted\": false,\n  /**\r\n   * Indicate that if multiple rows are in the header and there is more than\r\n   * one unique cell per column, if the top one (true) or bottom one (false)\r\n   * should be used for sorting / title by DataTables.\r\n   * Note that this parameter will be set by the initialisation routine. To\r\n   * set a default use {@link DataTable.defaults}.\r\n   *  @type boolean\r\n   */\n  \"bSortCellsTop\": null,\n  /**\r\n   * Initialisation object that is used for the table\r\n   *  @type object\r\n   *  @default null\r\n   */\n  \"oInit\": null,\n  /**\r\n   * Destroy callback functions - for plug-ins to attach themselves to the\r\n   * destroy so they can clean up markup and events.\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aoDestroyCallback\": [],\n  /**\r\n   * Get the number of records in the current record set, before filtering\r\n   *  @type function\r\n   */\n  \"fnRecordsTotal\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n  },\n  /**\r\n   * Get the number of records in the current record set, after filtering\r\n   *  @type function\r\n   */\n  \"fnRecordsDisplay\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n  },\n  /**\r\n   * Get the display end point - aiDisplay index\r\n   *  @type function\r\n   */\n  \"fnDisplayEnd\": function () {\n    var len = this._iDisplayLength,\n      start = this._iDisplayStart,\n      calc = start + len,\n      records = this.aiDisplay.length,\n      features = this.oFeatures,\n      paginate = features.bPaginate;\n    if (features.bServerSide) {\n      return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n    } else {\n      return !paginate || calc > records || len === -1 ? records : calc;\n    }\n  },\n  /**\r\n   * The DataTables object for this table\r\n   *  @type object\r\n   *  @default null\r\n   */\n  \"oInstance\": null,\n  /**\r\n   * Unique identifier for each instance of the DataTables object. If there\r\n   * is an ID on the table node, then it takes that value, otherwise an\r\n   * incrementing internal counter is used.\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"sInstance\": null,\n  /**\r\n   * tabindex attribute value that is added to DataTables control elements, allowing\r\n   * keyboard navigation of the table and its controls.\r\n   */\n  \"iTabIndex\": 0,\n  /**\r\n   * DIV container for the footer scrolling table if scrolling\r\n   */\n  \"nScrollHead\": null,\n  /**\r\n   * DIV container for the footer scrolling table if scrolling\r\n   */\n  \"nScrollFoot\": null,\n  /**\r\n   * Last applied sort\r\n   *  @type array\r\n   *  @default []\r\n   */\n  \"aLastSort\": [],\n  /**\r\n   * Stored plug-in instances\r\n   *  @type object\r\n   *  @default {}\r\n   */\n  \"oPlugins\": {},\n  /**\r\n   * Function used to get a row's id from the row's data\r\n   *  @type function\r\n   *  @default null\r\n   */\n  \"rowIdFn\": null,\n  /**\r\n   * Data location where to store a row's id\r\n   *  @type string\r\n   *  @default null\r\n   */\n  \"rowId\": null\n};\n\n/**\r\n * Extension object for DataTables that is used to provide all extension\r\n * options.\r\n *\r\n * Note that the `DataTable.ext` object is available through\r\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\r\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\r\n *  @namespace\r\n *  @extends DataTable.models.ext\r\n */\n\n/**\r\n * DataTables extensions\r\n * \r\n * This namespace acts as a collection area for plug-ins that can be used to\r\n * extend DataTables capabilities. Indeed many of the build in methods\r\n * use this method to provide their own capabilities (sorting methods for\r\n * example).\r\n *\r\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\r\n * reasons\r\n *\r\n *  @namespace\r\n */\nDataTable.ext = _ext = {\n  /**\r\n   * Buttons. For use with the Buttons extension for DataTables. This is\r\n   * defined here so other extensions can define buttons regardless of load\r\n   * order. It is _not_ used by DataTables core.\r\n   *\r\n   *  @type object\r\n   *  @default {}\r\n   */\n  buttons: {},\n  /**\r\n   * Element class names\r\n   *\r\n   *  @type object\r\n   *  @default {}\r\n   */\n  classes: {},\n  /**\r\n   * DataTables build type (expanded by the download builder)\r\n   *\r\n   *  @type string\r\n   */\n  builder: \"-source-\",\n  /**\r\n   * Error reporting.\r\n   * \r\n   * How should DataTables report an error. Can take the value 'alert',\r\n   * 'throw', 'none' or a function.\r\n   *\r\n   *  @type string|function\r\n   *  @default alert\r\n   */\n  errMode: \"alert\",\n  /**\r\n   * Feature plug-ins.\r\n   * \r\n   * This is an array of objects which describe the feature plug-ins that are\r\n   * available to DataTables. These feature plug-ins are then available for\r\n   * use through the `dom` initialisation option.\r\n   * \r\n   * Each feature plug-in is described by an object which must have the\r\n   * following properties:\r\n   * \r\n   * * `fnInit` - function that is used to initialise the plug-in,\r\n   * * `cFeature` - a character so the feature can be enabled by the `dom`\r\n   *   instillation option. This is case sensitive.\r\n   *\r\n   * The `fnInit` function has the following input parameters:\r\n   *\r\n   * 1. `{object}` DataTables settings object: see\r\n   *    {@link DataTable.models.oSettings}\r\n   *\r\n   * And the following return is expected:\r\n   * \r\n   * * {node|null} The element which contains your feature. Note that the\r\n   *   return may also be void if your plug-in does not require to inject any\r\n   *   DOM elements into DataTables control (`dom`) - for example this might\r\n   *   be useful when developing a plug-in which allows table control via\r\n   *   keyboard entry\r\n   *\r\n   *  @type array\r\n   *\r\n   *  @example\r\n   *    $.fn.dataTable.ext.features.push( {\r\n   *      \"fnInit\": function( oSettings ) {\r\n   *        return new TableTools( { \"oDTSettings\": oSettings } );\r\n   *      },\r\n   *      \"cFeature\": \"T\"\r\n   *    } );\r\n   */\n  feature: [],\n  /**\r\n   * Row searching.\r\n   * \r\n   * This method of searching is complimentary to the default type based\r\n   * searching, and a lot more comprehensive as it allows you complete control\r\n   * over the searching logic. Each element in this array is a function\r\n   * (parameters described below) that is called for every row in the table,\r\n   * and your logic decides if it should be included in the searching data set\r\n   * or not.\r\n   *\r\n   * Searching functions have the following input parameters:\r\n   *\r\n   * 1. `{object}` DataTables settings object: see\r\n   *    {@link DataTable.models.oSettings}\r\n   * 2. `{array|object}` Data for the row to be processed (same as the\r\n   *    original format that was passed in as the data source, or an array\r\n   *    from a DOM data source\r\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\r\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\r\n   *\r\n   * And the following return is expected:\r\n   *\r\n   * * {boolean} Include the row in the searched result set (true) or not\r\n   *   (false)\r\n   *\r\n   * Note that as with the main search ability in DataTables, technically this\r\n   * is \"filtering\", since it is subtractive. However, for consistency in\r\n   * naming we call it searching here.\r\n   *\r\n   *  @type array\r\n   *  @default []\r\n   *\r\n   *  @example\r\n   *    // The following example shows custom search being applied to the\r\n   *    // fourth column (i.e. the data[3] index) based on two input values\r\n   *    // from the end-user, matching the data in a certain range.\r\n   *    $.fn.dataTable.ext.search.push(\r\n   *      function( settings, data, dataIndex ) {\r\n   *        var min = document.getElementById('min').value * 1;\r\n   *        var max = document.getElementById('max').value * 1;\r\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\r\n   *\r\n   *        if ( min == \"\" && max == \"\" ) {\r\n   *          return true;\r\n   *        }\r\n   *        else if ( min == \"\" && version < max ) {\r\n   *          return true;\r\n   *        }\r\n   *        else if ( min < version && \"\" == max ) {\r\n   *          return true;\r\n   *        }\r\n   *        else if ( min < version && version < max ) {\r\n   *          return true;\r\n   *        }\r\n   *        return false;\r\n   *      }\r\n   *    );\r\n   */\n  search: [],\n  /**\r\n   * Selector extensions\r\n   *\r\n   * The `selector` option can be used to extend the options available for the\r\n   * selector modifier options (`selector-modifier` object data type) that\r\n   * each of the three built in selector types offer (row, column and cell +\r\n   * their plural counterparts). For example the Select extension uses this\r\n   * mechanism to provide an option to select only rows, columns and cells\r\n   * that have been marked as selected by the end user (`{selected: true}`),\r\n   * which can be used in conjunction with the existing built in selector\r\n   * options.\r\n   *\r\n   * Each property is an array to which functions can be pushed. The functions\r\n   * take three attributes:\r\n   *\r\n   * * Settings object for the host table\r\n   * * Options object (`selector-modifier` object type)\r\n   * * Array of selected item indexes\r\n   *\r\n   * The return is an array of the resulting item indexes after the custom\r\n   * selector has been applied.\r\n   *\r\n   *  @type object\r\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n  /**\r\n   * Internal functions, exposed for used in plug-ins.\r\n   * \r\n   * Please note that you should not need to use the internal methods for\r\n   * anything other than a plug-in (and even then, try to avoid if possible).\r\n   * The internal function may change between releases.\r\n   *\r\n   *  @type object\r\n   *  @default {}\r\n   */\n  internal: {},\n  /**\r\n   * Legacy configuration options. Enable and disable legacy options that\r\n   * are available in DataTables.\r\n   *\r\n   *  @type object\r\n   */\n  legacy: {\n    /**\r\n     * Enable / disable DataTables 1.9 compatible server-side processing\r\n     * requests\r\n     *\r\n     *  @type boolean\r\n     *  @default null\r\n     */\n    ajax: null\n  },\n  /**\r\n   * Pagination plug-in methods.\r\n   * \r\n   * Each entry in this object is a function and defines which buttons should\r\n   * be shown by the pagination rendering method that is used for the table:\r\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\r\n   * buttons are displayed in the document, while the functions here tell it\r\n   * what buttons to display. This is done by returning an array of button\r\n   * descriptions (what each button will do).\r\n   *\r\n   * Pagination types (the four built in options and any additional plug-in\r\n   * options defined here) can be used through the `paginationType`\r\n   * initialisation parameter.\r\n   *\r\n   * The functions defined take two parameters:\r\n   *\r\n   * 1. `{int} page` The current page index\r\n   * 2. `{int} pages` The number of pages in the table\r\n   *\r\n   * Each function is expected to return an array where each element of the\r\n   * array can be one of:\r\n   *\r\n   * * `first` - Jump to first page when activated\r\n   * * `last` - Jump to last page when activated\r\n   * * `previous` - Show previous page when activated\r\n   * * `next` - Show next page when activated\r\n   * * `{int}` - Show page of the index given\r\n   * * `{array}` - A nested array containing the above elements to add a\r\n   *   containing 'DIV' element (might be useful for styling).\r\n   *\r\n   * Note that DataTables v1.9- used this object slightly differently whereby\r\n   * an object with two functions would be defined for each plug-in. That\r\n   * ability is still supported by DataTables 1.10+ to provide backwards\r\n   * compatibility, but this option of use is now decremented and no longer\r\n   * documented in DataTables 1.10+.\r\n   *\r\n   *  @type object\r\n   *  @default {}\r\n   *\r\n   *  @example\r\n   *    // Show previous, next and current page buttons only\r\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\r\n   *      return [ 'previous', page, 'next' ];\r\n   *    };\r\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n  /**\r\n   * Ordering plug-ins - custom data source\r\n   * \r\n   * The extension options for ordering of data available here is complimentary\r\n   * to the default type based ordering that DataTables typically uses. It\r\n   * allows much greater control over the the data that is being used to\r\n   * order a column, but is necessarily therefore more complex.\r\n   * \r\n   * This type of ordering is useful if you want to do ordering based on data\r\n   * live from the DOM (for example the contents of an 'input' element) rather\r\n   * than just the static string that DataTables knows of.\r\n   * \r\n   * The way these plug-ins work is that you create an array of the values you\r\n   * wish to be ordering for the column in question and then return that\r\n   * array. The data in the array much be in the index order of the rows in\r\n   * the table (not the currently ordering order!). Which order data gathering\r\n   * function is run here depends on the `dt-init columns.orderDataType`\r\n   * parameter that is used for the column (if any).\r\n   *\r\n   * The functions defined take two parameters:\r\n   *\r\n   * 1. `{object}` DataTables settings object: see\r\n   *    {@link DataTable.models.oSettings}\r\n   * 2. `{int}` Target column index\r\n   *\r\n   * Each function is expected to return an array:\r\n   *\r\n   * * `{array}` Data for the column to be ordering upon\r\n   *\r\n   *  @type array\r\n   *\r\n   *  @example\r\n   *    // Ordering using `input` node values\r\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\r\n   *    {\r\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\r\n   *        return $('input', td).val();\r\n   *      } );\r\n   *    }\r\n   */\n  order: {},\n  /**\r\n   * Type based plug-ins.\r\n   *\r\n   * Each column in DataTables has a type assigned to it, either by automatic\r\n   * detection or by direct assignment using the `type` option for the column.\r\n   * The type of a column will effect how it is ordering and search (plug-ins\r\n   * can also make use of the column type if required).\r\n   *\r\n   * @namespace\r\n   */\n  type: {\n    /**\r\n     * Type detection functions.\r\n     *\r\n     * The functions defined in this object are used to automatically detect\r\n     * a column's type, making initialisation of DataTables super easy, even\r\n     * when complex data is in the table.\r\n     *\r\n     * The functions defined take two parameters:\r\n     *\r\n        *  1. `{*}` Data from the column cell to be analysed\r\n        *  2. `{settings}` DataTables settings object. This can be used to\r\n        *     perform context specific type detection - for example detection\r\n        *     based on language settings such as using a comma for a decimal\r\n        *     place. Generally speaking the options from the settings will not\r\n        *     be required\r\n     *\r\n     * Each function is expected to return:\r\n     *\r\n     * * `{string|null}` Data type detected, or null if unknown (and thus\r\n     *   pass it on to the other type detection functions.\r\n     *\r\n     *  @type array\r\n     *\r\n     *  @example\r\n     *    // Currency type detection plug-in:\r\n     *    $.fn.dataTable.ext.type.detect.push(\r\n     *      function ( data, settings ) {\r\n     *        // Check the numeric part\r\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\r\n     *          return null;\r\n     *        }\r\n     *\r\n     *        // Check prefixed by currency\r\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\r\n     *          return 'currency';\r\n     *        }\r\n     *        return null;\r\n     *      }\r\n     *    );\r\n     */\n    detect: [],\n    /**\r\n     * Type based search formatting.\r\n     *\r\n     * The type based searching functions can be used to pre-format the\r\n     * data to be search on. For example, it can be used to strip HTML\r\n     * tags or to de-format telephone numbers for numeric only searching.\r\n     *\r\n     * Note that is a search is not defined for a column of a given type,\r\n     * no search formatting will be performed.\r\n     * \r\n     * Pre-processing of searching data plug-ins - When you assign the sType\r\n     * for a column (or have it automatically detected for you by DataTables\r\n     * or a type detection plug-in), you will typically be using this for\r\n     * custom sorting, but it can also be used to provide custom searching\r\n     * by allowing you to pre-processing the data and returning the data in\r\n     * the format that should be searched upon. This is done by adding\r\n     * functions this object with a parameter name which matches the sType\r\n     * for that target column. This is the corollary of <i>afnSortData</i>\r\n     * for searching data.\r\n     *\r\n     * The functions defined take a single parameter:\r\n     *\r\n        *  1. `{*}` Data from the column cell to be prepared for searching\r\n     *\r\n     * Each function is expected to return:\r\n     *\r\n     * * `{string|null}` Formatted string that will be used for the searching.\r\n     *\r\n     *  @type object\r\n     *  @default {}\r\n     *\r\n     *  @example\r\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\r\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\r\n     *    }\r\n     */\n    search: {},\n    /**\r\n     * Type based ordering.\r\n     *\r\n     * The column type tells DataTables what ordering to apply to the table\r\n     * when a column is sorted upon. The order for each type that is defined,\r\n     * is defined by the functions available in this object.\r\n     *\r\n     * Each ordering option can be described by three properties added to\r\n     * this object:\r\n     *\r\n     * * `{type}-pre` - Pre-formatting function\r\n     * * `{type}-asc` - Ascending order function\r\n     * * `{type}-desc` - Descending order function\r\n     *\r\n     * All three can be used together, only `{type}-pre` or only\r\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\r\n     * that only `{type}-pre` is used, as this provides the optimal\r\n     * implementation in terms of speed, although the others are provided\r\n     * for compatibility with existing Javascript sort functions.\r\n     *\r\n     * `{type}-pre`: Functions defined take a single parameter:\r\n     *\r\n        *  1. `{*}` Data from the column cell to be prepared for ordering\r\n     *\r\n     * And return:\r\n     *\r\n     * * `{*}` Data to be sorted upon\r\n     *\r\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\r\n     * functions, taking two parameters:\r\n     *\r\n        *  1. `{*}` Data to compare to the second parameter\r\n        *  2. `{*}` Data to compare to the first parameter\r\n     *\r\n     * And returning:\r\n     *\r\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\r\n     *   than the second parameter, ===0 if the two parameters are equal and\r\n     *   >0 if the first parameter should be sorted height than the second\r\n     *   parameter.\r\n     * \r\n     *  @type object\r\n     *  @default {}\r\n     *\r\n     *  @example\r\n     *    // Numeric ordering of formatted numbers with a pre-formatter\r\n     *    $.extend( $.fn.dataTable.ext.type.order, {\r\n     *      \"string-pre\": function(x) {\r\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\r\n     *        return parseFloat( a );\r\n     *      }\r\n     *    } );\r\n     *\r\n     *  @example\r\n     *    // Case-sensitive string ordering, with no pre-formatting method\r\n     *    $.extend( $.fn.dataTable.ext.order, {\r\n     *      \"string-case-asc\": function(x,y) {\r\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n     *      },\r\n     *      \"string-case-desc\": function(x,y) {\r\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n     *      }\r\n     *    } );\r\n     */\n    order: {}\n  },\n  /**\r\n   * Unique DataTables instance counter\r\n   *\r\n   * @type int\r\n   * @private\r\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\r\n   * Version check function.\r\n   *  @type function\r\n   *  @depreciated Since 1.10\r\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n  /**\r\n   * Index for what 'this' index API functions should use\r\n   *  @type int\r\n   *  @deprecated Since v1.10\r\n   */\n  iApiIndex: 0,\n  /**\r\n   * jQuery UI class container\r\n   *  @type object\r\n   *  @deprecated Since v1.10\r\n   */\n  oJUIClasses: {},\n  /**\r\n   * Software version\r\n   *  @type string\r\n   *  @deprecated Since v1.10\r\n   */\n  sVersion: DataTable.version\n};\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oApi: _ext.internal,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  \"sTable\": \"dataTable\",\n  \"sNoFooter\": \"no-footer\",\n  /* Paging buttons */\n  \"sPageButton\": \"paginate_button\",\n  \"sPageButtonActive\": \"current\",\n  \"sPageButtonDisabled\": \"disabled\",\n  /* Striping classes */\n  \"sStripeOdd\": \"odd\",\n  \"sStripeEven\": \"even\",\n  /* Empty row */\n  \"sRowEmpty\": \"dataTables_empty\",\n  /* Features */\n  \"sWrapper\": \"dataTables_wrapper\",\n  \"sFilter\": \"dataTables_filter\",\n  \"sInfo\": \"dataTables_info\",\n  \"sPaging\": \"dataTables_paginate paging_\",\n  /* Note that the type is postfixed */\n  \"sLength\": \"dataTables_length\",\n  \"sProcessing\": \"dataTables_processing\",\n  /* Sorting */\n  \"sSortAsc\": \"sorting_asc\",\n  \"sSortDesc\": \"sorting_desc\",\n  \"sSortable\": \"sorting\",\n  /* Sortable in both directions */\n  \"sSortableAsc\": \"sorting_desc_disabled\",\n  \"sSortableDesc\": \"sorting_asc_disabled\",\n  \"sSortableNone\": \"sorting_disabled\",\n  \"sSortColumn\": \"sorting_\",\n  /* Note that an int is postfixed for the sorting order */\n\n  /* Filtering */\n  \"sFilterInput\": \"\",\n  /* Page length */\n  \"sLengthSelect\": \"\",\n  /* Scrolling */\n  \"sScrollWrapper\": \"dataTables_scroll\",\n  \"sScrollHead\": \"dataTables_scrollHead\",\n  \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n  \"sScrollBody\": \"dataTables_scrollBody\",\n  \"sScrollFoot\": \"dataTables_scrollFoot\",\n  \"sScrollFootInner\": \"dataTables_scrollFootInner\",\n  /* Misc */\n  \"sHeaderTH\": \"\",\n  \"sFooterTH\": \"\",\n  // Deprecated\n  \"sSortJUIAsc\": \"\",\n  \"sSortJUIDesc\": \"\",\n  \"sSortJUI\": \"\",\n  \"sSortJUIAscAllowed\": \"\",\n  \"sSortJUIDescAllowed\": \"\",\n  \"sSortJUIWrapper\": \"\",\n  \"sSortIcon\": \"\",\n  \"sJUIHeader\": \"\",\n  \"sJUIFooter\": \"\"\n});\nvar extPagination = DataTable.ext.pager;\nfunction _numbers(page, pages) {\n  var numbers = [],\n    buttons = extPagination.numbers_length,\n    half = Math.floor(buttons / 2),\n    i = 1;\n  if (pages <= buttons) {\n    numbers = _range(0, pages);\n  } else if (page <= half) {\n    numbers = _range(0, buttons - 2);\n    numbers.push('ellipsis');\n    numbers.push(pages - 1);\n  } else if (page >= pages - 1 - half) {\n    numbers = _range(pages - (buttons - 2), pages);\n    numbers.splice(0, 0, 'ellipsis'); // no unshift in ie6\n    numbers.splice(0, 0, 0);\n  } else {\n    numbers = _range(page - half + 2, page + half - 1);\n    numbers.push('ellipsis');\n    numbers.push(pages - 1);\n    numbers.splice(0, 0, 'ellipsis');\n    numbers.splice(0, 0, 0);\n  }\n  numbers.DT_el = 'span';\n  return numbers;\n}\n$.extend(extPagination, {\n  simple: function (page, pages) {\n    return ['previous', 'next'];\n  },\n  full: function (page, pages) {\n    return ['first', 'previous', 'next', 'last'];\n  },\n  numbers: function (page, pages) {\n    return [_numbers(page, pages)];\n  },\n  simple_numbers: function (page, pages) {\n    return ['previous', _numbers(page, pages), 'next'];\n  },\n  full_numbers: function (page, pages) {\n    return ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n  },\n  first_last_numbers: function (page, pages) {\n    return ['first', _numbers(page, pages), 'last'];\n  },\n  // For testing and plug-ins to use\n  _numbers: _numbers,\n  // Number of number buttons (including ellipsis) to show. _Must be odd!_\n  numbers_length: 7\n});\n$.extend(true, DataTable.ext.renderer, {\n  pageButton: {\n    _: function (settings, host, idx, buttons, page, pages) {\n      var classes = settings.oClasses;\n      var lang = settings.oLanguage.oPaginate;\n      var aria = settings.oLanguage.oAria.paginate || {};\n      var btnDisplay, btnClass;\n      var attach = function (container, buttons) {\n        var i, ien, node, button, tabIndex;\n        var disabledClass = classes.sPageButtonDisabled;\n        var clickHandler = function (e) {\n          _fnPageChange(settings, e.data.action, true);\n        };\n        for (i = 0, ien = buttons.length; i < ien; i++) {\n          button = buttons[i];\n          if (Array.isArray(button)) {\n            var inner = $('<' + (button.DT_el || 'div') + '/>').appendTo(container);\n            attach(inner, button);\n          } else {\n            btnDisplay = null;\n            btnClass = button;\n            tabIndex = settings.iTabIndex;\n            switch (button) {\n              case 'ellipsis':\n                container.append('<span class=\"ellipsis\">&#x2026;</span>');\n                break;\n              case 'first':\n                btnDisplay = lang.sFirst;\n                if (page === 0) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n                break;\n              case 'previous':\n                btnDisplay = lang.sPrevious;\n                if (page === 0) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n                break;\n              case 'next':\n                btnDisplay = lang.sNext;\n                if (pages === 0 || page === pages - 1) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n                break;\n              case 'last':\n                btnDisplay = lang.sLast;\n                if (pages === 0 || page === pages - 1) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n                break;\n              default:\n                btnDisplay = settings.fnFormatNumber(button + 1);\n                btnClass = page === button ? classes.sPageButtonActive : '';\n                break;\n            }\n            if (btnDisplay !== null) {\n              var tag = settings.oInit.pagingTag || 'a';\n              var disabled = btnClass.indexOf(disabledClass) !== -1;\n              node = $('<' + tag + '>', {\n                'class': classes.sPageButton + ' ' + btnClass,\n                'aria-controls': settings.sTableId,\n                'aria-disabled': disabled ? 'true' : null,\n                'aria-label': aria[button],\n                'aria-role': 'link',\n                'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\n                'data-dt-idx': button,\n                'tabindex': tabIndex,\n                'id': idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null\n              }).html(btnDisplay).appendTo(container);\n              _fnBindAction(node, {\n                action: button\n              }, clickHandler);\n            }\n          }\n        }\n      };\n\n      // IE9 throws an 'unknown error' if document.activeElement is used\n      // inside an iframe or frame. Try / catch the error. Not good for\n      // accessibility, but neither are frames.\n      var activeEl;\n      try {\n        // Because this approach is destroying and recreating the paging\n        // elements, focus is lost on the select button which is bad for\n        // accessibility. So we want to restore focus once the draw has\n        // completed\n        activeEl = $(host).find(document.activeElement).data('dt-idx');\n      } catch (e) {}\n      attach($(host).empty(), buttons);\n      if (activeEl !== undefined) {\n        $(host).find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n      }\n    }\n  }\n});\n\n// Built in type detection. See model.ext.aTypes for information about\n// what is required from this methods.\n$.extend(DataTable.ext.type.detect, [\n// Plain numbers - first since V8 detects some plain numbers as dates\n// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _isNumber(d, decimal) ? 'num' + decimal : null;\n},\n// Dates (only those recognised by the browser's Date.parse)\nfunction (d, settings) {\n  // V8 tries _very_ hard to make a string passed into `Date.parse()`\n  // valid, so we need to use a regex to restrict date formats. Use a\n  // plug-in for anything other than ISO8601 style strings\n  if (d && !(d instanceof Date) && !_re_date.test(d)) {\n    return null;\n  }\n  var parsed = Date.parse(d);\n  return parsed !== null && !isNaN(parsed) || _empty(d) ? 'date' : null;\n},\n// Formatted numbers\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n},\n// HTML numeric\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n},\n// HTML numeric, formatted\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n},\n// HTML (this is strict checking - there must be html)\nfunction (d, settings) {\n  return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1 ? 'html' : null;\n}]);\n\n// Filter formatting functions. See model.ext.ofnSearch for information about\n// what is required from these methods.\n// \n// Note that additional search methods are added for the html numbers and\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\n// place is\n\n$.extend(DataTable.ext.type.search, {\n  html: function (data) {\n    return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, \" \").replace(_re_html, \"\") : '';\n  },\n  string: function (data) {\n    return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, \" \") : data;\n  }\n});\nvar __numericReplace = function (d, decimalPlace, re1, re2) {\n  if (d !== 0 && (!d || d === '-')) {\n    return -Infinity;\n  }\n  let type = typeof d;\n  if (type === 'number' || type === 'bigint') {\n    return d;\n  }\n\n  // If a decimal place other than `.` is used, it needs to be given to the\n  // function so we can detect it and replace with a `.` which is the only\n  // decimal place Javascript recognises - it is not locale aware.\n  if (decimalPlace) {\n    d = _numToDecimal(d, decimalPlace);\n  }\n  if (d.replace) {\n    if (re1) {\n      d = d.replace(re1, '');\n    }\n    if (re2) {\n      d = d.replace(re2, '');\n    }\n  }\n  return d * 1;\n};\n\n// Add the numeric 'deformatting' functions for sorting and search. This is done\n// in a function to provide an easy ability for the language options to add\n// additional methods if a non-period decimal place is used.\nfunction _addNumericSort(decimalPlace) {\n  $.each({\n    // Plain numbers\n    \"num\": function (d) {\n      return __numericReplace(d, decimalPlace);\n    },\n    // Formatted numbers\n    \"num-fmt\": function (d) {\n      return __numericReplace(d, decimalPlace, _re_formatted_numeric);\n    },\n    // HTML numeric\n    \"html-num\": function (d) {\n      return __numericReplace(d, decimalPlace, _re_html);\n    },\n    // HTML numeric, formatted\n    \"html-num-fmt\": function (d) {\n      return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n    }\n  }, function (key, fn) {\n    // Add the ordering method\n    _ext.type.order[key + decimalPlace + '-pre'] = fn;\n\n    // For HTML types add a search formatter that will strip the HTML\n    if (key.match(/^html\\-/)) {\n      _ext.type.search[key + decimalPlace] = _ext.type.search.html;\n    }\n  });\n}\n\n// Default sort methods\n$.extend(_ext.type.order, {\n  // Dates\n  \"date-pre\": function (d) {\n    var ts = Date.parse(d);\n    return isNaN(ts) ? -Infinity : ts;\n  },\n  // html\n  \"html-pre\": function (a) {\n    return _empty(a) ? '' : a.replace ? a.replace(/<.*?>/g, \"\").toLowerCase() : a + '';\n  },\n  // string\n  \"string-pre\": function (a) {\n    // This is a little complex, but faster than always calling toString,\n    // http://jsperf.com/tostring-v-check\n    return _empty(a) ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n  },\n  // string-asc and -desc are retained only for compatibility with the old\n  // sort methods\n  \"string-asc\": function (x, y) {\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  \"string-desc\": function (x, y) {\n    return x < y ? 1 : x > y ? -1 : 0;\n  }\n});\n\n// Numeric sorting types - order doesn't matter here\n_addNumericSort('');\n$.extend(true, DataTable.ext.renderer, {\n  header: {\n    _: function (settings, cell, column, classes) {\n      // No additional mark-up required\n      // Attach a sort listener to update on sort - note that using the\n      // `DT` namespace will allow the event to be removed automatically\n      // on destroy, while the `dt` namespaced event is the one we are\n      // listening for\n      $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n        if (settings !== ctx) {\n          // need to check this this is the host\n          return; // table, not a nested one\n        }\n\n        var colIdx = column.idx;\n        cell.removeClass(classes.sSortAsc + ' ' + classes.sSortDesc).addClass(columns[colIdx] == 'asc' ? classes.sSortAsc : columns[colIdx] == 'desc' ? classes.sSortDesc : column.sSortingClass);\n      });\n    },\n    jqueryui: function (settings, cell, column, classes) {\n      $('<div/>').addClass(classes.sSortJUIWrapper).append(cell.contents()).append($('<span/>').addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)).appendTo(cell);\n\n      // Attach a sort listener to update on sort\n      $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n        if (settings !== ctx) {\n          return;\n        }\n        var colIdx = column.idx;\n        cell.removeClass(classes.sSortAsc + \" \" + classes.sSortDesc).addClass(columns[colIdx] == 'asc' ? classes.sSortAsc : columns[colIdx] == 'desc' ? classes.sSortDesc : column.sSortingClass);\n        cell.find('span.' + classes.sSortIcon).removeClass(classes.sSortJUIAsc + \" \" + classes.sSortJUIDesc + \" \" + classes.sSortJUI + \" \" + classes.sSortJUIAscAllowed + \" \" + classes.sSortJUIDescAllowed).addClass(columns[colIdx] == 'asc' ? classes.sSortJUIAsc : columns[colIdx] == 'desc' ? classes.sSortJUIDesc : column.sSortingClassJUI);\n      });\n    }\n  }\n});\n\n/*\r\n * Public helper functions. These aren't used internally by DataTables, or\r\n * called by any of the options passed into DataTables, but they can be used\r\n * externally by developers working with DataTables. They are helper functions\r\n * to make working with DataTables a little bit easier.\r\n */\n\nvar __htmlEscapeEntities = function (d) {\n  if (Array.isArray(d)) {\n    d = d.join(',');\n  }\n  return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n};\n\n// Common logic for moment, luxon or a date action\nfunction __mld(dt, momentFn, luxonFn, dateFn, arg1) {\n  if (window.moment) {\n    return dt[momentFn](arg1);\n  } else if (window.luxon) {\n    return dt[luxonFn](arg1);\n  }\n  return dateFn ? dt[dateFn](arg1) : dt;\n}\nvar __mlWarning = false;\nfunction __mldObj(d, format, locale) {\n  var dt;\n  if (window.moment) {\n    dt = window.moment.utc(d, format, locale, true);\n    if (!dt.isValid()) {\n      return null;\n    }\n  } else if (window.luxon) {\n    dt = format && typeof d === 'string' ? window.luxon.DateTime.fromFormat(d, format) : window.luxon.DateTime.fromISO(d);\n    if (!dt.isValid) {\n      return null;\n    }\n    dt.setLocale(locale);\n  } else if (!format) {\n    // No format given, must be ISO\n    dt = new Date(d);\n  } else {\n    if (!__mlWarning) {\n      alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n    }\n    __mlWarning = true;\n  }\n  return dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper(localeString) {\n  return function (from, to, locale, def) {\n    // Luxon and Moment support\n    // Argument shifting\n    if (arguments.length === 0) {\n      locale = 'en';\n      to = null; // means toLocaleString\n      from = null; // means iso8601\n    } else if (arguments.length === 1) {\n      locale = 'en';\n      to = from;\n      from = null;\n    } else if (arguments.length === 2) {\n      locale = to;\n      to = from;\n      from = null;\n    }\n    var typeName = 'datetime-' + to;\n\n    // Add type detection and sorting specific to this date format - we need to be able to identify\n    // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n    if (!DataTable.ext.type.order[typeName]) {\n      // The renderer will give the value to type detect as the type!\n      DataTable.ext.type.detect.unshift(function (d) {\n        return d === typeName ? typeName : false;\n      });\n\n      // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n      // `valueOf` which gives milliseconds epoch\n      DataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n        var x = a.valueOf();\n        var y = b.valueOf();\n        return x === y ? 0 : x < y ? -1 : 1;\n      };\n      DataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n        var x = a.valueOf();\n        var y = b.valueOf();\n        return x === y ? 0 : x > y ? -1 : 1;\n      };\n    }\n    return function (d, type) {\n      // Allow for a default value\n      if (d === null || d === undefined) {\n        if (def === '--now') {\n          // We treat everything as UTC further down, so no changes are\n          // made, as such need to get the local date / time as if it were\n          // UTC\n          var local = new Date();\n          d = new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds()));\n        } else {\n          d = '';\n        }\n      }\n      if (type === 'type') {\n        // Typing uses the type name for fast matching\n        return typeName;\n      }\n      if (d === '') {\n        return type !== 'sort' ? '' : __mldObj('0000-01-01 00:00:00', null, locale);\n      }\n\n      // Shortcut. If `from` and `to` are the same, we are using the renderer to\n      // format for ordering, not display - its already in the display format.\n      if (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n        return d;\n      }\n      var dt = __mldObj(d, from, locale);\n      if (dt === null) {\n        return d;\n      }\n      if (type === 'sort') {\n        return dt;\n      }\n      var formatted = to === null ? __mld(dt, 'toDate', 'toJSDate', '')[localeString]() : __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n      // XSS protection\n      return type === 'display' ? __htmlEscapeEntities(formatted) : formatted;\n    };\n  };\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\nif (Intl) {\n  try {\n    var num = new Intl.NumberFormat().formatToParts(100000.1);\n    for (var i = 0; i < num.length; i++) {\n      if (num[i].type === 'group') {\n        __thousands = num[i].value;\n      } else if (num[i].type === 'decimal') {\n        __decimal = num[i].value;\n      }\n    }\n  } catch (e) {\n    // noop\n  }\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function (format, locale) {\n  var typeName = 'datetime-detect-' + format;\n  if (!locale) {\n    locale = 'en';\n  }\n  if (!DataTable.ext.type.order[typeName]) {\n    DataTable.ext.type.detect.unshift(function (d) {\n      var dt = __mldObj(d, format, locale);\n      return d === '' || dt ? typeName : false;\n    });\n    DataTable.ext.type.order[typeName + '-pre'] = function (d) {\n      return __mldObj(d, format, locale) || 0;\n    };\n  }\n};\n\n/**\r\n * Helpers for `columns.render`.\r\n *\r\n * The options defined here can be used with the `columns.render` initialisation\r\n * option to provide a display renderer. The following functions are defined:\r\n *\r\n * * `number` - Will format numeric data (defined by `columns.data`) for\r\n *   display, retaining the original unformatted data for sorting and filtering.\r\n *   It takes 5 parameters:\r\n *   * `string` - Thousands grouping separator\r\n *   * `string` - Decimal point indicator\r\n *   * `integer` - Number of decimal points to show\r\n *   * `string` (optional) - Prefix.\r\n *   * `string` (optional) - Postfix (/suffix).\r\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\r\n *   parameters.\r\n *\r\n * @example\r\n *   // Column definition using the number renderer\r\n *   {\r\n *     data: \"salary\",\r\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\r\n *   }\r\n *\r\n * @namespace\r\n */\nDataTable.render = {\n  date: __mlHelper('toLocaleDateString'),\n  datetime: __mlHelper('toLocaleString'),\n  time: __mlHelper('toLocaleTimeString'),\n  number: function (thousands, decimal, precision, prefix, postfix) {\n    // Auto locale detection\n    if (thousands === null || thousands === undefined) {\n      thousands = __thousands;\n    }\n    if (decimal === null || decimal === undefined) {\n      decimal = __decimal;\n    }\n    return {\n      display: function (d) {\n        if (typeof d !== 'number' && typeof d !== 'string') {\n          return d;\n        }\n        if (d === '' || d === null) {\n          return d;\n        }\n        var negative = d < 0 ? '-' : '';\n        var flo = parseFloat(d);\n\n        // If NaN then there isn't much formatting that we can do - just\n        // return immediately, escaping any HTML (this was supposed to\n        // be a number after all)\n        if (isNaN(flo)) {\n          return __htmlEscapeEntities(d);\n        }\n        flo = flo.toFixed(precision);\n        d = Math.abs(flo);\n        var intPart = parseInt(d, 10);\n        var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : '';\n\n        // If zero, then can't have a negative prefix\n        if (intPart === 0 && parseFloat(floatPart) === 0) {\n          negative = '';\n        }\n        return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n      }\n    };\n  },\n  text: function () {\n    return {\n      display: __htmlEscapeEntities,\n      filter: __htmlEscapeEntities\n    };\n  }\n};\n\n/*\r\n * This is really a good bit rubbish this method of exposing the internal methods\r\n * publicly... - To be fixed in 2.0 using methods on the prototype\r\n */\n\n/**\r\n * Create a wrapper function for exporting an internal functions to an external API.\r\n *  @param {string} fn API function name\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#internal\r\n */\nfunction _fnExternApiFunc(fn) {\n  return function () {\n    var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));\n    return DataTable.ext.internal[fn].apply(this, args);\n  };\n}\n\n/**\r\n * Reference to internal functions for use by plug-in developers. Note that\r\n * these methods are references to internal functions and are considered to be\r\n * private. If you use these methods, be aware that they are liable to change\r\n * between versions.\r\n *  @namespace\r\n */\n$.extend(DataTable.ext.internal, {\n  _fnExternApiFunc: _fnExternApiFunc,\n  _fnBuildAjax: _fnBuildAjax,\n  _fnAjaxUpdate: _fnAjaxUpdate,\n  _fnAjaxParameters: _fnAjaxParameters,\n  _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n  _fnAjaxDataSrc: _fnAjaxDataSrc,\n  _fnAddColumn: _fnAddColumn,\n  _fnColumnOptions: _fnColumnOptions,\n  _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n  _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n  _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n  _fnVisbleColumns: _fnVisbleColumns,\n  _fnGetColumns: _fnGetColumns,\n  _fnColumnTypes: _fnColumnTypes,\n  _fnApplyColumnDefs: _fnApplyColumnDefs,\n  _fnHungarianMap: _fnHungarianMap,\n  _fnCamelToHungarian: _fnCamelToHungarian,\n  _fnLanguageCompat: _fnLanguageCompat,\n  _fnBrowserDetect: _fnBrowserDetect,\n  _fnAddData: _fnAddData,\n  _fnAddTr: _fnAddTr,\n  _fnNodeToDataIndex: _fnNodeToDataIndex,\n  _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n  _fnGetCellData: _fnGetCellData,\n  _fnSetCellData: _fnSetCellData,\n  _fnSplitObjNotation: _fnSplitObjNotation,\n  _fnGetObjectDataFn: _fnGetObjectDataFn,\n  _fnSetObjectDataFn: _fnSetObjectDataFn,\n  _fnGetDataMaster: _fnGetDataMaster,\n  _fnClearTable: _fnClearTable,\n  _fnDeleteIndex: _fnDeleteIndex,\n  _fnInvalidate: _fnInvalidate,\n  _fnGetRowElements: _fnGetRowElements,\n  _fnCreateTr: _fnCreateTr,\n  _fnBuildHead: _fnBuildHead,\n  _fnDrawHead: _fnDrawHead,\n  _fnDraw: _fnDraw,\n  _fnReDraw: _fnReDraw,\n  _fnAddOptionsHtml: _fnAddOptionsHtml,\n  _fnDetectHeader: _fnDetectHeader,\n  _fnGetUniqueThs: _fnGetUniqueThs,\n  _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n  _fnFilterComplete: _fnFilterComplete,\n  _fnFilterCustom: _fnFilterCustom,\n  _fnFilterColumn: _fnFilterColumn,\n  _fnFilter: _fnFilter,\n  _fnFilterCreateSearch: _fnFilterCreateSearch,\n  _fnEscapeRegex: _fnEscapeRegex,\n  _fnFilterData: _fnFilterData,\n  _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n  _fnUpdateInfo: _fnUpdateInfo,\n  _fnInfoMacros: _fnInfoMacros,\n  _fnInitialise: _fnInitialise,\n  _fnInitComplete: _fnInitComplete,\n  _fnLengthChange: _fnLengthChange,\n  _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n  _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n  _fnPageChange: _fnPageChange,\n  _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n  _fnProcessingDisplay: _fnProcessingDisplay,\n  _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n  _fnScrollDraw: _fnScrollDraw,\n  _fnApplyToChildren: _fnApplyToChildren,\n  _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n  _fnThrottle: _fnThrottle,\n  _fnConvertToWidth: _fnConvertToWidth,\n  _fnGetWidestNode: _fnGetWidestNode,\n  _fnGetMaxLenString: _fnGetMaxLenString,\n  _fnStringToCss: _fnStringToCss,\n  _fnSortFlatten: _fnSortFlatten,\n  _fnSort: _fnSort,\n  _fnSortAria: _fnSortAria,\n  _fnSortListener: _fnSortListener,\n  _fnSortAttachListener: _fnSortAttachListener,\n  _fnSortingClasses: _fnSortingClasses,\n  _fnSortData: _fnSortData,\n  _fnSaveState: _fnSaveState,\n  _fnLoadState: _fnLoadState,\n  _fnImplementState: _fnImplementState,\n  _fnSettingsFromNode: _fnSettingsFromNode,\n  _fnLog: _fnLog,\n  _fnMap: _fnMap,\n  _fnBindAction: _fnBindAction,\n  _fnCallbackReg: _fnCallbackReg,\n  _fnCallbackFire: _fnCallbackFire,\n  _fnLengthOverflow: _fnLengthOverflow,\n  _fnRenderer: _fnRenderer,\n  _fnDataSource: _fnDataSource,\n  _fnRowAttributes: _fnRowAttributes,\n  _fnExtend: _fnExtend,\n  _fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n  // in 1.10, so this dead-end function is\n  // added to prevent errors\n});\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function (opts) {\n  return $(this).dataTable(opts).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each(DataTable, function (prop, val) {\n  $.fn.DataTable[prop] = val;\n});\nexport default DataTable;","map":{"version":3,"names":["jQuery","$","DataTable","selector","options","factory","sSelector","oOpts","api","_","rows","data","traditional","_Api","_fnSettingsFromNode","_ext","iApiIndex","fnAddData","redraw","Array","isArray","isPlainObject","add","row","undefined","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","oApi","internal","fn","ext","_fnExternApiFunc","each","o","oInit","_fnExtend","i","iLen","j","jLen","k","kLen","sId","getAttribute","bInitHandedOff","defaults","$this","_fnLog","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","sTableId","id","splice","_unique","oSettings","models","style","width","push","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","anThs","aoColumnsInit","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","_isArrayHost","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","insertAfter","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","html","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","_areAllUnique","sorted","last","again","_flatten","_includes","indexOf","arg","Object","prototype","toString","includes","String","trim","util","throttle","freq","frequency","timer","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","set","source","meta","setData","_fnSplitObjNotation","b","aLast","arrayNotation","funcNotation","innerSrc","Error","match","__reArray","__reFn","get","key","t","fetchData","substring","_fnHungarianMap","hungarian","newKey","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","window","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","document","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","mDataProp","sType","_sManualType","className","origClass","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortingClassJUI","sSortableAsc","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","types","detect","jen","ken","detectedType","cache","_fnGetCellData","aoColDefs","aoCols","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","nTd","sThisType","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","_fnNodeToDataIndex","_DT_RowIndex","_fnNodeToColumnIndex","anCells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","_aSortData","_aFilterData","cols","_fnRowAttributes","tds","td","contents","objectRead","setter","cellProcess","nextSibling","rowNode","nTrIn","create","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","aoLocal","aApplied","iColumns","iRowspan","iColspan","_fnDraw","ajaxComplete","_fnStart","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","iStripes","oLang","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","aDom","sDom","featureNode","cOption","nNewNode","cNext","sAttr","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nTrs","nCell","l","iColShifted","bUnique","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","fnRecordsDisplay","_fnBuildAjax","rbracket","ajaxData","instance","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","_fnAjaxParameters","_fnAjaxUpdateDraw","columnCount","preSearch","preColSearch","dataProp","columnSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","write","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","event","return","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","prevSearch","displayMaster","invalidated","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","dtHeaderCells","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","headerWidths","footerWidths","headerContent","footerContent","correction","sanityWidth","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","getComputedStyle","nToSize","iOuterWidth","bScrolling","padding","trigger","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","columnIdx","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","aiOrig","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sDataType","oExtSort","oSort","formatters","sortCol","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","ariaTitle","removeAttribute","setAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customSort","sSortDataType","customData","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","Api","abStateLoad","duration","iStateDuration","oLoadedState","level","msg","tn","sErrMode","errMode","alert","console","log","mappedName","extender","breakRefs","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","parents","result","renderer","host","__apiStruct","__arrayProto","_toSettings","mixed","jq","tables","context","ctxSettings","opts","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","__row_selector","run","sel","selInt","cellIdx","closest","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","namespace","stateSaveParamsEvent","destroyEvent","idFn","ids","_detailsShow","childRows","off","every","__details_add","klass","addRow","created","colSpan","_details","__details_state","__details_remove","__details_display","__details_events","drawEvent","colvisEvent","_emp","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","selected","caseInsen","use","module","root","is","jquery","versionCheck","version","aThis","aThat","iThis","iThat","isDataTable","fnIsDataTable","head","foot","fnTables","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orig","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","oPaginate","aria","btnDisplay","btnClass","attach","container","button","tabIndex","disabledClass","sPageButtonDisabled","clickHandler","sFirst","sPrevious","sNext","sLast","sPageButtonActive","tag","pagingTag","disabled","sPageButton","activeEl","empty","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","__mld","dt","momentFn","luxonFn","dateFn","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","DateTime","fromFormat","fromISO","setLocale","__mlHelper","localeString","from","to","typeName","valueOf","local","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","render","date","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnCalculateEnd","dataTableSettings","dataTableExt"],"sources":["D:/filee/SISTEM-INFORMASI-SEKOLAH-SMKN-1-JETIS-MASTER/frontend/node_modules/datatables.net/js/jquery.dataTables.mjs"],"sourcesContent":["/*! DataTables 1.13.4\r\n * Â©2008-2023 SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\nimport jQuery from 'jquery';\r\n\r\n// DataTables code uses $ internally, but we want to be able to\r\n// reassign $ with the `use` method, so it is a regular var.\r\nlet $ = jQuery;\r\n\r\n\r\nvar DataTable = function ( selector, options )\r\n{\r\n\t// Check if called with a window or jQuery object for DOM less applications\r\n\t// This is for backwards compatibility\r\n\tif (DataTable.factory(selector, options)) {\r\n\t\treturn DataTable;\r\n\t}\r\n\r\n\t// When creating with `new`, create a new DataTable, returning the API instance\r\n\tif (this instanceof DataTable) {\r\n\t\treturn $(selector).DataTable(options);\r\n\t}\r\n\telse {\r\n\t\t// Argument switching\r\n\t\toptions = selector;\r\n\t}\r\n\r\n\t/**\r\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\r\n\t * return the resulting jQuery object.\r\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\r\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\r\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\r\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\r\n\t *    'original' whereby the original order the data was read into the table is used.\r\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\r\n\t *  @returns {object} jQuery object, filtered by the given selector.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Highlight every second row\r\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\r\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\r\n\t *      oTable.fnFilter('Webkit');\r\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\r\n\t *      oTable.fnFilter('');\r\n\t *    } );\r\n\t */\r\n\tthis.$ = function ( sSelector, oOpts )\r\n\t{\r\n\t\treturn this.api(true).$( sSelector, oOpts );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\r\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\r\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\r\n\t * rows are found, the data returned is the original data array/object that was used to\r\n\t * create the row (or a generated array if from a DOM source).\r\n\t *\r\n\t * This method is often useful in-combination with $ where both functions are given the\r\n\t * same parameters and the array indexes will match identically.\r\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\r\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\r\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\r\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\r\n\t *    'original' whereby the original order the data was read into the table is used.\r\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\r\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\r\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\r\n\t *    entry in the array.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Get the data from the first row in the table\r\n\t *      var data = oTable._('tr:first');\r\n\t *\r\n\t *      // Do something useful with the data\r\n\t *      alert( \"First cell is: \"+data[0] );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Filter to 'Webkit' and get all data for\r\n\t *      oTable.fnFilter('Webkit');\r\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\r\n\t *\r\n\t *      // Do something with the data\r\n\t *      alert( data.length+\" rows matched the search\" );\r\n\t *    } );\r\n\t */\r\n\tthis._ = function ( sSelector, oOpts )\r\n\t{\r\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a DataTables Api instance, with the currently selected tables for\r\n\t * the Api's context.\r\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\r\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\r\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\r\n\t *   or if all tables captured in the jQuery object should be used.\r\n\t * @return {DataTables.Api}\r\n\t */\r\n\tthis.api = function ( traditional )\r\n\t{\r\n\t\treturn traditional ?\r\n\t\t\tnew _Api(\r\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\r\n\t\t\t) :\r\n\t\t\tnew _Api( this );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Add a single new row or multiple rows of data to the table. Please note\r\n\t * that this is suitable for client-side processing only - if you are using\r\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\r\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\r\n\t *  @param {array|object} data The data to be added to the table. This can be:\r\n\t *    <ul>\r\n\t *      <li>1D array of data - add a single row with the data provided</li>\r\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\r\n\t *      <li>object - data object when using <i>mData</i></li>\r\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\r\n\t *    </ul>\r\n\t *  @param {bool} [redraw=true] redraw the table or not\r\n\t *  @returns {array} An array of integers, representing the list of indexes in\r\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\r\n\t *    the table.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    // Global var for counter\r\n\t *    var giCount = 2;\r\n\t *\r\n\t *    $(document).ready(function() {\r\n\t *      $('#example').dataTable();\r\n\t *    } );\r\n\t *\r\n\t *    function fnClickAddRow() {\r\n\t *      $('#example').dataTable().fnAddData( [\r\n\t *        giCount+\".1\",\r\n\t *        giCount+\".2\",\r\n\t *        giCount+\".3\",\r\n\t *        giCount+\".4\" ]\r\n\t *      );\r\n\t *\r\n\t *      giCount++;\r\n\t *    }\r\n\t */\r\n\tthis.fnAddData = function( data, redraw )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\t/* Check if we want to add multiple rows or not */\r\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\r\n\t\t\tapi.rows.add( data ) :\r\n\t\t\tapi.row.add( data );\r\n\t\r\n\t\tif ( redraw === undefined || redraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\r\n\t\treturn rows.flatten().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This function will make DataTables recalculate the column sizes, based on the data\r\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\r\n\t * through the sWidth parameter). This can be useful when the width of the table's\r\n\t * parent element changes (for example a window resize).\r\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable( {\r\n\t *        \"sScrollY\": \"200px\",\r\n\t *        \"bPaginate\": false\r\n\t *      } );\r\n\t *\r\n\t *      $(window).on('resize', function () {\r\n\t *        oTable.fnAdjustColumnSizing();\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).columns.adjust();\r\n\t\tvar settings = api.settings()[0];\r\n\t\tvar scroll = settings.oScroll;\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw( false );\r\n\t\t}\r\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\r\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\r\n\t\t\t_fnScrollDraw( settings );\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Quickly and simply clear a table\r\n\t *  @param {bool} [bRedraw=true] redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\r\n\t *      oTable.fnClearTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnClearTable = function( bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).clear();\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * The exact opposite of 'opening' a row, this function will close any rows which\r\n\t * are currently 'open'.\r\n\t *  @param {node} nTr the table row to 'close'\r\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnClose = function( nTr )\r\n\t{\r\n\t\tthis.api( true ).row( nTr ).child.hide();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row for the table\r\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\r\n\t *    the TR element you want to delete\r\n\t *  @param {function|null} [callBack] Callback function\r\n\t *  @param {bool} [redraw=true] Redraw the table or not\r\n\t *  @returns {array} The row that was deleted\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Immediately remove the first row\r\n\t *      oTable.fnDeleteRow( 0 );\r\n\t *    } );\r\n\t */\r\n\tthis.fnDeleteRow = function( target, callback, redraw )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\tvar rows = api.rows( target );\r\n\t\tvar settings = rows.settings()[0];\r\n\t\tvar data = settings.aoData[ rows[0][0] ];\r\n\t\r\n\t\trows.remove();\r\n\t\r\n\t\tif ( callback ) {\r\n\t\t\tcallback.call( this, settings, data );\r\n\t\t}\r\n\t\r\n\t\tif ( redraw === undefined || redraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\r\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\r\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnDestroy();\r\n\t *    } );\r\n\t */\r\n\tthis.fnDestroy = function ( remove )\r\n\t{\r\n\t\tthis.api( true ).destroy( remove );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Redraw the table\r\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\r\n\t *      oTable.fnDraw();\r\n\t *    } );\r\n\t */\r\n\tthis.fnDraw = function( complete )\r\n\t{\r\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\r\n\t\t// into account the new data, but can hold position.\r\n\t\tthis.api( true ).draw( complete );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Filter the input based on data\r\n\t *  @param {string} sInput String to filter the table on\r\n\t *  @param {int|null} [iColumn] Column to limit filtering to\r\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\r\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\r\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\r\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sometime later - filter...\r\n\t *      oTable.fnFilter( 'test string' );\r\n\t *    } );\r\n\t */\r\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( iColumn === null || iColumn === undefined ) {\r\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n\t\t}\r\n\t\r\n\t\tapi.draw();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the data for the whole table, an individual row or an individual cell based on the\r\n\t * provided parameters.\r\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\r\n\t *    a TR node then the data source for the whole row will be returned. If given as a\r\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\r\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\r\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\r\n\t *  @param {int} [col] Optional column index that you want the data of.\r\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\r\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\r\n\t *    defined, only data for the designated cell is returned.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    // Row data\r\n\t *    $(document).ready(function() {\r\n\t *      oTable = $('#example').dataTable();\r\n\t *\r\n\t *      oTable.$('tr').click( function () {\r\n\t *        var data = oTable.fnGetData( this );\r\n\t *        // ... do something with the array / object of data for the row\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Individual cell data\r\n\t *    $(document).ready(function() {\r\n\t *      oTable = $('#example').dataTable();\r\n\t *\r\n\t *      oTable.$('td').click( function () {\r\n\t *        var sData = oTable.fnGetData( this );\r\n\t *        alert( 'The cell clicked on had the value of '+sData );\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetData = function( src, col )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( src !== undefined ) {\r\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\r\n\t\r\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\r\n\t\t\t\tapi.cell( src, col ).data() :\r\n\t\t\t\tapi.row( src ).data() || null;\r\n\t\t}\r\n\t\r\n\t\treturn api.data().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\r\n\t * typically want to use the '$' API method in preference to this as it is more\r\n\t * flexible.\r\n\t *  @param {int} [iRow] Optional row index for the TR element you want\r\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\r\n\t *    in the table's body, or iRow is defined, just the TR element requested.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Get the nodes from the table\r\n\t *      var nNodes = oTable.fnGetNodes( );\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetNodes = function( iRow )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\treturn iRow !== undefined ?\r\n\t\t\tapi.row( iRow ).node() :\r\n\t\t\tapi.rows().nodes().flatten().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the array indexes of a particular cell from it's DOM element\r\n\t * and column index including hidden columns\r\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\r\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\r\n\t *    if given as a cell, an array of [row index, column index (visible),\r\n\t *    column index (all)] is given.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      $('#example tbody td').click( function () {\r\n\t *        // Get the position of the current data from the node\r\n\t *        var aPos = oTable.fnGetPosition( this );\r\n\t *\r\n\t *        // Get the data array for this row\r\n\t *        var aData = oTable.fnGetData( aPos[0] );\r\n\t *\r\n\t *        // Update the data array and return the value\r\n\t *        aData[ aPos[1] ] = 'clicked';\r\n\t *        this.innerHTML = 'clicked';\r\n\t *      } );\r\n\t *\r\n\t *      // Init DataTables\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetPosition = function( node )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\tvar nodeName = node.nodeName.toUpperCase();\r\n\t\r\n\t\tif ( nodeName == 'TR' ) {\r\n\t\t\treturn api.row( node ).index();\r\n\t\t}\r\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\r\n\t\t\tvar cell = api.cell( node ).index();\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tcell.row,\r\n\t\t\t\tcell.columnVisible,\r\n\t\t\t\tcell.column\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Check to see if a row is 'open' or not.\r\n\t *  @param {node} nTr the table row to check\r\n\t *  @returns {boolean} true if the row is currently open, false otherwise\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnIsOpen = function( nTr )\r\n\t{\r\n\t\treturn this.api( true ).row( nTr ).child.isShown();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This function will place a new row directly after a row which is currently\r\n\t * on display on the page, with the HTML contents that is passed into the\r\n\t * function. This can be used, for example, to ask for confirmation that a\r\n\t * particular record should be deleted.\r\n\t *  @param {node} nTr The table row to 'open'\r\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\r\n\t *  @param {string} sClass Class to give the new TD cell\r\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\r\n\t *    first parameter, is not found in the table, this method will silently\r\n\t *    return.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnOpen = function( nTr, mHtml, sClass )\r\n\t{\r\n\t\treturn this.api( true )\r\n\t\t\t.row( nTr )\r\n\t\t\t.child( mHtml, sClass )\r\n\t\t\t.show()\r\n\t\t\t.child()[0];\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Change the pagination - provides the internal logic for pagination in a simple API\r\n\t * function. With this function you can have a DataTables table go to the next,\r\n\t * previous, first or last pages.\r\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\r\n\t *    or page number to jump to (integer), note that page 0 is the first page.\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnPageChange( 'next' );\r\n\t *    } );\r\n\t */\r\n\tthis.fnPageChange = function ( mAction, bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).page( mAction );\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw(false);\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Show a particular column\r\n\t *  @param {int} iCol The column whose display should be changed\r\n\t *  @param {bool} bShow Show (true) or hide (false) the column\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Hide the second column after initialisation\r\n\t *      oTable.fnSetColumnVis( 1, false );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.columns.adjust().draw();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the settings for a particular table for external manipulation\r\n\t *  @returns {object} DataTables settings object. See\r\n\t *    {@link DataTable.models.oSettings}\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      var oSettings = oTable.fnSettings();\r\n\t *\r\n\t *      // Show an example parameter from the settings\r\n\t *      alert( oSettings._iDisplayStart );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSettings = function()\r\n\t{\r\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sort the table by a particular column\r\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\r\n\t *    'display index' if you have hidden data entries\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sort immediately with columns 0 and 1\r\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSort = function( aaSort )\r\n\t{\r\n\t\tthis.api( true ).order( aaSort ).draw();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Attach a sort listener to an element for a given column\r\n\t *  @param {node} nNode the element to attach the sort listener to\r\n\t *  @param {int} iColumn the column that a click on this node will sort on\r\n\t *  @param {function} [fnCallback] callback function when sort is run\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sort on column 1, when 'sorter' is clicked on\r\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\r\n\t{\r\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Update a table cell or row - this method will accept either a single value to\r\n\t * update the cell with, an array of values with one element for each column or\r\n\t * an object in the same format as the original data source. The function is\r\n\t * self-referencing in order to make the multi column updates easier.\r\n\t *  @param {object|array|string} mData Data to update the cell/row with\r\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\r\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\r\n\t *    update a whole row.\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\r\n\t *  @returns {int} 0 on success, 1 on error\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\r\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\r\n\t *    } );\r\n\t */\r\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( iColumn === undefined || iColumn === null ) {\r\n\t\t\tapi.row( mRow ).data( mData );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\r\n\t\t}\r\n\t\r\n\t\tif ( bAction === undefined || bAction ) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\r\n\t * to ensure compatibility.\r\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\r\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\r\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\r\n\t *    version, or false if this version of DataTales is not suitable\r\n\t *  @method\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\r\n\t *    } );\r\n\t */\r\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\r\n\t\r\n\r\n\tvar _that = this;\r\n\tvar emptyInit = options === undefined;\r\n\tvar len = this.length;\r\n\r\n\tif ( emptyInit ) {\r\n\t\toptions = {};\r\n\t}\r\n\r\n\tthis.oApi = this.internal = _ext.internal;\r\n\r\n\t// Extend with old style plug-in API methods\r\n\tfor ( var fn in DataTable.ext.internal ) {\r\n\t\tif ( fn ) {\r\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.each(function() {\r\n\t\t// For each initialisation we want to give it a clean initialisation\r\n\t\t// object that can be bashed around\r\n\t\tvar o = {};\r\n\t\tvar oInit = len > 1 ? // optimisation for single table case\r\n\t\t\t_fnExtend( o, options, true ) :\r\n\t\t\toptions;\r\n\r\n\t\t/*global oInit,_that,emptyInit*/\r\n\t\tvar i=0, iLen, j, jLen, k, kLen;\r\n\t\tvar sId = this.getAttribute( 'id' );\r\n\t\tvar bInitHandedOff = false;\r\n\t\tvar defaults = DataTable.defaults;\r\n\t\tvar $this = $(this);\r\n\t\t\r\n\t\t\r\n\t\t/* Sanity check */\r\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\r\n\t\t{\r\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/* Backwards compatibility for the defaults */\r\n\t\t_fnCompatOpts( defaults );\r\n\t\t_fnCompatCols( defaults.column );\r\n\t\t\r\n\t\t/* Convert the camel-case defaults to Hungarian */\r\n\t\t_fnCamelToHungarian( defaults, defaults, true );\r\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\r\n\t\t\r\n\t\t/* Setting up the initialisation object */\r\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/* Check to see if we are re-initialising a table */\r\n\t\tvar allSettings = DataTable.settings;\r\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tvar s = allSettings[i];\r\n\t\t\r\n\t\t\t/* Base check on table node */\r\n\t\t\tif (\r\n\t\t\t\ts.nTable == this ||\r\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\r\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\r\n\t\t\t) {\r\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\r\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\r\n\t\t\r\n\t\t\t\tif ( emptyInit || bRetrieve )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn s.oInstance;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( bDestroy )\r\n\t\t\t\t{\r\n\t\t\t\t\ts.oInstance.fnDestroy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\r\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\r\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\r\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\r\n\t\t\t */\r\n\t\t\tif ( s.sTableId == this.id )\r\n\t\t\t{\r\n\t\t\t\tallSettings.splice( i, 1 );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/* Ensure the table has an ID - required for accessibility */\r\n\t\tif ( sId === null || sId === \"\" )\r\n\t\t{\r\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\r\n\t\t\tthis.id = sId;\r\n\t\t}\r\n\t\t\r\n\t\t/* Create the settings object for this table and set some of the default parameters */\r\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\r\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\r\n\t\t\t\"sInstance\":     sId,\r\n\t\t\t\"sTableId\":      sId\r\n\t\t} );\r\n\t\toSettings.nTable = this;\r\n\t\toSettings.oApi   = _that.internal;\r\n\t\toSettings.oInit  = oInit;\r\n\t\t\r\n\t\tallSettings.push( oSettings );\r\n\t\t\r\n\t\t// Need to add the instance after the instance after the settings object has been added\r\n\t\t// to the settings array, so we can self reference the table instance if more than one\r\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\r\n\t\t\r\n\t\t// Backwards compatibility, before we apply all the defaults\r\n\t\t_fnCompatOpts( oInit );\r\n\t\t_fnLanguageCompat( oInit.oLanguage );\r\n\t\t\r\n\t\t// If the length menu is given, but the init display length is not, use the length menu\r\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\r\n\t\t{\r\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\r\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\r\n\t\t}\r\n\t\t\r\n\t\t// Apply the defaults and init options to make a single init object will all\r\n\t\t// options defined from defaults and instance options.\r\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\r\n\t\t\r\n\t\t\r\n\t\t// Map the initialisation options onto the settings object\r\n\t\t_fnMap( oSettings.oFeatures, oInit, [\r\n\t\t\t\"bPaginate\",\r\n\t\t\t\"bLengthChange\",\r\n\t\t\t\"bFilter\",\r\n\t\t\t\"bSort\",\r\n\t\t\t\"bSortMulti\",\r\n\t\t\t\"bInfo\",\r\n\t\t\t\"bProcessing\",\r\n\t\t\t\"bAutoWidth\",\r\n\t\t\t\"bSortClasses\",\r\n\t\t\t\"bServerSide\",\r\n\t\t\t\"bDeferRender\"\r\n\t\t] );\r\n\t\t_fnMap( oSettings, oInit, [\r\n\t\t\t\"asStripeClasses\",\r\n\t\t\t\"ajax\",\r\n\t\t\t\"fnServerData\",\r\n\t\t\t\"fnFormatNumber\",\r\n\t\t\t\"sServerMethod\",\r\n\t\t\t\"aaSorting\",\r\n\t\t\t\"aaSortingFixed\",\r\n\t\t\t\"aLengthMenu\",\r\n\t\t\t\"sPaginationType\",\r\n\t\t\t\"sAjaxSource\",\r\n\t\t\t\"sAjaxDataProp\",\r\n\t\t\t\"iStateDuration\",\r\n\t\t\t\"sDom\",\r\n\t\t\t\"bSortCellsTop\",\r\n\t\t\t\"iTabIndex\",\r\n\t\t\t\"fnStateLoadCallback\",\r\n\t\t\t\"fnStateSaveCallback\",\r\n\t\t\t\"renderer\",\r\n\t\t\t\"searchDelay\",\r\n\t\t\t\"rowId\",\r\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\r\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\r\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\r\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oScroll, oInit, [\r\n\t\t\t[ \"sScrollX\", \"sX\" ],\r\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\r\n\t\t\t[ \"sScrollY\", \"sY\" ],\r\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\r\n\t\t\r\n\t\t/* Callback functions which are array driven */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\r\n\t\t\r\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\r\n\t\t\r\n\t\t/* Browser support detection */\r\n\t\t_fnBrowserDetect( oSettings );\r\n\t\t\r\n\t\tvar oClasses = oSettings.oClasses;\r\n\t\t\r\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\r\n\t\t$this.addClass( oClasses.sTable );\r\n\t\t\r\n\t\t\r\n\t\tif ( oSettings.iInitDisplayStart === undefined )\r\n\t\t{\r\n\t\t\t/* Display start point, taking into account the save saving */\r\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\r\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\r\n\t\t}\r\n\t\t\r\n\t\tif ( oInit.iDeferLoading !== null )\r\n\t\t{\r\n\t\t\toSettings.bDeferLoading = true;\r\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\r\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\r\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\r\n\t\t}\r\n\t\t\r\n\t\t/* Language definitions */\r\n\t\tvar oLanguage = oSettings.oLanguage;\r\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\r\n\t\t\r\n\t\tif ( oLanguage.sUrl )\r\n\t\t{\r\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\r\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\r\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\r\n\t\t\t */\r\n\t\t\t$.ajax( {\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\turl: oLanguage.sUrl,\r\n\t\t\t\tsuccess: function ( json ) {\r\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\r\n\t\t\t\t\t_fnLanguageCompat( json );\r\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\r\n\t\t\r\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t},\r\n\t\t\t\terror: function () {\r\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tbInitHandedOff = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Stripes\r\n\t\t */\r\n\t\tif ( oInit.asStripeClasses === null )\r\n\t\t{\r\n\t\t\toSettings.asStripeClasses =[\r\n\t\t\t\toClasses.sStripeOdd,\r\n\t\t\t\toClasses.sStripeEven\r\n\t\t\t];\r\n\t\t}\r\n\t\t\r\n\t\t/* Remove row stripe classes if they are already on the table row */\r\n\t\tvar stripeClasses = oSettings.asStripeClasses;\r\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\r\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\r\n\t\t\treturn rowOne.hasClass(el);\r\n\t\t} ) ) !== -1 ) {\r\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\r\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Columns\r\n\t\t * See if we should load columns automatically or use defined ones\r\n\t\t */\r\n\t\tvar anThs = [];\r\n\t\tvar aoColumnsInit;\r\n\t\tvar nThead = this.getElementsByTagName('thead');\r\n\t\tif ( nThead.length !== 0 )\r\n\t\t{\r\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\r\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\r\n\t\t}\r\n\t\t\r\n\t\t/* If not given a column array, generate one with nulls */\r\n\t\tif ( oInit.aoColumns === null )\r\n\t\t{\r\n\t\t\taoColumnsInit = [];\r\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\r\n\t\t\t{\r\n\t\t\t\taoColumnsInit.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\taoColumnsInit = oInit.aoColumns;\r\n\t\t}\r\n\t\t\r\n\t\t/* Add the columns */\r\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\r\n\t\t}\r\n\t\t\r\n\t\t/* Apply the column definitions */\r\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\r\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\r\n\t\t} );\r\n\t\t\r\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\r\n\t\t * attributes are found\r\n\t\t */\r\n\t\tif ( rowOne.length ) {\r\n\t\t\tvar a = function ( cell, name ) {\r\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\r\n\t\t\t};\r\n\t\t\r\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\r\n\t\t\t\tvar col = oSettings.aoColumns[i];\r\n\t\t\r\n\t\t\t\tif (! col) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tif ( col.mData === i ) {\r\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\r\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\r\n\t\t\r\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\r\n\t\t\t\t\t\tcol.mData = {\r\n\t\t\t\t\t\t\t_:      i+'.display',\r\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcol._isArrayHost = true;\r\n\t\t\r\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\t\r\n\t\tvar features = oSettings.oFeatures;\r\n\t\tvar loadedInit = function () {\r\n\t\t\t/*\r\n\t\t\t * Sorting\r\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\r\n\t\t\t */\r\n\t\t\r\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\r\n\t\t\t// in case that has been altered, so the default sort reflects that option\r\n\t\t\tif ( oInit.aaSorting === undefined ) {\r\n\t\t\t\tvar sorting = oSettings.aaSorting;\r\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\r\n\t\t\t * account, and also will apply sorting disabled classes if disabled\r\n\t\t\t */\r\n\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\r\n\t\t\tif ( features.bSort ) {\r\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\t\t\tif ( oSettings.bSorted ) {\r\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\r\n\t\t\t\t\t\tvar sortedColumns = {};\r\n\t\t\r\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\r\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\r\n\t\t\t\t\t\t} );\r\n\t\t\r\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\r\n\t\t\t\t\t\t_fnSortAria( oSettings );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\r\n\t\t\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\t\t}\r\n\t\t\t}, 'sc' );\r\n\t\t\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t * Final init\r\n\t\t\t * Cache the header, body and footer as required, creating them if needed\r\n\t\t\t */\r\n\t\t\r\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\r\n\t\t\tvar captions = $this.children('caption').each( function () {\r\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\r\n\t\t\t} );\r\n\t\t\r\n\t\t\tvar thead = $this.children('thead');\r\n\t\t\tif ( thead.length === 0 ) {\r\n\t\t\t\tthead = $('<thead/>').appendTo($this);\r\n\t\t\t}\r\n\t\t\toSettings.nTHead = thead[0];\r\n\t\t\r\n\t\t\tvar tbody = $this.children('tbody');\r\n\t\t\tif ( tbody.length === 0 ) {\r\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\r\n\t\t\t}\r\n\t\t\toSettings.nTBody = tbody[0];\r\n\t\t\r\n\t\t\tvar tfoot = $this.children('tfoot');\r\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\r\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\r\n\t\t\t\t// a tfoot element for the caption element to be appended to\r\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\r\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\r\n\t\t\t}\r\n\t\t\telse if ( tfoot.length > 0 ) {\r\n\t\t\t\toSettings.nTFoot = tfoot[0];\r\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Check if there is data passing into the constructor */\r\n\t\t\tif ( oInit.aaData ) {\r\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\r\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\r\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\r\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\r\n\t\t\t\t * to replace it with Ajax data\r\n\t\t\t\t */\r\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Copy the data index array */\r\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\r\n\t\t\r\n\t\t\t/* Initialisation complete - table can be drawn */\r\n\t\t\toSettings.bInitialised = true;\r\n\t\t\r\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\r\n\t\t\t * language processor)\r\n\t\t\t */\r\n\t\t\tif ( bInitHandedOff === false ) {\r\n\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/* Must be done after everything which can be overridden by the state saving! */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\r\n\t\t\r\n\t\tif ( oInit.bStateSave )\r\n\t\t{\r\n\t\t\tfeatures.bStateSave = true;\r\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tloadedInit();\r\n\t\t}\r\n\t\t\r\n\t} );\r\n\t_that = null;\r\n\treturn this;\r\n};\r\n\r\n\r\n/*\r\n * It is useful to have variables which are scoped locally so only the\r\n * DataTables functions can access them and they don't leak into global space.\r\n * At the same time these functions are often useful over multiple files in the\r\n * core and API, so we list, or at least document, all variables which are used\r\n * by DataTables as private variables here. This also ensures that there is no\r\n * clashing of variable names and that they can easily referenced for reuse.\r\n */\r\n\r\n\r\n// Defined else where\r\n//  _selector_run\r\n//  _selector_opts\r\n//  _selector_first\r\n//  _selector_row_indexes\r\n\r\nvar _ext; // DataTable.ext\r\nvar _Api; // DataTable.Api\r\nvar _api_register; // DataTable.Api.register\r\nvar _api_registerPlural; // DataTable.Api.registerPlural\r\n\r\nvar _re_dic = {};\r\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\r\nvar _re_html = /<.*?>/g;\r\n\r\n// This is not strict ISO8601 - Date.parse() is quite lax, although\r\n// implementations differ between browsers.\r\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\r\n\r\n// Escape regular expression special characters\r\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\r\n\r\n// http://en.wikipedia.org/wiki/Foreign_exchange_market\r\n// - \\u20BD - Russian ruble.\r\n// - \\u20a9 - South Korean Won\r\n// - \\u20BA - Turkish Lira\r\n// - \\u20B9 - Indian Rupee\r\n// - R - Brazil (R$) and South Africa\r\n// - fr - Swiss Franc\r\n// - kr - Swedish krona, Norwegian krone and Danish krone\r\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\r\n// - É - Bitcoin\r\n// - Î - Ethereum\r\n//   standards as thousands separators.\r\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\r\n\r\n\r\nvar _empty = function ( d ) {\r\n\treturn !d || d === true || d === '-' ? true : false;\r\n};\r\n\r\n\r\nvar _intVal = function ( s ) {\r\n\tvar integer = parseInt( s, 10 );\r\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\r\n};\r\n\r\n// Convert from a formatted number with characters other than `.` as the\r\n// decimal place, to a Javascript number\r\nvar _numToDecimal = function ( num, decimalPoint ) {\r\n\t// Cache created regular expressions for speed as this function is called often\r\n\tif ( ! _re_dic[ decimalPoint ] ) {\r\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\r\n\t}\r\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\r\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\r\n\t\tnum;\r\n};\r\n\r\n\r\nvar _isNumber = function ( d, decimalPoint, formatted ) {\r\n\tlet type = typeof d;\r\n\tvar strType = type === 'string';\r\n\r\n\tif ( type === 'number' || type === 'bigint') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// If empty return immediately so there must be a number if it is a\r\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\r\n\t// as a formatted number for currency\r\n\tif ( _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( decimalPoint && strType ) {\r\n\t\td = _numToDecimal( d, decimalPoint );\r\n\t}\r\n\r\n\tif ( formatted && strType ) {\r\n\t\td = d.replace( _re_formatted_numeric, '' );\r\n\t}\r\n\r\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\r\n};\r\n\r\n\r\n// A string without HTML in it can be considered to be HTML still\r\nvar _isHtml = function ( d ) {\r\n\treturn _empty( d ) || typeof d === 'string';\r\n};\r\n\r\n\r\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\r\n\tif ( _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar html = _isHtml( d );\r\n\treturn ! html ?\r\n\t\tnull :\r\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\r\n\t\t\ttrue :\r\n\t\t\tnull;\r\n};\r\n\r\n\r\nvar _pluck = function ( a, prop, prop2 ) {\r\n\tvar out = [];\r\n\tvar i=0, ien=a.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] && a[i][ prop ] ) {\r\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] ) {\r\n\t\t\t\tout.push( a[i][ prop ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\r\n// as the indexes to pick from `a`\r\nvar _pluck_order = function ( a, order, prop, prop2 )\r\n{\r\n\tvar out = [];\r\n\tvar i=0, ien=order.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[ order[i] ][ prop ] ) {\r\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tout.push( a[ order[i] ][ prop ] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _range = function ( len, start )\r\n{\r\n\tvar out = [];\r\n\tvar end;\r\n\r\n\tif ( start === undefined ) {\r\n\t\tstart = 0;\r\n\t\tend = len;\r\n\t}\r\n\telse {\r\n\t\tend = start;\r\n\t\tstart = len;\r\n\t}\r\n\r\n\tfor ( var i=start ; i<end ; i++ ) {\r\n\t\tout.push( i );\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _removeEmpty = function ( a )\r\n{\r\n\tvar out = [];\r\n\r\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\r\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\r\n\t\t\tout.push( a[i] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _stripHtml = function ( d ) {\r\n\treturn d.replace( _re_html, '' );\r\n};\r\n\r\n\r\n/**\r\n * Determine if all values in the array are unique. This means we can short\r\n * cut the _unique method at the cost of a single loop. A sorted array is used\r\n * to easily check the values.\r\n *\r\n * @param  {array} src Source array\r\n * @return {boolean} true if all unique, false otherwise\r\n * @ignore\r\n */\r\nvar _areAllUnique = function ( src ) {\r\n\tif ( src.length < 2 ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar sorted = src.slice().sort();\r\n\tvar last = sorted[0];\r\n\r\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\r\n\t\tif ( sorted[i] === last ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlast = sorted[i];\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Find the unique elements in a source array.\r\n *\r\n * @param  {array} src Source array\r\n * @return {array} Array of unique items\r\n * @ignore\r\n */\r\nvar _unique = function ( src )\r\n{\r\n\tif ( _areAllUnique( src ) ) {\r\n\t\treturn src.slice();\r\n\t}\r\n\r\n\t// A faster unique method is to use object keys to identify used values,\r\n\t// but this doesn't work with arrays or objects, which we must also\r\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\r\n\t// information.\r\n\tvar\r\n\t\tout = [],\r\n\t\tval,\r\n\t\ti, ien=src.length,\r\n\t\tj, k=0;\r\n\r\n\tagain: for ( i=0 ; i<ien ; i++ ) {\r\n\t\tval = src[i];\r\n\r\n\t\tfor ( j=0 ; j<k ; j++ ) {\r\n\t\t\tif ( out[j] === val ) {\r\n\t\t\t\tcontinue again;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tout.push( val );\r\n\t\tk++;\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n// Surprisingly this is faster than [].concat.apply\r\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\r\nvar _flatten = function (out, val) {\r\n\tif (Array.isArray(val)) {\r\n\t\tfor (var i=0 ; i<val.length ; i++) {\r\n\t\t\t_flatten(out, val[i]);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tout.push(val);\r\n\t}\r\n  \r\n\treturn out;\r\n}\r\n\r\nvar _includes = function (search, start) {\r\n\tif (start === undefined) {\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\treturn this.indexOf(search, start) !== -1;\t\r\n};\r\n\r\n// Array.isArray polyfill.\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\r\nif (! Array.isArray) {\r\n    Array.isArray = function(arg) {\r\n        return Object.prototype.toString.call(arg) === '[object Array]';\r\n    };\r\n}\r\n\r\nif (! Array.prototype.includes) {\r\n\tArray.prototype.includes = _includes;\r\n}\r\n\r\n// .trim() polyfill\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function () {\r\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n  };\r\n}\r\n\r\nif (! String.prototype.includes) {\r\n\tString.prototype.includes = _includes;\r\n}\r\n\r\n/**\r\n * DataTables utility methods\r\n * \r\n * This namespace provides helper methods that DataTables uses internally to\r\n * create a DataTable, but which are not exclusively used only for DataTables.\r\n * These methods can be used by extension authors to save the duplication of\r\n * code.\r\n *\r\n *  @namespace\r\n */\r\nDataTable.util = {\r\n\t/**\r\n\t * Throttle the calls to a function. Arguments and context are maintained\r\n\t * for the throttled function.\r\n\t *\r\n\t * @param {function} fn Function to be called\r\n\t * @param {integer} freq Call frequency in mS\r\n\t * @return {function} Wrapped function\r\n\t */\r\n\tthrottle: function ( fn, freq ) {\r\n\t\tvar\r\n\t\t\tfrequency = freq !== undefined ? freq : 200,\r\n\t\t\tlast,\r\n\t\t\ttimer;\r\n\r\n\t\treturn function () {\r\n\t\t\tvar\r\n\t\t\t\tthat = this,\r\n\t\t\t\tnow  = +new Date(),\r\n\t\t\t\targs = arguments;\r\n\r\n\t\t\tif ( last && now < last + frequency ) {\r\n\t\t\t\tclearTimeout( timer );\r\n\r\n\t\t\t\ttimer = setTimeout( function () {\r\n\t\t\t\t\tlast = undefined;\r\n\t\t\t\t\tfn.apply( that, args );\r\n\t\t\t\t}, frequency );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlast = now;\r\n\t\t\t\tfn.apply( that, args );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Escape a string such that it can be used in a regular expression\r\n\t *\r\n\t *  @param {string} val string to escape\r\n\t *  @returns {string} escaped string\r\n\t */\r\n\tescapeRegex: function ( val ) {\r\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will write to a nested object or array\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Write function\r\n\t */\r\n\tset: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\r\n\t\t\t * setting data since we don't know the type here. This is why an object\r\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\r\n\t\t\t * for `mRender` which is read only.\r\n\t\t\t */\r\n\t\t\treturn DataTable.util.set( source._ );\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Nothing to do when the data source is null\r\n\t\t\treturn function () {};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, val, meta) {\r\n\t\t\t\tsource( data, 'set', val, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\r\n\t\t{\r\n\t\t\t// Like the get, we need to get data from a nested object\r\n\t\t\tvar setData = function (data, val, src) {\r\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\r\n\t\t\t\tvar aLast = a[a.length-1];\r\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\r\n\t\r\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\r\n\t\t\t\t\t// Protect against prototype pollution\r\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\r\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if we are dealing with an array notation request\r\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\t\t\t\t\tdata[ a[i] ] = [];\r\n\t\r\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\r\n\t\t\t\t\t\tb = a.slice();\r\n\t\t\t\t\t\tb.splice( 0, i+1 );\r\n\t\t\t\t\t\tinnerSrc = b.join('.');\r\n\t\r\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\r\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\to = {};\r\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\r\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\r\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\r\n\t\t\t\t\t\t\t// is to just save the value.\r\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\r\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\r\n\t\t\t\t\t// trying to set the value - create it\r\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\tdata[ a[i] ] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Last item in the input - i.e, the actual set\r\n\t\t\t\tif ( aLast.match(__reFn ) ) {\r\n\t\t\t\t\t// Function call\r\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\r\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\r\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\treturn setData( data, val, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\tdata[source] = val;\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will read nested objects from arrays, based on JSON notation\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Value read\r\n\t */\r\n\tget: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t// Build an object of get functions, and wrap them in a single call\r\n\t\t\tvar o = {};\r\n\t\t\t$.each( source, function (key, val) {\r\n\t\t\t\tif ( val ) {\r\n\t\t\t\t\to[key] = DataTable.util.get( val );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\tvar t = o[type] || o._;\r\n\t\t\t\treturn t !== undefined ?\r\n\t\t\t\t\tt(data, type, row, meta) :\r\n\t\t\t\t\tdata;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Give an empty string for rendering / sorting etc\r\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\treturn source( data, type, row, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\r\n\t\t{\r\n\t\t\t/* If there is a . in the source string then the data source is in a\r\n\t\t\t * nested object so we loop over the data for each level to get the next\r\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\r\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\r\n\t\t\t * be used if defined, rather than throwing an error\r\n\t\t\t */\r\n\t\t\tvar fetchData = function (data, type, src) {\r\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\r\n\t\r\n\t\t\t\tif ( src !== \"\" ) {\r\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\r\n\t\r\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\t\t// Check if we are dealing with special notation\r\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\t\t// Array notation\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\r\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\r\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\r\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tout = [];\r\n\t\r\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\r\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\r\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\r\n\t\r\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\r\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\r\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\r\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\r\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\r\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\r\n\t\r\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\r\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn fetchData( data, type, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn data[source];\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n\r\n/**\r\n * Create a mapping object that allows camel case parameters to be looked up\r\n * for their Hungarian counterparts. The mapping is stored in a private\r\n * parameter called `_hungarianMap` which can be accessed on the source object.\r\n *  @param {object} o\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnHungarianMap ( o )\r\n{\r\n\tvar\r\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\r\n\t\tmatch,\r\n\t\tnewKey,\r\n\t\tmap = {};\r\n\r\n\t$.each( o, function (key, val) {\r\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\r\n\r\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\r\n\t\t{\r\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\r\n\t\t\tmap[ newKey ] = key;\r\n\r\n\t\t\tif ( match[1] === 'o' )\r\n\t\t\t{\r\n\t\t\t\t_fnHungarianMap( o[key] );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\to._hungarianMap = map;\r\n}\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\r\n * created by _fnHungarianMap.\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCamelToHungarian ( src, user, force )\r\n{\r\n\tif ( ! src._hungarianMap ) {\r\n\t\t_fnHungarianMap( src );\r\n\t}\r\n\r\n\tvar hungarianKey;\r\n\r\n\t$.each( user, function (key, val) {\r\n\t\thungarianKey = src._hungarianMap[ key ];\r\n\r\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\r\n\t\t{\r\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\r\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\r\n\t\t\t{\r\n\t\t\t\t// Copy the camelCase options over to the hungarian\r\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\r\n\t\t\t\t\tuser[ hungarianKey ] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\r\n\r\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tuser[hungarianKey] = user[ key ];\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Language compatibility - when certain options are given, and others aren't, we\r\n * need to duplicate the values over, in order to provide backwards compatibility\r\n * with older language files.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLanguageCompat( lang )\r\n{\r\n\t// Note the use of the Hungarian notation for the parameters in this method as\r\n\t// this is called after the mapping of camelCase to Hungarian\r\n\tvar defaults = DataTable.defaults.oLanguage;\r\n\r\n\t// Default mapping\r\n\tvar defaultDecimal = defaults.sDecimal;\r\n\tif ( defaultDecimal ) {\r\n\t\t_addNumericSort( defaultDecimal );\r\n\t}\r\n\r\n\tif ( lang ) {\r\n\t\tvar zeroRecords = lang.sZeroRecords;\r\n\r\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\r\n\t\t// sZeroRecords - assuming that is given.\r\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\r\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\r\n\t\t{\r\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\r\n\t\t}\r\n\r\n\t\t// Likewise with loading records\r\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\r\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\r\n\t\t{\r\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\r\n\t\t}\r\n\r\n\t\t// Old parameter name of the thousands separator mapped onto the new\r\n\t\tif ( lang.sInfoThousands ) {\r\n\t\t\tlang.sThousands = lang.sInfoThousands;\r\n\t\t}\r\n\r\n\t\tvar decimal = lang.sDecimal;\r\n\t\tif ( decimal && defaultDecimal !== decimal ) {\r\n\t\t\t_addNumericSort( decimal );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Map one parameter onto another\r\n *  @param {object} o Object to map\r\n *  @param {*} knew The new parameter name\r\n *  @param {*} old The old parameter name\r\n */\r\nvar _fnCompatMap = function ( o, knew, old ) {\r\n\tif ( o[ knew ] !== undefined ) {\r\n\t\to[ old ] = o[ knew ];\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for the main DT options. Note that the new\r\n * options are mapped onto the old parameters, so this is an external interface\r\n * change only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatOpts ( init )\r\n{\r\n\t_fnCompatMap( init, 'ordering',      'bSort' );\r\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\r\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\r\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\r\n\t_fnCompatMap( init, 'order',         'aaSorting' );\r\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\r\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\r\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\r\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\r\n\t_fnCompatMap( init, 'searching',     'bFilter' );\r\n\r\n\t// Boolean initialisation of x-scrolling\r\n\tif ( typeof init.sScrollX === 'boolean' ) {\r\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\r\n\t}\r\n\tif ( typeof init.scrollX === 'boolean' ) {\r\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\r\n\t}\r\n\r\n\t// Column search objects are in an array, so it needs to be converted\r\n\t// element by element\r\n\tvar searchCols = init.aoSearchCols;\r\n\r\n\tif ( searchCols ) {\r\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\r\n\t\t\tif ( searchCols[i] ) {\r\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for column options. Note that the new options\r\n * are mapped onto the old parameters, so this is an external interface change\r\n * only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatCols ( init )\r\n{\r\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\r\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\r\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\r\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\r\n\r\n\t// orderData can be given as an integer\r\n\tvar dataSort = init.aDataSort;\r\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\r\n\t\tinit.aDataSort = [ dataSort ];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Browser feature detection for capabilities, quirks\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBrowserDetect( settings )\r\n{\r\n\t// We don't need to do this every time DataTables is constructed, the values\r\n\t// calculated are specific to the browser and OS configuration which we\r\n\t// don't expect to change between initialisations\r\n\tif ( ! DataTable.__browser ) {\r\n\t\tvar browser = {};\r\n\t\tDataTable.__browser = browser;\r\n\r\n\t\t// Scrolling feature / quirks detection\r\n\t\tvar n = $('<div/>')\r\n\t\t\t.css( {\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\r\n\t\t\t\theight: 1,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\toverflow: 'hidden'\r\n\t\t\t} )\r\n\t\t\t.append(\r\n\t\t\t\t$('<div/>')\r\n\t\t\t\t\t.css( {\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\ttop: 1,\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\toverflow: 'scroll'\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.append(\r\n\t\t\t\t\t\t$('<div/>')\r\n\t\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: 10\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.appendTo( 'body' );\r\n\r\n\t\tvar outer = n.children();\r\n\t\tvar inner = outer.children();\r\n\r\n\t\t// Numbers below, in order, are:\r\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\r\n\t\t//\r\n\t\t// IE6 XP:                           100 100 100  83\r\n\t\t// IE7 Vista:                        100 100 100  83\r\n\t\t// IE 8+ Windows:                     83  83 100  83\r\n\t\t// Evergreen Windows:                 83  83 100  83\r\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\r\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\r\n\r\n\t\t// Get scrollbar width\r\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\r\n\r\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\r\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\r\n\t\t// element is contained without forcing scrolling\r\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\r\n\r\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\r\n\t\t// scrollbar on the left, rather than the right.\r\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\r\n\r\n\t\t// IE8- don't provide height and width for getBoundingClientRect\r\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\r\n\r\n\t\tn.remove();\r\n\t}\r\n\r\n\t$.extend( settings.oBrowser, DataTable.__browser );\r\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\r\n}\r\n\r\n\r\n/**\r\n * Array.prototype reduce[Right] method, used for browsers which don't support\r\n * JS 1.6. Done this way to reduce code size, since we iterate either way\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReduce ( that, fn, init, start, end, inc )\r\n{\r\n\tvar\r\n\t\ti = start,\r\n\t\tvalue,\r\n\t\tisSet = false;\r\n\r\n\tif ( init !== undefined ) {\r\n\t\tvalue = init;\r\n\t\tisSet = true;\r\n\t}\r\n\r\n\twhile ( i !== end ) {\r\n\t\tif ( ! that.hasOwnProperty(i) ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalue = isSet ?\r\n\t\t\tfn( value, that[i], i, that ) :\r\n\t\t\tthat[i];\r\n\r\n\t\tisSet = true;\r\n\t\ti += inc;\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Add a column to the list used for the table with default values\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nTh The th element for this column\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddColumn( oSettings, nTh )\r\n{\r\n\t// Add column to aoColumns array\r\n\tvar oDefaults = DataTable.defaults.column;\r\n\tvar iCol = oSettings.aoColumns.length;\r\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\r\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\r\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\r\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\r\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\r\n\t\tidx: iCol\r\n\t} );\r\n\toSettings.aoColumns.push( oCol );\r\n\r\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\r\n\t// passed into extend can be undefined. This allows the user to give a default\r\n\t// with only some of the parameters defined, and also not give a default\r\n\tvar searchCols = oSettings.aoPreSearchCols;\r\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\r\n\r\n\t// Use the default column options function to initialise classes etc\r\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\r\n}\r\n\r\n\r\n/**\r\n * Apply options for a column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iCol column index to consider\r\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\r\n{\r\n\tvar oCol = oSettings.aoColumns[ iCol ];\r\n\tvar oClasses = oSettings.oClasses;\r\n\tvar th = $(oCol.nTh);\r\n\r\n\t// Try to get width information from the DOM. We can't get it from CSS\r\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\r\n\tif ( ! oCol.sWidthOrig ) {\r\n\t\t// Width attribute\r\n\t\toCol.sWidthOrig = th.attr('width') || null;\r\n\r\n\t\t// Style attribute\r\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\r\n\t\tif ( t ) {\r\n\t\t\toCol.sWidthOrig = t[1];\r\n\t\t}\r\n\t}\r\n\r\n\t/* User specified column options */\r\n\tif ( oOptions !== undefined && oOptions !== null )\r\n\t{\r\n\t\t// Backwards compatibility\r\n\t\t_fnCompatCols( oOptions );\r\n\r\n\t\t// Map camel case parameters to their Hungarian counterparts\r\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\r\n\r\n\t\t/* Backwards compatibility for mDataProp */\r\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\r\n\t\t{\r\n\t\t\toOptions.mData = oOptions.mDataProp;\r\n\t\t}\r\n\r\n\t\tif ( oOptions.sType )\r\n\t\t{\r\n\t\t\toCol._sManualType = oOptions.sType;\r\n\t\t}\r\n\r\n\t\t// `class` is a reserved word in Javascript, so we need to provide\r\n\t\t// the ability to use a valid name for the camel case input\r\n\t\tif ( oOptions.className && ! oOptions.sClass )\r\n\t\t{\r\n\t\t\toOptions.sClass = oOptions.className;\r\n\t\t}\r\n\t\tif ( oOptions.sClass ) {\r\n\t\t\tth.addClass( oOptions.sClass );\r\n\t\t}\r\n\r\n\t\tvar origClass = oCol.sClass;\r\n\r\n\t\t$.extend( oCol, oOptions );\r\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\r\n\r\n\t\t// Merge class from previously defined classes with this one, rather than just\r\n\t\t// overwriting it in the extend above\r\n\t\tif (origClass !== oCol.sClass) {\r\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\r\n\t\t}\r\n\r\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\r\n\t\t * priority if defined\r\n\t\t */\r\n\t\tif ( oOptions.iDataSort !== undefined )\r\n\t\t{\r\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\r\n\t\t}\r\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\r\n\t}\r\n\r\n\t/* Cache the data get and set functions for speed */\r\n\tvar mDataSrc = oCol.mData;\r\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\r\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\r\n\r\n\tvar attrTest = function( src ) {\r\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\r\n\t};\r\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\r\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\r\n\t);\r\n\toCol._setter = null;\r\n\r\n\toCol.fnGetData = function (rowData, type, meta) {\r\n\t\tvar innerData = mData( rowData, type, undefined, meta );\r\n\r\n\t\treturn mRender && type ?\r\n\t\t\tmRender( innerData, type, rowData, meta ) :\r\n\t\t\tinnerData;\r\n\t};\r\n\toCol.fnSetData = function ( rowData, val, meta ) {\r\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\r\n\t};\r\n\r\n\t// Indicate if DataTables should read DOM data as an object or array\r\n\t// Used in _fnGetRowElements\r\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\r\n\t\toSettings._rowReadObject = true;\r\n\t}\r\n\r\n\t/* Feature sorting overrides column specific when off */\r\n\tif ( !oSettings.oFeatures.bSort )\r\n\t{\r\n\t\toCol.bSortable = false;\r\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\r\n\t}\r\n\r\n\t/* Check that the class assignment is correct for sorting */\r\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\r\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\r\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableNone;\r\n\t\toCol.sSortingClassJUI = \"\";\r\n\t}\r\n\telse if ( bAsc && !bDesc )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\r\n\t}\r\n\telse if ( !bAsc && bDesc )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\r\n\t}\r\n\telse\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortable;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Adjust the table column widths for new data. Note: you would probably want to\r\n * do a redraw after calling this function!\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAdjustColumnSizing ( settings )\r\n{\r\n\t/* Not interested in doing column width calculation if auto-width is disabled */\r\n\tif ( settings.oFeatures.bAutoWidth !== false )\r\n\t{\r\n\t\tvar columns = settings.aoColumns;\r\n\r\n\t\t_fnCalculateColumnWidths( settings );\r\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tvar scroll = settings.oScroll;\r\n\tif ( scroll.sY !== '' || scroll.sX !== '')\r\n\t{\r\n\t\t_fnScrollDraw( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of a visible column to the index in the data array (take account\r\n * of hidden columns)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iMatch Visible column index to lookup\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\r\n\treturn typeof aiVis[iMatch] === 'number' ?\r\n\t\taiVis[iMatch] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of an index in the data array and convert it to the visible\r\n *   column index (take account of hidden columns)\r\n *  @param {int} iMatch Column index to lookup\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\tvar iPos = $.inArray( iMatch, aiVis );\r\n\r\n\treturn iPos !== -1 ? iPos : null;\r\n}\r\n\r\n\r\n/**\r\n * Get the number of visible columns\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the number of visible columns\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisbleColumns( oSettings )\r\n{\r\n\tvar vis = 0;\r\n\r\n\t// No reduce in IE8, use a loop for now\r\n\t$.each( oSettings.aoColumns, function ( i, col ) {\r\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\r\n\t\t\tvis++;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn vis;\r\n}\r\n\r\n\r\n/**\r\n * Get an array of column indexes that match a given property\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sParam Parameter in aoColumns to look for - typically\r\n *    bVisible or bSearchable\r\n *  @returns {array} Array of indexes with matched properties\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetColumns( oSettings, sParam )\r\n{\r\n\tvar a = [];\r\n\r\n\t$.map( oSettings.aoColumns, function(val, i) {\r\n\t\tif ( val[sParam] ) {\r\n\t\t\ta.push( i );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn a;\r\n}\r\n\r\n\r\n/**\r\n * Calculate the 'type' of a column\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnTypes ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar data = settings.aoData;\r\n\tvar types = DataTable.ext.type.detect;\r\n\tvar i, ien, j, jen, k, ken;\r\n\tvar col, cell, detectedType, cache;\r\n\r\n\t// For each column, spin over the \r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcol = columns[i];\r\n\t\tcache = [];\r\n\r\n\t\tif ( ! col.sType && col._sManualType ) {\r\n\t\t\tcol.sType = col._sManualType;\r\n\t\t}\r\n\t\telse if ( ! col.sType ) {\r\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\r\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\r\n\t\t\t\t\t// Use a cache array so we only need to get the type data\r\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\r\n\t\t\t\t\tif ( cache[k] === undefined ) {\r\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\r\n\r\n\t\t\t\t\t// If null, then this type can't apply to this column, so\r\n\t\t\t\t\t// rather than testing all cells, break out. There is an\r\n\t\t\t\t\t// exception for the last type which is `html`. We need to\r\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\r\n\t\t\t\t\t// types\r\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only a single match is needed for html type since it is\r\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\r\n\t\t\t\t\t// must not be empty\r\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Type is valid for all data points in the column - use this\r\n\t\t\t\t// type\r\n\t\t\t\tif ( detectedType ) {\r\n\t\t\t\t\tcol.sType = detectedType;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fall back - if no type was detected, always use string\r\n\t\t\tif ( ! col.sType ) {\r\n\t\t\t\tcol.sType = 'string';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Take the column definitions and static columns arrays and calculate how\r\n * they relate to column indexes. The callback function will then apply the\r\n * definition found for a column to a suitable configuration object.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\r\n *  @param {array} aoCols The aoColumns array that defines columns individually\r\n *  @param {function} fn Callback function - takes two parameters, the calculated\r\n *    column index and the definition for that column.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, def;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\t// Column definitions with aTargets\r\n\tif ( aoColDefs )\r\n\t{\r\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\r\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\r\n\t\t{\r\n\t\t\tdef = aoColDefs[i];\r\n\r\n\t\t\t/* Each definition can target multiple columns, as it is an array */\r\n\t\t\tvar aTargets = def.target !== undefined\r\n\t\t\t\t? def.target\r\n\t\t\t\t: def.targets !== undefined\r\n\t\t\t\t\t? def.targets\r\n\t\t\t\t\t: def.aTargets;\r\n\r\n\t\t\tif ( ! Array.isArray( aTargets ) )\r\n\t\t\t{\r\n\t\t\t\taTargets = [ aTargets ];\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Add columns that we don't yet know about */\r\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_fnAddColumn( oSettings );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* Integer, basic index */\r\n\t\t\t\t\tfn( aTargets[j], def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Negative integer, right to left column counting */\r\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Class name matching on TH element */\r\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\r\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfn( k, def );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Statically defined columns array\r\n\tif ( aoCols )\r\n\t{\r\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tfn( i, aoCols[i] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a data array to the table, creating DOM node etc. This is the parallel to\r\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\r\n * DOM source.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aData data array to be added\r\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\r\n{\r\n\t/* Create the object for storing information about this new row */\r\n\tvar iRow = oSettings.aoData.length;\r\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\r\n\t\tsrc: nTr ? 'dom' : 'data',\r\n\t\tidx: iRow\r\n\t} );\r\n\r\n\toData._aData = aDataIn;\r\n\toSettings.aoData.push( oData );\r\n\r\n\t/* Create the cells */\r\n\tvar nTd, sThisType;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\t// Invalidate the column types as the new data needs to be revalidated\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tcolumns[i].sType = null;\r\n\t}\r\n\r\n\t/* Add to the display array */\r\n\toSettings.aiDisplayMaster.push( iRow );\r\n\r\n\tvar id = oSettings.rowIdFn( aDataIn );\r\n\tif ( id !== undefined ) {\r\n\t\toSettings.aIds[ id ] = oData;\r\n\t}\r\n\r\n\t/* Create the DOM information, or register it if already present */\r\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\r\n\t{\r\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\r\n\t}\r\n\r\n\treturn iRow;\r\n}\r\n\r\n\r\n/**\r\n * Add one or more TR elements to the table. Generally we'd expect to\r\n * use this for reading data from a DOM sourced table, but it could be\r\n * used for an TR element. Note that if a TR is given, it is used (i.e.\r\n * it is not cloned).\r\n *  @param {object} settings dataTables settings object\r\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\r\n *  @returns {array} Array of indexes for the added rows\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddTr( settings, trs )\r\n{\r\n\tvar row;\r\n\r\n\t// Allow an individual node to be passed in\r\n\tif ( ! (trs instanceof $) ) {\r\n\t\ttrs = $(trs);\r\n\t}\r\n\r\n\treturn trs.map( function (i, el) {\r\n\t\trow = _fnGetRowElements( settings, el );\r\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Take a TR element and convert it to an index in aoData\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} n the TR element to find\r\n *  @returns {int} index if the node is found, null if not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnNodeToDataIndex( oSettings, n )\r\n{\r\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\r\n}\r\n\r\n\r\n/**\r\n * Take a TD element and convert it into a column data index (not the visible index)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow The row number the TD/TH can be found in\r\n *  @param {node} n The TD/TH element to find\r\n *  @returns {int} index if the node is found, -1 if not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\r\n{\r\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\r\n}\r\n\r\n\r\n/**\r\n * Get the data for a given cell from the internal cache, taking into account data mapping\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\r\n *  @returns {*} Cell data\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\r\n{\r\n\tif (type === 'search') {\r\n\t\ttype = 'filter';\r\n\t}\r\n\telse if (type === 'order') {\r\n\t\ttype = 'sort';\r\n\t}\r\n\r\n\tvar draw           = settings.iDraw;\r\n\tvar col            = settings.aoColumns[colIdx];\r\n\tvar rowData        = settings.aoData[rowIdx]._aData;\r\n\tvar defaultContent = col.sDefaultContent;\r\n\tvar cellData       = col.fnGetData( rowData, type, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t} );\r\n\r\n\tif ( cellData === undefined ) {\r\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\r\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\r\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\r\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\r\n\t\t\tsettings.iDrawError = draw;\r\n\t\t}\r\n\t\treturn defaultContent;\r\n\t}\r\n\r\n\t// When the data source is null and a specific data type is requested (i.e.\r\n\t// not the original data), we can use default column data\r\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\r\n\t\tcellData = defaultContent;\r\n\t}\r\n\telse if ( typeof cellData === 'function' ) {\r\n\t\t// If the data source is a function, then we run it and use the return,\r\n\t\t// executing in the scope of the data object (for instances)\r\n\t\treturn cellData.call( rowData );\r\n\t}\r\n\r\n\tif ( cellData === null && type === 'display' ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tif ( type === 'filter' ) {\r\n\t\tvar fomatters = DataTable.ext.type.search;\r\n\r\n\t\tif ( fomatters[ col.sType ] ) {\r\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\r\n\t\t}\r\n\t}\r\n\r\n\treturn cellData;\r\n}\r\n\r\n\r\n/**\r\n * Set the value for a specific cell, into the internal data cache\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {*} val Value to set\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\r\n{\r\n\tvar col     = settings.aoColumns[colIdx];\r\n\tvar rowData = settings.aoData[rowIdx]._aData;\r\n\r\n\tcol.fnSetData( rowData, val, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t}  );\r\n}\r\n\r\n\r\n// Private variable that is used to match action syntax in the data property object\r\nvar __reArray = /\\[.*?\\]$/;\r\nvar __reFn = /\\(\\)$/;\r\n\r\n/**\r\n * Split string on periods, taking into account escaped periods\r\n * @param  {string} str String to split\r\n * @return {array} Split string\r\n */\r\nfunction _fnSplitObjNotation( str )\r\n{\r\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\r\n\t\treturn s.replace(/\\\\\\./g, '.');\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Return a function that can be used to get data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data get function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnGetObjectDataFn = DataTable.util.get;\r\n\r\n\r\n/**\r\n * Return a function that can be used to set data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data set function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnSetObjectDataFn = DataTable.util.set;\r\n\r\n\r\n/**\r\n * Return an array with the full table data\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns array {array} aData Master data array\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetDataMaster ( settings )\r\n{\r\n\treturn _pluck( settings.aoData, '_aData' );\r\n}\r\n\r\n\r\n/**\r\n * Nuke the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnClearTable( settings )\r\n{\r\n\tsettings.aoData.length = 0;\r\n\tsettings.aiDisplayMaster.length = 0;\r\n\tsettings.aiDisplay.length = 0;\r\n\tsettings.aIds = {};\r\n}\r\n\r\n\r\n /**\r\n * Take an array of integers (index array) and remove a target integer (value - not\r\n * the key!)\r\n *  @param {array} a Index array to target\r\n *  @param {int} iTarget value to find\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDeleteIndex( a, iTarget, splice )\r\n{\r\n\tvar iTargetIndex = -1;\r\n\r\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tif ( a[i] == iTarget )\r\n\t\t{\r\n\t\t\tiTargetIndex = i;\r\n\t\t}\r\n\t\telse if ( a[i] > iTarget )\r\n\t\t{\r\n\t\t\ta[i]--;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( iTargetIndex != -1 && splice === undefined )\r\n\t{\r\n\t\ta.splice( iTargetIndex, 1 );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Mark cached data as invalid such that a re-read of the data will occur when\r\n * the cached data is next requested. Also update from the data source object.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {int}    rowIdx   Row index to invalidate\r\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\r\n *     or 'data'\r\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\r\n *     row will be invalidated\r\n * @memberof DataTable#oApi\r\n *\r\n * @todo For the modularisation of v1.11 this will need to become a callback, so\r\n *   the sort and filter methods can subscribe to it. That will required\r\n *   initialisation options for sorting, which is why it is not already baked in\r\n */\r\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\r\n{\r\n\tvar row = settings.aoData[ rowIdx ];\r\n\tvar i, ien;\r\n\tvar cellWrite = function ( cell, col ) {\r\n\t\t// This is very frustrating, but in IE if you just write directly\r\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\r\n\t\t// even if there is a reference to them elsewhere\r\n\t\twhile ( cell.childNodes.length ) {\r\n\t\t\tcell.removeChild( cell.firstChild );\r\n\t\t}\r\n\r\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\r\n\t};\r\n\r\n\t// Are we reading last data from DOM or the data object?\r\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\r\n\t\t// Read the data from the DOM\r\n\t\trow._aData = _fnGetRowElements(\r\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\r\n\t\t\t)\r\n\t\t\t.data;\r\n\t}\r\n\telse {\r\n\t\t// Reading from data object, update the DOM\r\n\t\tvar cells = row.anCells;\r\n\r\n\t\tif ( cells ) {\r\n\t\t\tif ( colIdx !== undefined ) {\r\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tcellWrite( cells[i], i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// For both row and cell invalidation, the cached data for sorting and\r\n\t// filtering is nulled out\r\n\trow._aSortData = null;\r\n\trow._aFilterData = null;\r\n\r\n\t// Invalidate the type for a specific column (if given) or all columns since\r\n\t// the data might have changed\r\n\tvar cols = settings.aoColumns;\r\n\tif ( colIdx !== undefined ) {\r\n\t\tcols[ colIdx ].sType = null;\r\n\t}\r\n\telse {\r\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\r\n\t\t\tcols[i].sType = null;\r\n\t\t}\r\n\r\n\t\t// Update DataTables special `DT_*` attributes for the row\r\n\t\t_fnRowAttributes( settings, row );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a data source object from an HTML row, reading the contents of the\r\n * cells that are in the row.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {node|object} TR element from which to read data or existing row\r\n *   object from which to re-read the data from the cells\r\n * @param {int} [colIdx] Optional column index\r\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\r\n *   parameter should also be given and will be used to write the data into.\r\n *   Only the column in question will be written\r\n * @returns {object} Object with two parameters: `data` the data read, in\r\n *   document order, and `cells` and array of nodes (they can be useful to the\r\n *   caller, so rather than needing a second traversal to get them, just return\r\n *   them from here).\r\n * @memberof DataTable#oApi\r\n */\r\nfunction _fnGetRowElements( settings, row, colIdx, d )\r\n{\r\n\tvar\r\n\t\ttds = [],\r\n\t\ttd = row.firstChild,\r\n\t\tname, col, o, i=0, contents,\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tobjectRead = settings._rowReadObject;\r\n\r\n\t// Allow the data object to be passed in, or construct\r\n\td = d !== undefined ?\r\n\t\td :\r\n\t\tobjectRead ?\r\n\t\t\t{} :\r\n\t\t\t[];\r\n\r\n\tvar attr = function ( str, td  ) {\r\n\t\tif ( typeof str === 'string' ) {\r\n\t\t\tvar idx = str.indexOf('@');\r\n\r\n\t\t\tif ( idx !== -1 ) {\r\n\t\t\t\tvar attr = str.substring( idx+1 );\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\r\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Read data from a cell and store into the data object\r\n\tvar cellProcess = function ( cell ) {\r\n\t\tif ( colIdx === undefined || colIdx === i ) {\r\n\t\t\tcol = columns[i];\r\n\t\t\tcontents = (cell.innerHTML).trim();\r\n\r\n\t\t\tif ( col && col._bAttrSrc ) {\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\r\n\t\t\t\tsetter( d, contents );\r\n\r\n\t\t\t\tattr( col.mData.sort, cell );\r\n\t\t\t\tattr( col.mData.type, cell );\r\n\t\t\t\tattr( col.mData.filter, cell );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Depending on the `data` option for the columns the data can\r\n\t\t\t\t// be read to either an object or an array.\r\n\t\t\t\tif ( objectRead ) {\r\n\t\t\t\t\tif ( ! col._setter ) {\r\n\t\t\t\t\t\t// Cache the setter function\r\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcol._setter( d, contents );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td[i] = contents;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t};\r\n\r\n\tif ( td ) {\r\n\t\t// `tr` element was passed in\r\n\t\twhile ( td ) {\r\n\t\t\tname = td.nodeName.toUpperCase();\r\n\r\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\r\n\t\t\t\tcellProcess( td );\r\n\t\t\t\ttds.push( td );\r\n\t\t\t}\r\n\r\n\t\t\ttd = td.nextSibling;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Existing row object passed in\r\n\t\ttds = row.anCells;\r\n\r\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\r\n\t\t\tcellProcess( tds[j] );\r\n\t\t}\r\n\t}\r\n\r\n\t// Read the ID from the DOM if present\r\n\tvar rowNode = row.firstChild ? row : row.nTr;\r\n\r\n\tif ( rowNode ) {\r\n\t\tvar id = rowNode.getAttribute( 'id' );\r\n\r\n\t\tif ( id ) {\r\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tdata: d,\r\n\t\tcells: tds\r\n\t};\r\n}\r\n/**\r\n * Create a new TR element (and it's TD children) for a row\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow Row to consider\r\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\r\n{\r\n\tvar\r\n\t\trow = oSettings.aoData[iRow],\r\n\t\trowData = row._aData,\r\n\t\tcells = [],\r\n\t\tnTr, nTd, oCol,\r\n\t\ti, iLen, create;\r\n\r\n\tif ( row.nTr === null )\r\n\t{\r\n\t\tnTr = nTrIn || document.createElement('tr');\r\n\r\n\t\trow.nTr = nTr;\r\n\t\trow.anCells = cells;\r\n\r\n\t\t/* Use a private property on the node to allow reserve mapping from the node\r\n\t\t * to the aoData array for fast look up\r\n\t\t */\r\n\t\tnTr._DT_RowIndex = iRow;\r\n\r\n\t\t/* Special parameters can be given by the data source to be used on the row */\r\n\t\t_fnRowAttributes( oSettings, row );\r\n\r\n\t\t/* Process each column */\r\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\toCol = oSettings.aoColumns[i];\r\n\t\t\tcreate = nTrIn ? false : true;\r\n\r\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\r\n\r\n\t\t\tif (! nTd) {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\r\n\t\t\tnTd._DT_CellIndex = {\r\n\t\t\t\trow: iRow,\r\n\t\t\t\tcolumn: i\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tcells.push( nTd );\r\n\r\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\r\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\r\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\r\n\t\t\t)) {\r\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\r\n\t\t\t}\r\n\r\n\t\t\t/* Add user defined class */\r\n\t\t\tif ( oCol.sClass )\r\n\t\t\t{\r\n\t\t\t\tnTd.className += ' '+oCol.sClass;\r\n\t\t\t}\r\n\r\n\t\t\t// Visibility - add or remove as required\r\n\t\t\tif ( oCol.bVisible && ! nTrIn )\r\n\t\t\t{\r\n\t\t\t\tnTr.appendChild( nTd );\r\n\t\t\t}\r\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\r\n\t\t\t{\r\n\t\t\t\tnTd.parentNode.removeChild( nTd );\r\n\t\t\t}\r\n\r\n\t\t\tif ( oCol.fnCreatedCell )\r\n\t\t\t{\r\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\r\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Add attributes to a row based on the special `DT_*` parameters in a data\r\n * source object.\r\n *  @param {object} settings DataTables settings object\r\n *  @param {object} DataTables row object for the row to be modified\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnRowAttributes( settings, row )\r\n{\r\n\tvar tr = row.nTr;\r\n\tvar data = row._aData;\r\n\r\n\tif ( tr ) {\r\n\t\tvar id = settings.rowIdFn( data );\r\n\r\n\t\tif ( id ) {\r\n\t\t\ttr.id = id;\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowClass ) {\r\n\t\t\t// Remove any classes added by DT_RowClass before\r\n\t\t\tvar a = data.DT_RowClass.split(' ');\r\n\t\t\trow.__rowc = row.__rowc ?\r\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\r\n\t\t\t\ta;\r\n\r\n\t\t\t$(tr)\r\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\r\n\t\t\t\t.addClass( data.DT_RowClass );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowAttr ) {\r\n\t\t\t$(tr).attr( data.DT_RowAttr );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowData ) {\r\n\t\t\t$(tr).data( data.DT_RowData );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Create the HTML header for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBuildHead( oSettings )\r\n{\r\n\tvar i, ien, cell, row, column;\r\n\tvar thead = oSettings.nTHead;\r\n\tvar tfoot = oSettings.nTFoot;\r\n\tvar createHeader = $('th, td', thead).length === 0;\r\n\tvar classes = oSettings.oClasses;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\tif ( createHeader ) {\r\n\t\trow = $('<tr/>').appendTo( thead );\r\n\t}\r\n\r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\t\tcell = $( column.nTh ).addClass( column.sClass );\r\n\r\n\t\tif ( createHeader ) {\r\n\t\t\tcell.appendTo( row );\r\n\t\t}\r\n\r\n\t\t// 1.11 move into sorting\r\n\t\tif ( oSettings.oFeatures.bSort ) {\r\n\t\t\tcell.addClass( column.sSortingClass );\r\n\r\n\t\t\tif ( column.bSortable !== false ) {\r\n\t\t\t\tcell\r\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\r\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\r\n\r\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\r\n\t\t\tcell.html( column.sTitle );\r\n\t\t}\r\n\r\n\t\t_fnRenderer( oSettings, 'header' )(\r\n\t\t\toSettings, cell, column, classes\r\n\t\t);\r\n\t}\r\n\r\n\tif ( createHeader ) {\r\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\r\n\t}\r\n\r\n\t/* Deal with the footer - add classes if required */\r\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\r\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\r\n\r\n\t// Cache the footer cells. Note that we only take the cells from the first\r\n\t// row in the footer. If there is more than one row the user wants to\r\n\t// interact with, they need to use the table().foot() method. Note also this\r\n\t// allows cells to be used for multiple columns using colspan\r\n\tif ( tfoot !== null ) {\r\n\t\tvar cells = oSettings.aoFooter[0];\r\n\r\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\tcolumn = columns[i];\r\n\r\n\t\t\tif (column) {\r\n\t\t\t\tcolumn.nTf = cells[i].cell;\r\n\t\r\n\t\t\t\tif ( column.sClass ) {\r\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Draw the header (or footer) element based on the column visibility states. The\r\n * methodology here is to use the layout array from _fnDetectHeader, modified for\r\n * the instantaneous column visibility, to construct the new layout. The grid is\r\n * traversed over cell at a time in a rows x columns grid fashion, although each\r\n * cell insert can cover multiple elements in the grid - which is tracks using the\r\n * aApplied array. Cell inserts in the grid will only occur where there isn't\r\n * already a cell in that position.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\r\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\r\n\tvar aoLocal = [];\r\n\tvar aApplied = [];\r\n\tvar iColumns = oSettings.aoColumns.length;\r\n\tvar iRowspan, iColspan;\r\n\r\n\tif ( ! aoSource )\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (  bIncludeHidden === undefined )\r\n\t{\r\n\t\tbIncludeHidden = false;\r\n\t}\r\n\r\n\t/* Make a copy of the master layout array, but without the visible columns in it */\r\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\r\n\t{\r\n\t\taoLocal[i] = aoSource[i].slice();\r\n\t\taoLocal[i].nTr = aoSource[i].nTr;\r\n\r\n\t\t/* Remove any columns which are currently hidden */\r\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\r\n\t\t{\r\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\r\n\t\t\t{\r\n\t\t\t\taoLocal[i].splice( j, 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Prep the applied array - it needs an element for each row */\r\n\t\taApplied.push( [] );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tnLocalTr = aoLocal[i].nTr;\r\n\r\n\t\t/* All cells are going to be replaced, so empty out the row */\r\n\t\tif ( nLocalTr )\r\n\t\t{\r\n\t\t\twhile( (n = nLocalTr.firstChild) )\r\n\t\t\t{\r\n\t\t\t\tnLocalTr.removeChild( n );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\r\n\t\t{\r\n\t\t\tiRowspan = 1;\r\n\t\t\tiColspan = 1;\r\n\r\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\r\n\t\t\t * insert point. If there is, then there is nothing to do.\r\n\t\t\t */\r\n\t\t\tif ( aApplied[i][j] === undefined )\r\n\t\t\t{\r\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\r\n\t\t\t\taApplied[i][j] = 1;\r\n\r\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\r\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\r\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\r\n\t\t\t\t{\r\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\r\n\t\t\t\t\tiRowspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\r\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\r\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\r\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tiColspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Do the actual expansion in the DOM */\r\n\t\t\t\t$(aoLocal[i][j].cell)\r\n\t\t\t\t\t.attr('rowspan', iRowspan)\r\n\t\t\t\t\t.attr('colspan', iColspan);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Insert the required TR nodes into the table for display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param ajaxComplete true after ajax call to complete rendering\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDraw( oSettings, ajaxComplete )\r\n{\r\n\t// Allow for state saving and a custom start position\r\n\t_fnStart( oSettings );\r\n\r\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\r\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\r\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\r\n\t{\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar anRows = [];\r\n\tvar iRowCount = 0;\r\n\tvar asStripeClasses = oSettings.asStripeClasses;\r\n\tvar iStripes = asStripeClasses.length;\r\n\tvar oLang = oSettings.oLanguage;\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar aiDisplay = oSettings.aiDisplay;\r\n\tvar iDisplayStart = oSettings._iDisplayStart;\r\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\r\n\r\n\toSettings.bDrawing = true;\r\n\r\n\t/* Server-side processing draw intercept */\r\n\tif ( oSettings.bDeferLoading )\r\n\t{\r\n\t\toSettings.bDeferLoading = false;\r\n\t\toSettings.iDraw++;\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t}\r\n\telse if ( !bServerSide )\r\n\t{\r\n\t\toSettings.iDraw++;\r\n\t}\r\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\r\n\t{\r\n\t\t_fnAjaxUpdate( oSettings );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( aiDisplay.length !== 0 )\r\n\t{\r\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\r\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\r\n\r\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\r\n\t\t{\r\n\t\t\tvar iDataIndex = aiDisplay[j];\r\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\r\n\t\t\tif ( aoData.nTr === null )\r\n\t\t\t{\r\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\r\n\t\t\t}\r\n\r\n\t\t\tvar nRow = aoData.nTr;\r\n\r\n\t\t\t/* Remove the old striping classes and then add the new one */\r\n\t\t\tif ( iStripes !== 0 )\r\n\t\t\t{\r\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\r\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\r\n\t\t\t\t{\r\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\r\n\t\t\t\t\taoData._sRowStripe = sStripe;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Row callback functions - might want to manipulate the row\r\n\t\t\t// iRowCount and j are not currently documented. Are they at all\r\n\t\t\t// useful?\r\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\r\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\r\n\r\n\t\t\tanRows.push( nRow );\r\n\t\t\tiRowCount++;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/* Table is empty - create a row with an empty message in it */\r\n\t\tvar sZero = oLang.sZeroRecords;\r\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\r\n\t\t{\r\n\t\t\tsZero = oLang.sLoadingRecords;\r\n\t\t}\r\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\r\n\t\t{\r\n\t\t\tsZero = oLang.sEmptyTable;\r\n\t\t}\r\n\r\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\r\n\t\t\t.append( $('<td />', {\r\n\t\t\t\t'valign':  'top',\r\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\r\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\r\n\t\t\t} ).html( sZero ) )[0];\r\n\t}\r\n\r\n\t/* Header and footer callbacks */\r\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\tvar body = $(oSettings.nTBody);\r\n\r\n\tbody.children().detach();\r\n\tbody.append( $(anRows) );\r\n\r\n\t/* Call all required callback functions for the end of a draw */\r\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\r\n\r\n\t/* Draw is complete, sorting and filtering must be as well */\r\n\toSettings.bSorted = false;\r\n\toSettings.bFiltered = false;\r\n\toSettings.bDrawing = false;\r\n}\r\n\r\n\r\n/**\r\n * Redraw the table - taking account of the various features which are enabled\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\r\n *    the paging is reset to the first page\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReDraw( settings, holdPosition )\r\n{\r\n\tvar\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tsort     = features.bSort,\r\n\t\tfilter   = features.bFilter;\r\n\r\n\tif ( sort ) {\r\n\t\t_fnSort( settings );\r\n\t}\r\n\r\n\tif ( filter ) {\r\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\r\n\t}\r\n\telse {\r\n\t\t// No filtering, so we want to just use the display master\r\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\t}\r\n\r\n\tif ( holdPosition !== true ) {\r\n\t\tsettings._iDisplayStart = 0;\r\n\t}\r\n\r\n\t// Let any modules know about the draw hold position state (used by\r\n\t// scrolling internally)\r\n\tsettings._drawHold = holdPosition;\r\n\r\n\t_fnDraw( settings );\r\n\r\n\tsettings._drawHold = false;\r\n}\r\n\r\n\r\n/**\r\n * Add the options to the page HTML for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddOptionsHtml ( oSettings )\r\n{\r\n\tvar classes = oSettings.oClasses;\r\n\tvar table = $(oSettings.nTable);\r\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\r\n\tvar features = oSettings.oFeatures;\r\n\r\n\t// All DataTables are wrapped in a div\r\n\tvar insert = $('<div/>', {\r\n\t\tid:      oSettings.sTableId+'_wrapper',\r\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\r\n\t} );\r\n\r\n\toSettings.nHolding = holding[0];\r\n\toSettings.nTableWrapper = insert[0];\r\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\r\n\r\n\t/* Loop over the user set positioning and place the elements as needed */\r\n\tvar aDom = oSettings.sDom.split('');\r\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\r\n\tfor ( var i=0 ; i<aDom.length ; i++ )\r\n\t{\r\n\t\tfeatureNode = null;\r\n\t\tcOption = aDom[i];\r\n\r\n\t\tif ( cOption == '<' )\r\n\t\t{\r\n\t\t\t/* New container div */\r\n\t\t\tnNewNode = $('<div/>')[0];\r\n\r\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\r\n\t\t\tcNext = aDom[i+1];\r\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\r\n\t\t\t{\r\n\t\t\t\tsAttr = \"\";\r\n\t\t\t\tj = 2;\r\n\t\t\t\twhile ( aDom[i+j] != cNext )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr += aDom[i+j];\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\r\n\t\t\t\tif ( sAttr == \"H\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr = classes.sJUIHeader;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( sAttr == \"F\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr = classes.sJUIFooter;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\r\n\t\t\t\t * breaks the string into parts and applies them as needed\r\n\t\t\t\t */\r\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar aSplit = sAttr.split('.');\r\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\r\n\t\t\t\t\tnNewNode.className = aSplit[1];\r\n\t\t\t\t}\r\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tnNewNode.className = sAttr;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti += j; /* Move along the position array */\r\n\t\t\t}\r\n\r\n\t\t\tinsert.append( nNewNode );\r\n\t\t\tinsert = $(nNewNode);\r\n\t\t}\r\n\t\telse if ( cOption == '>' )\r\n\t\t{\r\n\t\t\t/* End container div */\r\n\t\t\tinsert = insert.parent();\r\n\t\t}\r\n\t\t// @todo Move options into their own plugins?\r\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\r\n\t\t{\r\n\t\t\t/* Length */\r\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'f' && features.bFilter )\r\n\t\t{\r\n\t\t\t/* Filter */\r\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'r' && features.bProcessing )\r\n\t\t{\r\n\t\t\t/* pRocessing */\r\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 't' )\r\n\t\t{\r\n\t\t\t/* Table */\r\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption ==  'i' && features.bInfo )\r\n\t\t{\r\n\t\t\t/* Info */\r\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'p' && features.bPaginate )\r\n\t\t{\r\n\t\t\t/* Pagination */\r\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\r\n\t\t}\r\n\t\telse if ( DataTable.ext.feature.length !== 0 )\r\n\t\t{\r\n\t\t\t/* Plug-in features */\r\n\t\t\tvar aoFeatures = DataTable.ext.feature;\r\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\r\n\t\t\t{\r\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add to the 2D features array */\r\n\t\tif ( featureNode )\r\n\t\t{\r\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\r\n\r\n\t\t\tif ( ! aanFeatures[cOption] )\r\n\t\t\t{\r\n\t\t\t\taanFeatures[cOption] = [];\r\n\t\t\t}\r\n\r\n\t\t\taanFeatures[cOption].push( featureNode );\r\n\t\t\tinsert.append( featureNode );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Built our DOM structure - replace the holding div with what we want */\r\n\tholding.replaceWith( insert );\r\n\toSettings.nHolding = null;\r\n}\r\n\r\n\r\n/**\r\n * Use the DOM source to create up an array of header cells. The idea here is to\r\n * create a layout grid (array) of rows x columns, which contains a reference\r\n * to the cell that that point in the grid (regardless of col/rowspan), such that\r\n * any column / row could be removed and the new grid constructed\r\n *  @param array {object} aLayout Array to store the calculated layout in\r\n *  @param {node} nThead The header/footer element for the table\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDetectHeader ( aLayout, nThead )\r\n{\r\n\tvar nTrs = $(nThead).children('tr');\r\n\tvar nTr, nCell;\r\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\r\n\tvar bUnique;\r\n\tvar fnShiftCol = function ( a, i, j ) {\r\n\t\tvar k = a[i];\r\n                while ( k[j] ) {\r\n\t\t\tj++;\r\n\t\t}\r\n\t\treturn j;\r\n\t};\r\n\r\n\taLayout.splice( 0, aLayout.length );\r\n\r\n\t/* We know how many rows there are in the layout - so prep it */\r\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n\t{\r\n\t\taLayout.push( [] );\r\n\t}\r\n\r\n\t/* Calculate a layout array */\r\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tnTr = nTrs[i];\r\n\t\tiColumn = 0;\r\n\r\n\t\t/* For every cell in the row... */\r\n\t\tnCell = nTr.firstChild;\r\n\t\twhile ( nCell ) {\r\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\r\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\r\n\t\t\t{\r\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\r\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\r\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\r\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\r\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\r\n\r\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\r\n\t\t\t\t * accordingly\r\n\t\t\t\t */\r\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\r\n\r\n\t\t\t\t/* Cache calculation for unique columns */\r\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\r\n\r\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\r\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\r\n\t\t\t\t\t\t\t\"cell\": nCell,\r\n\t\t\t\t\t\t\t\"unique\": bUnique\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnCell = nCell.nextSibling;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get an array of unique th elements, one for each column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nHeader automatically detect the layout from this node - optional\r\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\r\n *  @returns array {node} aReturn list of unique th's\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\r\n{\r\n\tvar aReturn = [];\r\n\tif ( !aLayout )\r\n\t{\r\n\t\taLayout = oSettings.aoHeader;\r\n\t\tif ( nHeader )\r\n\t\t{\r\n\t\t\taLayout = [];\r\n\t\t\t_fnDetectHeader( aLayout, nHeader );\r\n\t\t}\r\n\t}\r\n\r\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\r\n\t\t{\r\n\t\t\tif ( aLayout[i][j].unique &&\r\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\r\n\t\t\t{\r\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn aReturn;\r\n}\r\n\r\n/**\r\n * Set the start position for draw\r\n *  @param {object} oSettings dataTables settings object\r\n */\r\nfunction _fnStart( oSettings )\r\n{\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\r\n\r\n\t// Check and see if we have an initial draw position from state saving\r\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\r\n\t{\r\n\t\toSettings._iDisplayStart = bServerSide ?\r\n\t\t\tiInitDisplayStart :\r\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\r\n\t\t\t\t0 :\r\n\t\t\t\tiInitDisplayStart;\r\n\r\n\t\toSettings.iInitDisplayStart = -1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Create an Ajax call based on the table's settings, taking into account that\r\n * parameters can have multiple forms, and backwards compatibility.\r\n *\r\n * @param {object} oSettings dataTables settings object\r\n * @param {array} data Data to send to the server, required by\r\n *     DataTables - may be augmented by developer callbacks\r\n * @param {function} fn Callback function to run when data is obtained\r\n */\r\nfunction _fnBuildAjax( oSettings, data, fn )\r\n{\r\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\r\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\r\n\r\n\t// Convert to object based for 1.10+ if using the old array scheme which can\r\n\t// come from server-side processing or serverParams\r\n\tif ( data && Array.isArray(data) ) {\r\n\t\tvar tmp = {};\r\n\t\tvar rbracket = /(.*?)\\[\\]$/;\r\n\r\n\t\t$.each( data, function (key, val) {\r\n\t\t\tvar match = val.name.match(rbracket);\r\n\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Support for arrays\r\n\t\t\t\tvar name = match[0];\r\n\r\n\t\t\t\tif ( ! tmp[ name ] ) {\r\n\t\t\t\t\ttmp[ name ] = [];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[ name ].push( val.value );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp[val.name] = val.value;\r\n\t\t\t}\r\n\t\t} );\r\n\t\tdata = tmp;\r\n\t}\r\n\r\n\tvar ajaxData;\r\n\tvar ajax = oSettings.ajax;\r\n\tvar instance = oSettings.oInstance;\r\n\tvar callback = function ( json ) {\r\n\t\tvar status = oSettings.jqXHR\r\n\t\t\t? oSettings.jqXHR.status\r\n\t\t\t: null;\r\n\r\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\r\n\t\t\tjson = {};\r\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\r\n\t\t}\r\n\r\n\t\tvar error = json.error || json.sError;\r\n\t\tif ( error ) {\r\n\t\t\t_fnLog( oSettings, 0, error );\r\n\t\t}\r\n\r\n\t\toSettings.json = json;\r\n\r\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\r\n\t\tfn( json );\r\n\t};\r\n\r\n\tif ( $.isPlainObject( ajax ) && ajax.data )\r\n\t{\r\n\t\tajaxData = ajax.data;\r\n\r\n\t\tvar newData = typeof ajaxData === 'function' ?\r\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\r\n\t\t\tajaxData;                      // an object object or array to merge\r\n\r\n\t\t// If the function returned something, use that alone\r\n\t\tdata = typeof ajaxData === 'function' && newData ?\r\n\t\t\tnewData :\r\n\t\t\t$.extend( true, data, newData );\r\n\r\n\t\t// Remove the data property as we've resolved it already and don't want\r\n\t\t// jQuery to do it again (it is restored at the end of the function)\r\n\t\tdelete ajax.data;\r\n\t}\r\n\r\n\tvar baseAjax = {\r\n\t\t\"data\": data,\r\n\t\t\"success\": callback,\r\n\t\t\"dataType\": \"json\",\r\n\t\t\"cache\": false,\r\n\t\t\"type\": oSettings.sServerMethod,\r\n\t\t\"error\": function (xhr, error, thrown) {\r\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\r\n\r\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\r\n\t\t\t\tif ( error == \"parsererror\" ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( xhr.readyState === 4 ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\t}\r\n\t};\r\n\r\n\t// Store the data submitted for the API\r\n\toSettings.oAjaxData = data;\r\n\r\n\t// Allow plug-ins and external processes to modify the data\r\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\r\n\r\n\tif ( oSettings.fnServerData )\r\n\t{\r\n\t\t// DataTables 1.9- compatibility\r\n\t\toSettings.fnServerData.call( instance,\r\n\t\t\toSettings.sAjaxSource,\r\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\r\n\t\t\t\treturn { name: key, value: val };\r\n\t\t\t} ),\r\n\t\t\tcallback,\r\n\t\t\toSettings\r\n\t\t);\r\n\t}\r\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\r\n\t{\r\n\t\t// DataTables 1.9- compatibility\r\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\r\n\t\t\turl: ajax || oSettings.sAjaxSource\r\n\t\t} ) );\r\n\t}\r\n\telse if ( typeof ajax === 'function' )\r\n\t{\r\n\t\t// Is a function - let the caller define what needs to be done\r\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Object to extend the base settings\r\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\r\n\r\n\t\t// Restore for next time around\r\n\t\tajax.data = ajaxData;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Update the table using an Ajax call\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {boolean} Block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdate( settings )\r\n{\r\n\tsettings.iDraw++;\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t_fnBuildAjax(\r\n\t\tsettings,\r\n\t\t_fnAjaxParameters( settings ),\r\n\t\tfunction(json) {\r\n\t\t\t_fnAjaxUpdateDraw( settings, json );\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n/**\r\n * Build up the parameters in an object needed for a server-side processing\r\n * request. Note that this is basically done twice, is different ways - a modern\r\n * method which is used by default in DataTables 1.10 which uses objects and\r\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\r\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\r\n * option is set.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {bool} block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxParameters( settings )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tcolumnCount = columns.length,\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tpreSearch = settings.oPreviousSearch,\r\n\t\tpreColSearch = settings.aoPreSearchCols,\r\n\t\ti, data = [], dataProp, column, columnSearch,\r\n\t\tsort = _fnSortFlatten( settings ),\r\n\t\tdisplayStart = settings._iDisplayStart,\r\n\t\tdisplayLength = features.bPaginate !== false ?\r\n\t\t\tsettings._iDisplayLength :\r\n\t\t\t-1;\r\n\r\n\tvar param = function ( name, value ) {\r\n\t\tdata.push( { 'name': name, 'value': value } );\r\n\t};\r\n\r\n\t// DataTables 1.9- compatible method\r\n\tparam( 'sEcho',          settings.iDraw );\r\n\tparam( 'iColumns',       columnCount );\r\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\r\n\tparam( 'iDisplayStart',  displayStart );\r\n\tparam( 'iDisplayLength', displayLength );\r\n\r\n\t// DataTables 1.10+ method\r\n\tvar d = {\r\n\t\tdraw:    settings.iDraw,\r\n\t\tcolumns: [],\r\n\t\torder:   [],\r\n\t\tstart:   displayStart,\r\n\t\tlength:  displayLength,\r\n\t\tsearch:  {\r\n\t\t\tvalue: preSearch.sSearch,\r\n\t\t\tregex: preSearch.bRegex\r\n\t\t}\r\n\t};\r\n\r\n\tfor ( i=0 ; i<columnCount ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\t\tcolumnSearch = preColSearch[i];\r\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\r\n\r\n\t\td.columns.push( {\r\n\t\t\tdata:       dataProp,\r\n\t\t\tname:       column.sName,\r\n\t\t\tsearchable: column.bSearchable,\r\n\t\t\torderable:  column.bSortable,\r\n\t\t\tsearch:     {\r\n\t\t\t\tvalue: columnSearch.sSearch,\r\n\t\t\t\tregex: columnSearch.bRegex\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tparam( \"mDataProp_\"+i, dataProp );\r\n\r\n\t\tif ( features.bFilter ) {\r\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\r\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\r\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\r\n\t\t}\r\n\r\n\t\tif ( features.bSort ) {\r\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( features.bFilter ) {\r\n\t\tparam( 'sSearch', preSearch.sSearch );\r\n\t\tparam( 'bRegex', preSearch.bRegex );\r\n\t}\r\n\r\n\tif ( features.bSort ) {\r\n\t\t$.each( sort, function ( i, val ) {\r\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\r\n\r\n\t\t\tparam( 'iSortCol_'+i, val.col );\r\n\t\t\tparam( 'sSortDir_'+i, val.dir );\r\n\t\t} );\r\n\r\n\t\tparam( 'iSortingCols', sort.length );\r\n\t}\r\n\r\n\t// If the legacy.ajax parameter is null, then we automatically decide which\r\n\t// form to use, based on sAjaxSource\r\n\tvar legacy = DataTable.ext.legacy.ajax;\r\n\tif ( legacy === null ) {\r\n\t\treturn settings.sAjaxSource ? data : d;\r\n\t}\r\n\r\n\t// Otherwise, if legacy has been specified then we use that to decide on the\r\n\t// form\r\n\treturn legacy ? data : d;\r\n}\r\n\r\n\r\n/**\r\n * Data the data from the server (nuking the old) and redraw the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} json json data return from the server.\r\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\r\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\r\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\r\n *  @param {array} json.aaData The data to display on this page\r\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdateDraw ( settings, json )\r\n{\r\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\r\n\t// Support both\r\n\tvar compat = function ( old, modern ) {\r\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\r\n\t};\r\n\r\n\tvar data = _fnAjaxDataSrc( settings, json );\r\n\tvar draw            = compat( 'sEcho',                'draw' );\r\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\r\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\r\n\r\n\tif ( draw !== undefined ) {\r\n\t\t// Protect against out of sequence returns\r\n\t\tif ( draw*1 < settings.iDraw ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsettings.iDraw = draw * 1;\r\n\t}\r\n\r\n\t// No data in returned object, so rather than an array, we show an empty table\r\n\tif ( ! data ) {\r\n\t\tdata = [];\r\n\t}\r\n\r\n\t_fnClearTable( settings );\r\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\r\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\r\n\r\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t_fnAddData( settings, data[i] );\r\n\t}\r\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n\t_fnDraw( settings, true );\r\n\r\n\tif ( ! settings._bInitComplete ) {\r\n\t\t_fnInitComplete( settings, json );\r\n\t}\r\n\r\n\t_fnProcessingDisplay( settings, false );\r\n}\r\n\r\n\r\n/**\r\n * Get the data from the JSON data source to use for drawing a table. Using\r\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\r\n * source object, or from a processing function.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param  {object} json Data source object / array from the server\r\n *  @return {array} Array of data to use\r\n */\r\n function _fnAjaxDataSrc ( oSettings, json, write )\r\n {\r\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\r\n\t\toSettings.ajax.dataSrc :\r\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\r\n\r\n\tif ( ! write ) {\r\n\t\tif ( dataSrc === 'data' ) {\r\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\r\n\t\t\t// it if possible\r\n\t\t\treturn json.aaData || json[dataSrc];\r\n\t\t}\r\n\r\n\t\treturn dataSrc !== \"\" ?\r\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\r\n\t\t\tjson;\r\n\t}\r\n\r\n\t// set\r\n\t_fnSetObjectDataFn( dataSrc )( json, write );\r\n}\r\n\r\n/**\r\n * Generate the node required for filtering text\r\n *  @returns {node} Filter control element\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlFilter ( settings )\r\n{\r\n\tvar classes = settings.oClasses;\r\n\tvar tableId = settings.sTableId;\r\n\tvar language = settings.oLanguage;\r\n\tvar previousSearch = settings.oPreviousSearch;\r\n\tvar features = settings.aanFeatures;\r\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\r\n\r\n\tvar str = language.sSearch;\r\n\tstr = str.match(/_INPUT_/) ?\r\n\t\tstr.replace('_INPUT_', input) :\r\n\t\tstr+input;\r\n\r\n\tvar filter = $('<div/>', {\r\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\r\n\t\t\t'class': classes.sFilter\r\n\t\t} )\r\n\t\t.append( $('<label/>' ).append( str ) );\r\n\r\n\tvar searchFn = function(event) {\r\n\t\t/* Update all other filter input elements for the new display */\r\n\t\tvar n = features.f;\r\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\r\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/* Now do the filter */\r\n\t\tif ( val != previousSearch.sSearch ) {\r\n\t\t\t_fnFilterComplete( settings, {\r\n\t\t\t\t\"sSearch\": val,\r\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\r\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\r\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\r\n\t\t\t\t\"return\": previousSearch.return\r\n\t\t\t} );\r\n\r\n\t\t\t// Need to redraw, without resorting\r\n\t\t\tsettings._iDisplayStart = 0;\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t};\r\n\r\n\tvar searchDelay = settings.searchDelay !== null ?\r\n\t\tsettings.searchDelay :\r\n\t\t_fnDataSource( settings ) === 'ssp' ?\r\n\t\t\t400 :\r\n\t\t\t0;\r\n\r\n\tvar jqFilter = $('input', filter)\r\n\t\t.val( previousSearch.sSearch )\r\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\r\n\t\t.on(\r\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\r\n\t\t\tsearchDelay ?\r\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\r\n\t\t\t\tsearchFn\r\n\t\t)\r\n\t\t.on( 'mouseup', function(e) {\r\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\r\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\r\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\r\n\t\t\tsetTimeout( function () {\r\n\t\t\t\tsearchFn.call(jqFilter[0], e);\r\n\t\t\t}, 10);\r\n\t\t} )\r\n\t\t.on( 'keypress.DT', function(e) {\r\n\t\t\t/* Prevent form submission */\r\n\t\t\tif ( e.keyCode == 13 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.attr('aria-controls', tableId);\r\n\r\n\t// Update the input elements whenever the table is filtered\r\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\r\n\t\t\t// inside an iframe or frame...\r\n\t\t\ttry {\r\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\r\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch ( e ) {}\r\n\t\t}\r\n\t} );\r\n\r\n\treturn filter[0];\r\n}\r\n\r\n\r\n/**\r\n * Filter the table using both the global filter and column based filtering\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oSearch search information\r\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\r\n{\r\n\tvar oPrevSearch = oSettings.oPreviousSearch;\r\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\r\n\tvar fnSaveFilter = function ( oFilter ) {\r\n\t\t/* Save the filtering values */\r\n\t\toPrevSearch.sSearch = oFilter.sSearch;\r\n\t\toPrevSearch.bRegex = oFilter.bRegex;\r\n\t\toPrevSearch.bSmart = oFilter.bSmart;\r\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\r\n\t\toPrevSearch.return = oFilter.return;\r\n\t};\r\n\tvar fnRegex = function ( o ) {\r\n\t\t// Backwards compatibility with the bEscapeRegex option\r\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\r\n\t};\r\n\r\n\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t// @todo As per sort - can this be moved into an event handler?\r\n\t_fnColumnTypes( oSettings );\r\n\r\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\r\n\t{\r\n\t\t/* Global filter */\r\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );\r\n\t\tfnSaveFilter( oInput );\r\n\r\n\t\t/* Now do the individual column filter */\r\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\r\n\t\t{\r\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\r\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\r\n\t\t}\r\n\r\n\t\t/* Custom filtering */\r\n\t\t_fnFilterCustom( oSettings );\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfnSaveFilter( oInput );\r\n\t}\r\n\r\n\t/* Tell the draw function we have been filtering */\r\n\toSettings.bFiltered = true;\r\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\r\n}\r\n\r\n\r\n/**\r\n * Apply custom filtering functions\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCustom( settings )\r\n{\r\n\tvar filters = DataTable.ext.search;\r\n\tvar displayRows = settings.aiDisplay;\r\n\tvar row, rowIdx;\r\n\r\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\r\n\t\tvar rows = [];\r\n\r\n\t\t// Loop over each row and see if it should be included\r\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\r\n\t\t\trowIdx = displayRows[ j ];\r\n\t\t\trow = settings.aoData[ rowIdx ];\r\n\r\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\r\n\t\t\t\trows.push( rowIdx );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// So the array reference doesn't break set the results into the\r\n\t\t// existing array\r\n\t\tdisplayRows.length = 0;\r\n\t\t$.merge( displayRows, rows );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Filter the table on a per-column basis\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sInput string to filter on\r\n *  @param {int} iColumn column to filter\r\n *  @param {bool} bRegex treat search string as a regular expression or not\r\n *  @param {bool} bSmart use smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\r\n{\r\n\tif ( searchStr === '' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar data;\r\n\tvar out = [];\r\n\tvar display = settings.aiDisplay;\r\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\r\n\r\n\tfor ( var i=0 ; i<display.length ; i++ ) {\r\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\r\n\r\n\t\tif ( rpSearch.test( data ) ) {\r\n\t\t\tout.push( display[i] );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aiDisplay = out;\r\n}\r\n\r\n\r\n/**\r\n * Filter the data table based on user input and draw the table\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} input string to filter on\r\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\r\n *  @param {bool} regex treat as a regular expression or not\r\n *  @param {bool} smart perform smart filtering or not\r\n *  @param {bool} caseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\r\n{\r\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\r\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\r\n\tvar displayMaster = settings.aiDisplayMaster;\r\n\tvar display, invalidated, i;\r\n\tvar filtered = [];\r\n\r\n\t// Need to take account of custom filtering functions - always filter\r\n\tif ( DataTable.ext.search.length !== 0 ) {\r\n\t\tforce = true;\r\n\t}\r\n\r\n\t// Check if any of the rows were invalidated\r\n\tinvalidated = _fnFilterData( settings );\r\n\r\n\t// If the input is blank - we just want the full data set\r\n\tif ( input.length <= 0 ) {\r\n\t\tsettings.aiDisplay = displayMaster.slice();\r\n\t}\r\n\telse {\r\n\t\t// New search - start from the master array\r\n\t\tif ( invalidated ||\r\n\t\t\t force ||\r\n\t\t\t regex ||\r\n\t\t\t prevSearch.length > input.length ||\r\n\t\t\t input.indexOf(prevSearch) !== 0 ||\r\n\t\t\t settings.bSorted // On resort, the display master needs to be\r\n\t\t\t                  // re-filtered since indexes will have changed\r\n\t\t) {\r\n\t\t\tsettings.aiDisplay = displayMaster.slice();\r\n\t\t}\r\n\r\n\t\t// Search the display array\r\n\t\tdisplay = settings.aiDisplay;\r\n\r\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\r\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\r\n\t\t\t\tfiltered.push( display[i] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsettings.aiDisplay = filtered;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a regular expression object suitable for searching a table\r\n *  @param {string} sSearch string to search for\r\n *  @param {bool} bRegex treat as a regular expression or not\r\n *  @param {bool} bSmart perform smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @returns {RegExp} constructed object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\r\n{\r\n\tsearch = regex ?\r\n\t\tsearch :\r\n\t\t_fnEscapeRegex( search );\r\n\t\r\n\tif ( smart ) {\r\n\t\t/* For smart filtering we want to allow the search to work regardless of\r\n\t\t * word order. We also want double quoted text to be preserved, so word\r\n\t\t * order is important - a la google. So this is what we want to\r\n\t\t * generate:\r\n\t\t * \r\n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\r\n\t\t */\r\n\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\r\n\t\t\tif ( word.charAt(0) === '\"' ) {\r\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\r\n\t\t\t\tword = m ? m[1] : word;\r\n\t\t\t}\r\n\r\n\t\t\treturn word.replace('\"', '');\r\n\t\t} );\r\n\r\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\r\n\t}\r\n\r\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\r\n}\r\n\r\n\r\n/**\r\n * Escape a string such that it can be used in a regular expression\r\n *  @param {string} sVal string to escape\r\n *  @returns {string} escaped string\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\r\n\r\nvar __filter_div = $('<div>')[0];\r\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\r\n\r\n// Update the filtering data for each row if needed (by invalidation or first run)\r\nfunction _fnFilterData ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar column;\r\n\tvar i, j, ien, jen, filterData, cellData, row;\r\n\tvar wasInvalidated = false;\r\n\r\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\trow = settings.aoData[i];\r\n\r\n\t\tif ( ! row._aFilterData ) {\r\n\t\t\tfilterData = [];\r\n\r\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\r\n\t\t\t\tcolumn = columns[j];\r\n\r\n\t\t\t\tif ( column.bSearchable ) {\r\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\r\n\r\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\r\n\t\t\t\t\t// should be altered to also allow strict type checking.\r\n\t\t\t\t\tif ( cellData === null ) {\r\n\t\t\t\t\t\tcellData = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\r\n\t\t\t\t\t\tcellData = cellData.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcellData = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If it looks like there is an HTML entity in the string,\r\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\r\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\r\n\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\r\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\r\n\t\t\t\t\t__filter_div.innerHTML = cellData;\r\n\t\t\t\t\tcellData = __filter_div_textContent ?\r\n\t\t\t\t\t\t__filter_div.textContent :\r\n\t\t\t\t\t\t__filter_div.innerText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cellData.replace ) {\r\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterData.push( cellData );\r\n\t\t\t}\r\n\r\n\t\t\trow._aFilterData = filterData;\r\n\t\t\trow._sFilterRow = filterData.join('  ');\r\n\t\t\twasInvalidated = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn wasInvalidated;\r\n}\r\n\r\n\r\n/**\r\n * Convert from the internal Hungarian notation to camelCase for external\r\n * interaction\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSearchToCamel ( obj )\r\n{\r\n\treturn {\r\n\t\tsearch:          obj.sSearch,\r\n\t\tsmart:           obj.bSmart,\r\n\t\tregex:           obj.bRegex,\r\n\t\tcaseInsensitive: obj.bCaseInsensitive\r\n\t};\r\n}\r\n\r\n\r\n\r\n/**\r\n * Convert from camelCase notation to the internal Hungarian. We could use the\r\n * Hungarian convert function here, but this is cleaner\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSearchToHung ( obj )\r\n{\r\n\treturn {\r\n\t\tsSearch:          obj.search,\r\n\t\tbSmart:           obj.smart,\r\n\t\tbRegex:           obj.regex,\r\n\t\tbCaseInsensitive: obj.caseInsensitive\r\n\t};\r\n}\r\n\r\n/**\r\n * Generate the node required for the info display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Information element\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlInfo ( settings )\r\n{\r\n\tvar\r\n\t\ttid = settings.sTableId,\r\n\t\tnodes = settings.aanFeatures.i,\r\n\t\tn = $('<div/>', {\r\n\t\t\t'class': settings.oClasses.sInfo,\r\n\t\t\t'id': ! nodes ? tid+'_info' : null\r\n\t\t} );\r\n\r\n\tif ( ! nodes ) {\r\n\t\t// Update display on each draw\r\n\t\tsettings.aoDrawCallback.push( {\r\n\t\t\t\"fn\": _fnUpdateInfo,\r\n\t\t\t\"sName\": \"information\"\r\n\t\t} );\r\n\r\n\t\tn\r\n\t\t\t.attr( 'role', 'status' )\r\n\t\t\t.attr( 'aria-live', 'polite' );\r\n\r\n\t\t// Table is described by our info div\r\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\r\n\t}\r\n\r\n\treturn n[0];\r\n}\r\n\r\n\r\n/**\r\n * Update the information elements in the display\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnUpdateInfo ( settings )\r\n{\r\n\t/* Show information about the table */\r\n\tvar nodes = settings.aanFeatures.i;\r\n\tif ( nodes.length === 0 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\tlang  = settings.oLanguage,\r\n\t\tstart = settings._iDisplayStart+1,\r\n\t\tend   = settings.fnDisplayEnd(),\r\n\t\tmax   = settings.fnRecordsTotal(),\r\n\t\ttotal = settings.fnRecordsDisplay(),\r\n\t\tout   = total ?\r\n\t\t\tlang.sInfo :\r\n\t\t\tlang.sInfoEmpty;\r\n\r\n\tif ( total !== max ) {\r\n\t\t/* Record set after filtering */\r\n\t\tout += ' ' + lang.sInfoFiltered;\r\n\t}\r\n\r\n\t// Convert the macros\r\n\tout += lang.sInfoPostFix;\r\n\tout = _fnInfoMacros( settings, out );\r\n\r\n\tvar callback = lang.fnInfoCallback;\r\n\tif ( callback !== null ) {\r\n\t\tout = callback.call( settings.oInstance,\r\n\t\t\tsettings, start, end, max, total, out\r\n\t\t);\r\n\t}\r\n\r\n\t$(nodes).html( out );\r\n}\r\n\r\n\r\nfunction _fnInfoMacros ( settings, str )\r\n{\r\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\r\n\t// internally\r\n\tvar\r\n\t\tformatter  = settings.fnFormatNumber,\r\n\t\tstart      = settings._iDisplayStart+1,\r\n\t\tlen        = settings._iDisplayLength,\r\n\t\tvis        = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn str.\r\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\r\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\r\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\r\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\r\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\r\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\r\n}\r\n\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitialise ( settings )\r\n{\r\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\r\n\tvar columns = settings.aoColumns, column;\r\n\tvar features = settings.oFeatures;\r\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\r\n\r\n\t/* Ensure that the table data is fully initialised */\r\n\tif ( ! settings.bInitialised ) {\r\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Show the display HTML options */\r\n\t_fnAddOptionsHtml( settings );\r\n\r\n\t/* Build and draw the header / footer for the table */\r\n\t_fnBuildHead( settings );\r\n\t_fnDrawHead( settings, settings.aoHeader );\r\n\t_fnDrawHead( settings, settings.aoFooter );\r\n\r\n\t/* Okay to show that something is going on now */\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t/* Calculate sizes for columns */\r\n\tif ( features.bAutoWidth ) {\r\n\t\t_fnCalculateColumnWidths( settings );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\r\n\t\tif ( column.sWidth ) {\r\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\r\n\t\t}\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\r\n\r\n\t// If there is default sorting required - let's do it. The sort function\r\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\r\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\r\n\t// data (show 'loading' message possibly)\r\n\t_fnReDraw( settings );\r\n\r\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\r\n\tvar dataSrc = _fnDataSource( settings );\r\n\tif ( dataSrc != 'ssp' || deferLoading ) {\r\n\t\t// if there is an ajax source load the data\r\n\t\tif ( dataSrc == 'ajax' ) {\r\n\t\t\t_fnBuildAjax( settings, [], function(json) {\r\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\r\n\r\n\t\t\t\t// Got the data - add it to the table\r\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\r\n\t\t\t\t\t_fnAddData( settings, aData[i] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset the init display for cookie saving. We've already done\r\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\r\n\t\t\t\t// it appear 'fresh'\r\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\r\n\r\n\t\t\t\t_fnReDraw( settings );\r\n\r\n\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t_fnInitComplete( settings, json );\r\n\t\t\t}, settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t_fnInitComplete( settings );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\r\n *    with client-side processing (optional)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitComplete ( settings, json )\r\n{\r\n\tsettings._bInitComplete = true;\r\n\r\n\t// When data was added after the initialisation (data or Ajax) we need to\r\n\t// calculate the column sizing\r\n\tif ( json || settings.oInit.aaData ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\r\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\r\n}\r\n\r\n\r\nfunction _fnLengthChange ( settings, val )\r\n{\r\n\tvar len = parseInt( val, 10 );\r\n\tsettings._iDisplayLength = len;\r\n\r\n\t_fnLengthOverflow( settings );\r\n\r\n\t// Fire length change event\r\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\r\n}\r\n\r\n\r\n/**\r\n * Generate the node required for user display length changing\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Display length feature node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlLength ( settings )\r\n{\r\n\tvar\r\n\t\tclasses  = settings.oClasses,\r\n\t\ttableId  = settings.sTableId,\r\n\t\tmenu     = settings.aLengthMenu,\r\n\t\td2       = Array.isArray( menu[0] ),\r\n\t\tlengths  = d2 ? menu[0] : menu,\r\n\t\tlanguage = d2 ? menu[1] : menu;\r\n\r\n\tvar select = $('<select/>', {\r\n\t\t'name':          tableId+'_length',\r\n\t\t'aria-controls': tableId,\r\n\t\t'class':         classes.sLengthSelect\r\n\t} );\r\n\r\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\r\n\t\tselect[0][ i ] = new Option(\r\n\t\t\ttypeof language[i] === 'number' ?\r\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\r\n\t\t\t\tlanguage[i],\r\n\t\t\tlengths[i]\r\n\t\t);\r\n\t}\r\n\r\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\r\n\tif ( ! settings.aanFeatures.l ) {\r\n\t\tdiv[0].id = tableId+'_length';\r\n\t}\r\n\r\n\tdiv.children().append(\r\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\r\n\t);\r\n\r\n\t// Can't use `select` variable as user might provide their own and the\r\n\t// reference is broken by the use of outerHTML\r\n\t$('select', div)\r\n\t\t.val( settings._iDisplayLength )\r\n\t\t.on( 'change.DT', function(e) {\r\n\t\t\t_fnLengthChange( settings, $(this).val() );\r\n\t\t\t_fnDraw( settings );\r\n\t\t} );\r\n\r\n\t// Update node value whenever anything changes the table's length\r\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t$('select', div).val( len );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn div[0];\r\n}\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Note that most of the paging logic is done in\r\n * DataTable.ext.pager\r\n */\r\n\r\n/**\r\n * Generate the node required for default pagination\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Pagination feature node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlPaginate ( settings )\r\n{\r\n\tvar\r\n\t\ttype   = settings.sPaginationType,\r\n\t\tplugin = DataTable.ext.pager[ type ],\r\n\t\tmodern = typeof plugin === 'function',\r\n\t\tredraw = function( settings ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t},\r\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\r\n\t\tfeatures = settings.aanFeatures;\r\n\r\n\tif ( ! modern ) {\r\n\t\tplugin.fnInit( settings, node, redraw );\r\n\t}\r\n\r\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\r\n\tif ( ! features.p )\r\n\t{\r\n\t\tnode.id = settings.sTableId+'_paginate';\r\n\r\n\t\tsettings.aoDrawCallback.push( {\r\n\t\t\t\"fn\": function( settings ) {\r\n\t\t\t\tif ( modern ) {\r\n\t\t\t\t\tvar\r\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\r\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\r\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\t\t\t\t\tall        = len === -1,\r\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\r\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\t\t\t\tbuttons = plugin(page, pages),\r\n\t\t\t\t\t\ti, ien;\r\n\r\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\r\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\r\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"sName\": \"pagination\"\r\n\t\t} );\r\n\t}\r\n\r\n\treturn node;\r\n}\r\n\r\n\r\n/**\r\n * Alter the display settings to change the page\r\n *  @param {object} settings DataTables settings object\r\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\r\n *    \"next\" or \"last\" or page number to jump to (integer)\r\n *  @param [bool] redraw Automatically draw the update or not\r\n *  @returns {bool} true page has changed, false - no change\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnPageChange ( settings, action, redraw )\r\n{\r\n\tvar\r\n\t\tstart     = settings._iDisplayStart,\r\n\t\tlen       = settings._iDisplayLength,\r\n\t\trecords   = settings.fnRecordsDisplay();\r\n\r\n\tif ( records === 0 || len === -1 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( typeof action === \"number\" )\r\n\t{\r\n\t\tstart = action * len;\r\n\r\n\t\tif ( start > records )\r\n\t\t{\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"first\" )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( action == \"previous\" )\r\n\t{\r\n\t\tstart = len >= 0 ?\r\n\t\t\tstart - len :\r\n\t\t\t0;\r\n\r\n\t\tif ( start < 0 )\r\n\t\t{\r\n\t\t  start = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"next\" )\r\n\t{\r\n\t\tif ( start + len < records )\r\n\t\t{\r\n\t\t\tstart += len;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"last\" )\r\n\t{\r\n\t\tstart = Math.floor( (records-1) / len) * len;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\r\n\t}\r\n\r\n\tvar changed = settings._iDisplayStart !== start;\r\n\tsettings._iDisplayStart = start;\r\n\r\n\tif ( changed ) {\r\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\r\n\r\n\t\tif ( redraw ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// No change event - paging was called, but no change\r\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\r\n\t}\r\n\r\n\treturn changed;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Generate the node required for the processing node\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Processing element\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlProcessing ( settings )\r\n{\r\n\treturn $('<div/>', {\r\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\r\n\t\t\t'class': settings.oClasses.sProcessing,\r\n\t\t\t'role': 'status'\r\n\t\t} )\r\n\t\t.html( settings.oLanguage.sProcessing )\r\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\r\n\t\t.insertBefore( settings.nTable )[0];\r\n}\r\n\r\n\r\n/**\r\n * Display or hide the processing indicator\r\n *  @param {object} settings dataTables settings object\r\n *  @param {bool} show Show the processing indicator (true) or not (false)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnProcessingDisplay ( settings, show )\r\n{\r\n\tif ( settings.oFeatures.bProcessing ) {\r\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\r\n}\r\n\r\n/**\r\n * Add any control elements for the table - specifically scrolling\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Node to add to the DOM\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlTable ( settings )\r\n{\r\n\tvar table = $(settings.nTable);\r\n\r\n\t// Scrolling from here on in\r\n\tvar scroll = settings.oScroll;\r\n\r\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\r\n\t\treturn settings.nTable;\r\n\t}\r\n\r\n\tvar scrollX = scroll.sX;\r\n\tvar scrollY = scroll.sY;\r\n\tvar classes = settings.oClasses;\r\n\tvar caption = table.children('caption');\r\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\r\n\tvar headerClone = $( table[0].cloneNode(false) );\r\n\tvar footerClone = $( table[0].cloneNode(false) );\r\n\tvar footer = table.children('tfoot');\r\n\tvar _div = '<div/>';\r\n\tvar size = function ( s ) {\r\n\t\treturn !s ? null : _fnStringToCss( s );\r\n\t};\r\n\r\n\tif ( ! footer.length ) {\r\n\t\tfooter = null;\r\n\t}\r\n\r\n\t/*\r\n\t * The HTML structure that we want to generate in this function is:\r\n\t *  div - scroller\r\n\t *    div - scroll head\r\n\t *      div - scroll head inner\r\n\t *        table - scroll head table\r\n\t *          thead - thead\r\n\t *    div - scroll body\r\n\t *      table - table (master table)\r\n\t *        thead - thead clone for sizing\r\n\t *        tbody - tbody\r\n\t *    div - scroll foot\r\n\t *      div - scroll foot inner\r\n\t *        table - scroll foot table\r\n\t *          tfoot - tfoot\r\n\t */\r\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\r\n\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\r\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\theaderClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('thead')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\twidth: size( scrollX )\r\n\t\t\t\t} )\r\n\t\t\t\t.append( table )\r\n\t\t);\r\n\r\n\tif ( footer ) {\r\n\t\tscroller.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\tfooterClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tvar children = scroller.children();\r\n\tvar scrollHead = children[0];\r\n\tvar scrollBody = children[1];\r\n\tvar scrollFoot = footer ? children[2] : null;\r\n\r\n\t// When the body is scrolled, then we also want to scroll the headers\r\n\tif ( scrollX ) {\r\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\r\n\t\t\tvar scrollLeft = this.scrollLeft;\r\n\r\n\t\t\tscrollHead.scrollLeft = scrollLeft;\r\n\r\n\t\t\tif ( footer ) {\r\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t$(scrollBody).css('max-height', scrollY);\r\n\tif (! scroll.bCollapse) {\r\n\t\t$(scrollBody).css('height', scrollY);\r\n\t}\r\n\r\n\tsettings.nScrollHead = scrollHead;\r\n\tsettings.nScrollBody = scrollBody;\r\n\tsettings.nScrollFoot = scrollFoot;\r\n\r\n\t// On redraw - align columns\r\n\tsettings.aoDrawCallback.push( {\r\n\t\t\"fn\": _fnScrollDraw,\r\n\t\t\"sName\": \"scrolling\"\r\n\t} );\r\n\r\n\treturn scroller[0];\r\n}\r\n\r\n\r\n\r\n/**\r\n * Update the header, footer and body tables for resizing - i.e. column\r\n * alignment.\r\n *\r\n * Welcome to the most horrible function DataTables. The process that this\r\n * function follows is basically:\r\n *   1. Re-create the table inside the scrolling div\r\n *   2. Take live measurements from the DOM\r\n *   3. Apply the measurements to align the columns\r\n *   4. Clean up\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnScrollDraw ( settings )\r\n{\r\n\t// Given that this is such a monster function, a lot of variables are use\r\n\t// to try and keep the minimised size as small as possible\r\n\tvar\r\n\t\tscroll         = settings.oScroll,\r\n\t\tscrollX        = scroll.sX,\r\n\t\tscrollXInner   = scroll.sXInner,\r\n\t\tscrollY        = scroll.sY,\r\n\t\tbarWidth       = scroll.iBarWidth,\r\n\t\tdivHeader      = $(settings.nScrollHead),\r\n\t\tdivHeaderStyle = divHeader[0].style,\r\n\t\tdivHeaderInner = divHeader.children('div'),\r\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\r\n\t\tdivHeaderTable = divHeaderInner.children('table'),\r\n\t\tdivBodyEl      = settings.nScrollBody,\r\n\t\tdivBody        = $(divBodyEl),\r\n\t\tdivBodyStyle   = divBodyEl.style,\r\n\t\tdivFooter      = $(settings.nScrollFoot),\r\n\t\tdivFooterInner = divFooter.children('div'),\r\n\t\tdivFooterTable = divFooterInner.children('table'),\r\n\t\theader         = $(settings.nTHead),\r\n\t\ttable          = $(settings.nTable),\r\n\t\ttableEl        = table[0],\r\n\t\ttableStyle     = tableEl.style,\r\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\r\n\t\tbrowser        = settings.oBrowser,\r\n\t\tie67           = browser.bScrollOversize,\r\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\r\n\t\theaderTrgEls, footerTrgEls,\r\n\t\theaderSrcEls, footerSrcEls,\r\n\t\theaderCopy, footerCopy,\r\n\t\theaderWidths=[], footerWidths=[],\r\n\t\theaderContent=[], footerContent=[],\r\n\t\tidx, correction, sanityWidth,\r\n\t\tzeroOut = function(nSizer) {\r\n\t\t\tvar style = nSizer.style;\r\n\t\t\tstyle.paddingTop = \"0\";\r\n\t\t\tstyle.paddingBottom = \"0\";\r\n\t\t\tstyle.borderTopWidth = \"0\";\r\n\t\t\tstyle.borderBottomWidth = \"0\";\r\n\t\t\tstyle.height = 0;\r\n\t\t};\r\n\r\n\t// If the scrollbar visibility has changed from the last draw, we need to\r\n\t// adjust the column sizes as the table width will have changed to account\r\n\t// for the scrollbar\r\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\r\n\t\r\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t\treturn; // adjust column sizing will call this function again\r\n\t}\r\n\telse {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t}\r\n\r\n\t/*\r\n\t * 1. Re-create the table inside the scrolling div\r\n\t */\r\n\r\n\t// Remove the old minimised thead and tfoot elements in the inner table\r\n\ttable.children('thead, tfoot').remove();\r\n\r\n\tif ( footer ) {\r\n\t\tfooterCopy = footer.clone().prependTo( table );\r\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\r\n\t\tfooterSrcEls = footerCopy.find('tr');\r\n\t\tfooterCopy.find('[id]').removeAttr('id');\r\n\t}\r\n\r\n\t// Clone the current header and footer elements and then place it into the inner table\r\n\theaderCopy = header.clone().prependTo( table );\r\n\theaderTrgEls = header.find('tr'); // original header is in its own table\r\n\theaderSrcEls = headerCopy.find('tr');\r\n\theaderCopy.find('th, td').removeAttr('tabindex');\r\n\theaderCopy.find('[id]').removeAttr('id');\r\n\r\n\r\n\t/*\r\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\r\n\t */\r\n\r\n\t// Remove old sizing and apply the calculated column widths\r\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\r\n\t// calculated sizes to this header\r\n\tif ( ! scrollX )\r\n\t{\r\n\t\tdivBodyStyle.width = '100%';\r\n\t\tdivHeader[0].style.width = '100%';\r\n\t}\r\n\r\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\r\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\r\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\r\n\t} );\r\n\r\n\tif ( footer ) {\r\n\t\t_fnApplyToChildren( function(n) {\r\n\t\t\tn.style.width = \"\";\r\n\t\t}, footerSrcEls );\r\n\t}\r\n\r\n\t// Size the table as a whole\r\n\tsanityWidth = table.outerWidth();\r\n\tif ( scrollX === \"\" ) {\r\n\t\t// No x scrolling\r\n\t\ttableStyle.width = \"100%\";\r\n\r\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\r\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\r\n\t\t// into account.\r\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\r\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\r\n\t\t) {\r\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\r\n\t\t}\r\n\r\n\t\t// Recalculate the sanity width\r\n\t\tsanityWidth = table.outerWidth();\r\n\t}\r\n\telse if ( scrollXInner !== \"\" ) {\r\n\t\t// legacy x scroll inner has been given - use it\r\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\r\n\r\n\t\t// Recalculate the sanity width\r\n\t\tsanityWidth = table.outerWidth();\r\n\t}\r\n\r\n\t// Hidden header should have zero height, so remove padding and borders. Then\r\n\t// set the width based on the real headers\r\n\r\n\t// Apply all styles in one pass\r\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\r\n\r\n\t// Read all widths in next pass\r\n\t_fnApplyToChildren( function(nSizer) {\r\n\t\tvar style = window.getComputedStyle ?\r\n\t\t\twindow.getComputedStyle(nSizer).width :\r\n\t\t\t_fnStringToCss( $(nSizer).width() );\r\n\r\n\t\theaderContent.push( nSizer.innerHTML );\r\n\t\theaderWidths.push( style );\r\n\t}, headerSrcEls );\r\n\r\n\t// Apply all widths in final pass\r\n\t_fnApplyToChildren( function(nToSize, i) {\r\n\t\tnToSize.style.width = headerWidths[i];\r\n\t}, headerTrgEls );\r\n\r\n\t$(headerSrcEls).css('height', 0);\r\n\r\n\t/* Same again with the footer if we have one */\r\n\tif ( footer )\r\n\t{\r\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\r\n\r\n\t\t_fnApplyToChildren( function(nSizer) {\r\n\t\t\tfooterContent.push( nSizer.innerHTML );\r\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\r\n\t\t}, footerSrcEls );\r\n\r\n\t\t_fnApplyToChildren( function(nToSize, i) {\r\n\t\t\tnToSize.style.width = footerWidths[i];\r\n\t\t}, footerTrgEls );\r\n\r\n\t\t$(footerSrcEls).height(0);\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * 3. Apply the measurements\r\n\t */\r\n\r\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\r\n\t// the content of the cell so that the width applied to the header and body\r\n\t// both match, but we want to hide it completely. We want to also fix their\r\n\t// width to what they currently are\r\n\t_fnApplyToChildren( function(nSizer, i) {\r\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\r\n\t\tnSizer.childNodes[0].style.height = \"0\";\r\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\r\n\t\tnSizer.style.width = headerWidths[i];\r\n\t}, headerSrcEls );\r\n\r\n\tif ( footer )\r\n\t{\r\n\t\t_fnApplyToChildren( function(nSizer, i) {\r\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\r\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\r\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\r\n\t\t\tnSizer.style.width = footerWidths[i];\r\n\t\t}, footerSrcEls );\r\n\t}\r\n\r\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\r\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\r\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\r\n\t{\r\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\r\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\r\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\r\n\t\t\t\tsanityWidth+barWidth :\r\n\t\t\t\tsanityWidth;\r\n\r\n\t\t// IE6/7 are a law unto themselves...\r\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\r\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\r\n\t\t) {\r\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\r\n\t\t}\r\n\r\n\t\t// And give the user a warning that we've stopped the table getting too small\r\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\r\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcorrection = '100%';\r\n\t}\r\n\r\n\t// Apply to the container elements\r\n\tdivBodyStyle.width = _fnStringToCss( correction );\r\n\tdivHeaderStyle.width = _fnStringToCss( correction );\r\n\r\n\tif ( footer ) {\r\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * 4. Clean up\r\n\t */\r\n\tif ( ! scrollY ) {\r\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\r\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\r\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\r\n\t\t */\r\n\t\tif ( ie67 ) {\r\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Finally set the width's of the header and footer tables */\r\n\tvar iOuterWidth = table.outerWidth();\r\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\r\n\r\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\r\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\r\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\r\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\r\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\r\n\tif ( footer ) {\r\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\r\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\t}\r\n\r\n\t// Correct DOM ordering for colgroup - comes before the thead\r\n\ttable.children('colgroup').insertBefore( table.children('thead') );\r\n\r\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\r\n\tdivBody.trigger('scroll');\r\n\r\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\r\n\t// only if we aren't holding the position\r\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\r\n\t\tdivBodyEl.scrollTop = 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Apply a given function to the display child nodes of an element array (typically\r\n * TD children of TR rows\r\n *  @param {function} fn Method to apply to the objects\r\n *  @param array {nodes} an1 List of elements to look through for display children\r\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyToChildren( fn, an1, an2 )\r\n{\r\n\tvar index=0, i=0, iLen=an1.length;\r\n\tvar nNode1, nNode2;\r\n\r\n\twhile ( i < iLen ) {\r\n\t\tnNode1 = an1[i].firstChild;\r\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\r\n\r\n\t\twhile ( nNode1 ) {\r\n\t\t\tif ( nNode1.nodeType === 1 ) {\r\n\t\t\t\tif ( an2 ) {\r\n\t\t\t\t\tfn( nNode1, nNode2, index );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfn( nNode1, index );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tnNode1 = nNode1.nextSibling;\r\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t}\r\n}\r\n\r\n\r\n\r\nvar __re_html_remove = /<.*?>/g;\r\n\r\n\r\n/**\r\n * Calculate the width of columns for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCalculateColumnWidths ( oSettings )\r\n{\r\n\tvar\r\n\t\ttable = oSettings.nTable,\r\n\t\tcolumns = oSettings.aoColumns,\r\n\t\tscroll = oSettings.oScroll,\r\n\t\tscrollY = scroll.sY,\r\n\t\tscrollX = scroll.sX,\r\n\t\tscrollXInner = scroll.sXInner,\r\n\t\tcolumnCount = columns.length,\r\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\r\n\t\theaderCells = $('th', oSettings.nTHead),\r\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\r\n\t\ttableContainer = table.parentNode,\r\n\t\tuserInputs = false,\r\n\t\ti, column, columnIdx, width, outerWidth,\r\n\t\tbrowser = oSettings.oBrowser,\r\n\t\tie67 = browser.bScrollOversize;\r\n\r\n\tvar styleWidth = table.style.width;\r\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\r\n\t\ttableWidthAttr = styleWidth;\r\n\t}\r\n\r\n\t/* Convert any user input sizes into pixel sizes */\r\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\tcolumn = columns[ visibleColumns[i] ];\r\n\r\n\t\tif ( column.sWidth !== null ) {\r\n\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\r\n\r\n\t\t\tuserInputs = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/* If the number of columns in the DOM equals the number that we have to\r\n\t * process in DataTables, then we can use the offsets that are created by\r\n\t * the web- browser. No custom sizes can be set in order for this to happen,\r\n\t * nor scrolling used\r\n\t */\r\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\r\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\r\n\t     columnCount == headerCells.length\r\n\t) {\r\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\r\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\r\n\r\n\t\t\tif ( colIdx !== null ) {\r\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Otherwise construct a single row, worst case, table with the widest\r\n\t\t// node in the data, assign any user defined widths, then insert it into\r\n\t\t// the DOM and allow the browser to do all the hard work of calculating\r\n\t\t// table widths\r\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\r\n\t\t\t.css( 'visibility', 'hidden' )\r\n\t\t\t.removeAttr( 'id' );\r\n\r\n\t\t// Clean up the table body\r\n\t\ttmpTable.find('tbody tr').remove();\r\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\r\n\r\n\t\t// Clone the table header and footer - we can't use the header / footer\r\n\t\t// from the cloned table, since if scrolling is active, the table's\r\n\t\t// real header and footer are contained in different table tags\r\n\t\ttmpTable.find('thead, tfoot').remove();\r\n\t\ttmpTable\r\n\t\t\t.append( $(oSettings.nTHead).clone() )\r\n\t\t\t.append( $(oSettings.nTFoot).clone() );\r\n\r\n\t\t// Remove any assigned widths from the footer (from scrolling)\r\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\r\n\r\n\t\t// Apply custom sizing to the cloned header\r\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\r\n\r\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\tcolumn = columns[ visibleColumns[i] ];\r\n\r\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\r\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\r\n\t\t\t\t'';\r\n\r\n\t\t\t// For scrollX we need to force the column width otherwise the\r\n\t\t\t// browser will collapse it. If this width is smaller than the\r\n\t\t\t// width the column requires, then it will have no effect\r\n\t\t\tif ( column.sWidthOrig && scrollX ) {\r\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\r\n\t\t\t\t\twidth: column.sWidthOrig,\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t} ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Find the widest cell for each column and put it into the table\r\n\t\tif ( oSettings.aoData.length ) {\r\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\t\tcolumnIdx = visibleColumns[i];\r\n\t\t\t\tcolumn = columns[ columnIdx ];\r\n\r\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\r\n\t\t\t\t\t.clone( false )\r\n\t\t\t\t\t.append( column.sContentPadding )\r\n\t\t\t\t\t.appendTo( tr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Tidy the temporary table - remove name attributes so there aren't\r\n\t\t// duplicated in the dom (radio elements for example)\r\n\t\t$('[name]', tmpTable).removeAttr('name');\r\n\r\n\t\t// Table has been built, attach to the document so we can work with it.\r\n\t\t// A holding element is used, positioned at the top of the container\r\n\t\t// with minimal height, so it has no effect on if the container scrolls\r\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\r\n\t\t// needed\r\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\theight: 1,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t} :\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\t.append( tmpTable )\r\n\t\t\t.appendTo( tableContainer );\r\n\r\n\t\t// When scrolling (X or Y) we want to set the width of the table as \r\n\t\t// appropriate. However, when not scrolling leave the table width as it\r\n\t\t// is. This results in slightly different, but I think correct behaviour\r\n\t\tif ( scrollX && scrollXInner ) {\r\n\t\t\ttmpTable.width( scrollXInner );\r\n\t\t}\r\n\t\telse if ( scrollX ) {\r\n\t\t\ttmpTable.css( 'width', 'auto' );\r\n\t\t\ttmpTable.removeAttr('width');\r\n\r\n\t\t\t// If there is no width attribute or style, then allow the table to\r\n\t\t\t// collapse\r\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\r\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( scrollY ) {\r\n\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t}\r\n\t\telse if ( tableWidthAttr ) {\r\n\t\t\ttmpTable.width( tableWidthAttr );\r\n\t\t}\r\n\r\n\t\t// Get the width of each column in the constructed table - we need to\r\n\t\t// know the inner width (so it can be assigned to the other table's\r\n\t\t// cells) and the outer width so we can calculate the full width of the\r\n\t\t// table. This is safe since DataTables requires a unique cell for each\r\n\t\t// column, but if ever a header can span multiple columns, this will\r\n\t\t// need to be modified.\r\n\t\tvar total = 0;\r\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\tvar cell = $(headerCells[i]);\r\n\t\t\tvar border = cell.outerWidth() - cell.width();\r\n\r\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\r\n\t\t\t// sub-pixel accuracy, which we then want to round up!\r\n\t\t\tvar bounding = browser.bBounding ?\r\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\r\n\t\t\t\tcell.outerWidth();\r\n\r\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\r\n\t\t\t// of the table might not equal the total given here (IE!).\r\n\t\t\ttotal += bounding;\r\n\r\n\t\t\t// Width for each column to use\r\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\r\n\t\t}\r\n\r\n\t\ttable.style.width = _fnStringToCss( total );\r\n\r\n\t\t// Finished with the table - ditch it\r\n\t\tholder.remove();\r\n\t}\r\n\r\n\t// If there is a width attr, we want to attach an event listener which\r\n\t// allows the table sizing to automatically adjust when the window is\r\n\t// resized. Use the width attr rather than CSS, since we can't know if the\r\n\t// CSS is a relative value or absolute - DOM read is always px.\r\n\tif ( tableWidthAttr ) {\r\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\r\n\t}\r\n\r\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\r\n\t\tvar bindResize = function () {\r\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\r\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\r\n\t\t\t} ) );\r\n\t\t};\r\n\r\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\r\n\t\t// To be removed in 1.11 which drops IE6/7 support\r\n\t\tif ( ie67 ) {\r\n\t\t\tsetTimeout( bindResize, 1000 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbindResize();\r\n\t\t}\r\n\r\n\t\toSettings._reszEvt = true;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Throttle the calls to a function. Arguments and context are maintained for\r\n * the throttled function\r\n *  @param {function} fn Function to be called\r\n *  @param {int} [freq=200] call frequency in mS\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnThrottle = DataTable.util.throttle;\r\n\r\n\r\n/**\r\n * Convert a CSS unit width to pixels (e.g. 2em)\r\n *  @param {string} width width to be converted\r\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\r\n *  @returns {int} width in pixels\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnConvertToWidth ( width, parent )\r\n{\r\n\tif ( ! width ) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tvar n = $('<div/>')\r\n\t\t.css( 'width', _fnStringToCss( width ) )\r\n\t\t.appendTo( parent || document.body );\r\n\r\n\tvar val = n[0].offsetWidth;\r\n\tn.remove();\r\n\r\n\treturn val;\r\n}\r\n\r\n\r\n/**\r\n * Get the widest node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {node} widest table node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetWidestNode( settings, colIdx )\r\n{\r\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\r\n\tif ( idx < 0 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar data = settings.aoData[ idx ];\r\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\r\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\r\n\t\tdata.anCells[ colIdx ];\r\n}\r\n\r\n\r\n/**\r\n * Get the maximum strlen for each data column\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {string} max string length for each column\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetMaxLenString( settings, colIdx )\r\n{\r\n\tvar s, max=-1, maxIdx = -1;\r\n\r\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\r\n\t\ts = s.replace( __re_html_remove, '' );\r\n\t\ts = s.replace( /&nbsp;/g, ' ' );\r\n\r\n\t\tif ( s.length > max ) {\r\n\t\t\tmax = s.length;\r\n\t\t\tmaxIdx = i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn maxIdx;\r\n}\r\n\r\n\r\n/**\r\n * Append a CSS unit (only if required) to a string\r\n *  @param {string} value to css-ify\r\n *  @returns {string} value with css unit\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnStringToCss( s )\r\n{\r\n\tif ( s === null ) {\r\n\t\treturn '0px';\r\n\t}\r\n\r\n\tif ( typeof s == 'number' ) {\r\n\t\treturn s < 0 ?\r\n\t\t\t'0px' :\r\n\t\t\ts+'px';\r\n\t}\r\n\r\n\t// Check it has a unit character already\r\n\treturn s.match(/\\d$/) ?\r\n\t\ts+'px' :\r\n\t\ts;\r\n}\r\n\r\n\r\n\r\nfunction _fnSortFlatten ( settings )\r\n{\r\n\tvar\r\n\t\ti, iLen, k, kLen,\r\n\t\taSort = [],\r\n\t\taiOrig = [],\r\n\t\taoColumns = settings.aoColumns,\r\n\t\taDataSort, iCol, sType, srcCol,\r\n\t\tfixed = settings.aaSortingFixed,\r\n\t\tfixedObj = $.isPlainObject( fixed ),\r\n\t\tnestedSort = [],\r\n\t\tadd = function ( a ) {\r\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\r\n\t\t\t\t// 1D array\r\n\t\t\t\tnestedSort.push( a );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// 2D array\r\n\t\t\t\t$.merge( nestedSort, a );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t// Build the sort array, with pre-fix and post-fix options if they have been\r\n\t// specified\r\n\tif ( Array.isArray( fixed ) ) {\r\n\t\tadd( fixed );\r\n\t}\r\n\r\n\tif ( fixedObj && fixed.pre ) {\r\n\t\tadd( fixed.pre );\r\n\t}\r\n\r\n\tadd( settings.aaSorting );\r\n\r\n\tif (fixedObj && fixed.post ) {\r\n\t\tadd( fixed.post );\r\n\t}\r\n\r\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\r\n\t{\r\n\t\tsrcCol = nestedSort[i][0];\r\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\r\n\r\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\r\n\t\t{\r\n\t\t\tiCol = aDataSort[k];\r\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\r\n\r\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\r\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\r\n\t\t\t}\r\n\r\n\t\t\taSort.push( {\r\n\t\t\t\tsrc:       srcCol,\r\n\t\t\t\tcol:       iCol,\r\n\t\t\t\tdir:       nestedSort[i][1],\r\n\t\t\t\tindex:     nestedSort[i]._idx,\r\n\t\t\t\ttype:      sType,\r\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn aSort;\r\n}\r\n\r\n/**\r\n * Change the order of the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n *  @todo This really needs split up!\r\n */\r\nfunction _fnSort ( oSettings )\r\n{\r\n\tvar\r\n\t\ti, ien, iLen, j, jLen, k, kLen,\r\n\t\tsDataType, nTh,\r\n\t\taiOrig = [],\r\n\t\toExtSort = DataTable.ext.type.order,\r\n\t\taoData = oSettings.aoData,\r\n\t\taoColumns = oSettings.aoColumns,\r\n\t\taDataSort, data, iCol, sType, oSort,\r\n\t\tformatters = 0,\r\n\t\tsortCol,\r\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\r\n\t\taSort;\r\n\r\n\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\r\n\t//   data is going to be used in the table?\r\n\t_fnColumnTypes( oSettings );\r\n\r\n\taSort = _fnSortFlatten( oSettings );\r\n\r\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\r\n\t\tsortCol = aSort[i];\r\n\r\n\t\t// Track if we can use the fast sort algorithm\r\n\t\tif ( sortCol.formatter ) {\r\n\t\t\tformatters++;\r\n\t\t}\r\n\r\n\t\t// Load the data needed for the sort, for each cell\r\n\t\t_fnSortData( oSettings, sortCol.col );\r\n\t}\r\n\r\n\t/* No sorting required if server-side or no sorting array */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\r\n\t{\r\n\t\t// Create a value - key array of the current row positions such that we can use their\r\n\t\t// current position during the sort, if values match, in order to perform stable sorting\r\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\r\n\t\t\taiOrig[ displayMaster[i] ] = i;\r\n\t\t}\r\n\r\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\r\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\r\n\t\t * follow on it's own, but this is what we want (example two column sorting):\r\n\t\t *  fnLocalSorting = function(a,b){\r\n\t\t *    var iTest;\r\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\r\n\t\t *      if (iTest !== 0)\r\n\t\t *        return iTest;\r\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\r\n\t\t *    if (iTest !== 0)\r\n\t\t *      return iTest;\r\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\r\n\t\t *  }\r\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\r\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\r\n\t\t * positions in the original data array to provide a stable sort.\r\n\t\t *\r\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\r\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\r\n\t\t * methods which do not have a pre-sort formatting function.\r\n\t\t */\r\n\t\tif ( formatters === aSort.length ) {\r\n\t\t\t// All sort types have formatting functions\r\n\t\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tx, y, k, test, sort,\r\n\t\t\t\t\tlen=aSort.length,\r\n\t\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = aiOrig[a];\r\n\t\t\t\ty = aiOrig[b];\r\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t} );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\r\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\r\n\t\t\t// methods.\r\n\t\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tx, y, k, l, test, sort, fn,\r\n\t\t\t\t\tlen=aSort.length,\r\n\t\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\r\n\t\t\t\t\ttest = fn( x, y );\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = aiOrig[a];\r\n\t\t\t\ty = aiOrig[b];\r\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Tell the draw function that we have sorted the data */\r\n\toSettings.bSorted = true;\r\n}\r\n\r\n\r\nfunction _fnSortAria ( settings )\r\n{\r\n\tvar label;\r\n\tvar nextSort;\r\n\tvar columns = settings.aoColumns;\r\n\tvar aSort = _fnSortFlatten( settings );\r\n\tvar oAria = settings.oLanguage.oAria;\r\n\r\n\t// ARIA attributes - need to loop all columns, to update all (removing old\r\n\t// attributes as needed)\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tvar col = columns[i];\r\n\t\tvar asSorting = col.asSorting;\r\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\r\n\t\tvar th = col.nTh;\r\n\r\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\r\n\t\t// attr() and removeAttr() methods...\r\n\t\tth.removeAttribute('aria-sort');\r\n\r\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\r\n\t\tif ( col.bSortable ) {\r\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\r\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\r\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnextSort = asSorting[0];\r\n\t\t\t}\r\n\r\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\r\n\t\t\t\toAria.sSortAscending :\r\n\t\t\t\toAria.sSortDescending\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel = sTitle;\r\n\t\t}\r\n\r\n\t\tth.setAttribute('aria-label', label);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Function to run on user sort request\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {boolean} [append=false] Append the requested sort to the existing\r\n *    sort if true (i.e. multi-column sort)\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortListener ( settings, colIdx, append, callback )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\tvar sorting = settings.aaSorting;\r\n\tvar asSorting = col.asSorting;\r\n\tvar nextSortIdx;\r\n\tvar next = function ( a, overflow ) {\r\n\t\tvar idx = a._idx;\r\n\t\tif ( idx === undefined ) {\r\n\t\t\tidx = $.inArray( a[1], asSorting );\r\n\t\t}\r\n\r\n\t\treturn idx+1 < asSorting.length ?\r\n\t\t\tidx+1 :\r\n\t\t\toverflow ?\r\n\t\t\t\tnull :\r\n\t\t\t\t0;\r\n\t};\r\n\r\n\t// Convert to 2D array if needed\r\n\tif ( typeof sorting[0] === 'number' ) {\r\n\t\tsorting = settings.aaSorting = [ sorting ];\r\n\t}\r\n\r\n\t// If appending the sort then we are multi-column sorting\r\n\tif ( append && settings.oFeatures.bSortMulti ) {\r\n\t\t// Are we already doing some kind of sort on this column?\r\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\r\n\r\n\t\tif ( sortIdx !== -1 ) {\r\n\t\t\t// Yes, modify the sort\r\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\r\n\r\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\r\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\r\n\t\t\t}\r\n\r\n\t\t\tif ( nextSortIdx === null ) {\r\n\t\t\t\tsorting.splice( sortIdx, 1 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\r\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No sort on this column yet\r\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\r\n\t\t\tsorting[sorting.length-1]._idx = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\r\n\t\t// Single column - already sorting on this column, modify the sort\r\n\t\tnextSortIdx = next( sorting[0] );\r\n\r\n\t\tsorting.length = 1;\r\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\r\n\t\tsorting[0]._idx = nextSortIdx;\r\n\t}\r\n\telse {\r\n\t\t// Single column - sort only on this column\r\n\t\tsorting.length = 0;\r\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\r\n\t\tsorting[0]._idx = 0;\r\n\t}\r\n\r\n\t// Run the sort by calling a full redraw\r\n\t_fnReDraw( settings );\r\n\r\n\t// callback used for async user interaction\r\n\tif ( typeof callback == 'function' ) {\r\n\t\tcallback( settings );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Attach a sort handler (click) to a node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\r\n\t_fnBindAction( attachTo, {}, function (e) {\r\n\t\t/* If the column is not sortable - don't to anything */\r\n\t\tif ( col.bSortable === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If processing is enabled use a timeout to allow the processing\r\n\t\t// display to be shown - otherwise to it synchronously\r\n\t\tif ( settings.oFeatures.bProcessing ) {\r\n\t\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\r\n\t\t\t\t// In server-side processing, the draw callback will remove the\r\n\t\t\t\t// processing display\r\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\r\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t}\r\n\t\t\t}, 0 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Set the sorting classes on table's body, Note: it is safe to call this function\r\n * when bSort and bSortClasses are false\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortingClasses( settings )\r\n{\r\n\tvar oldSort = settings.aLastSort;\r\n\tvar sortClass = settings.oClasses.sSortColumn;\r\n\tvar sort = _fnSortFlatten( settings );\r\n\tvar features = settings.oFeatures;\r\n\tvar i, ien, colIdx;\r\n\r\n\tif ( features.bSort && features.bSortClasses ) {\r\n\t\t// Remove old sorting classes\r\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = oldSort[i].src;\r\n\r\n\t\t\t// Remove column sorting\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\r\n\t\t// Add new column sorting\r\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = sort[i].src;\r\n\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aLastSort = sort;\r\n}\r\n\r\n\r\n// Get the data to sort a column, be it from cache, fresh (populating the\r\n// cache), or from a sort formatter\r\nfunction _fnSortData( settings, idx )\r\n{\r\n\t// Custom sorting function - provided by the sort data type\r\n\tvar column = settings.aoColumns[ idx ];\r\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\r\n\tvar customData;\r\n\r\n\tif ( customSort ) {\r\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\r\n\t\t\t_fnColumnIndexToVisible( settings, idx )\r\n\t\t);\r\n\t}\r\n\r\n\t// Use / populate cache\r\n\tvar row, cellData;\r\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\r\n\r\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\trow = settings.aoData[i];\r\n\r\n\t\tif ( ! row._aSortData ) {\r\n\t\t\trow._aSortData = [];\r\n\t\t}\r\n\r\n\t\tif ( ! row._aSortData[idx] || customSort ) {\r\n\t\t\tcellData = customSort ?\r\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\r\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\r\n\r\n\t\t\trow._aSortData[ idx ] = formatter ?\r\n\t\t\t\tformatter( cellData ) :\r\n\t\t\t\tcellData;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Save the state of a table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSaveState ( settings )\r\n{\r\n\tif (settings._bLoadingState) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Store the interesting variables */\r\n\tvar state = {\r\n\t\ttime:    +new Date(),\r\n\t\tstart:   settings._iDisplayStart,\r\n\t\tlength:  settings._iDisplayLength,\r\n\t\torder:   $.extend( true, [], settings.aaSorting ),\r\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\r\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\r\n\t\t\treturn {\r\n\t\t\t\tvisible: col.bVisible,\r\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\r\n\t\t\t};\r\n\t\t} )\r\n\t};\r\n\r\n\tsettings.oSavedState = state;\r\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\r\n\t\r\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\r\n\t{\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\r\n\t}\t\r\n}\r\n\r\n\r\n/**\r\n * Attempt to load a saved table state\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oInit DataTables init object so we can override settings\r\n *  @param {function} callback Callback to execute when the state has been loaded\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLoadState ( settings, oInit, callback )\r\n{\r\n\tif ( ! settings.oFeatures.bStateSave ) {\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar loaded = function(state) {\r\n\t\t_fnImplementState(settings, state, callback);\r\n\t}\r\n\r\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\r\n\r\n\tif ( state !== undefined ) {\r\n\t\t_fnImplementState( settings, state, callback );\r\n\t}\r\n\t// otherwise, wait for the loaded callback to be executed\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction _fnImplementState ( settings, s, callback) {\r\n\tvar i, ien;\r\n\tvar columns = settings.aoColumns;\r\n\tsettings._bLoadingState = true;\r\n\r\n\t// When StateRestore was introduced the state could now be implemented at any time\r\n\t// Not just initialisation. To do this an api instance is required in some places\r\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\r\n\r\n\tif ( ! s || ! s.time ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\r\n\t// cancelling of loading by returning false\r\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\r\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Reject old data\r\n\tvar duration = settings.iStateDuration;\r\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Number of columns have changed - all bets are off, no restore of settings\r\n\tif ( s.columns && columns.length !== s.columns.length ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Store the saved state so it might be accessed at any time\r\n\tsettings.oLoadedState = $.extend( true, {}, s );\r\n\r\n\t// Page Length\r\n\tif ( s.length !== undefined ) {\r\n\t\t// If already initialised just set the value directly so that the select element is also updated\r\n\t\tif (api) {\r\n\t\t\tapi.page.len(s.length)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings._iDisplayLength   = s.length;\r\n\t\t}\r\n\t}\r\n\r\n\t// Restore key features - todo - for 1.11 this needs to be done by\r\n\t// subscribed events\r\n\tif ( s.start !== undefined ) {\r\n\t\tif(api === null) {\r\n\t\t\tsettings._iDisplayStart    = s.start;\r\n\t\t\tsettings.iInitDisplayStart = s.start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\r\n\t\t}\r\n\t}\r\n\r\n\t// Order\r\n\tif ( s.order !== undefined ) {\r\n\t\tsettings.aaSorting = [];\r\n\t\t$.each( s.order, function ( i, col ) {\r\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\r\n\t\t\t\t[ 0, col[1] ] :\r\n\t\t\t\tcol\r\n\t\t\t);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Search\r\n\tif ( s.search !== undefined ) {\r\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\r\n\t}\r\n\r\n\t// Columns\r\n\tif ( s.columns ) {\r\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\r\n\t\t\tvar col = s.columns[i];\r\n\r\n\t\t\t// Visibility\r\n\t\t\tif ( col.visible !== undefined ) {\r\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\r\n\t\t\t\tif (api) {\r\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\r\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Search\r\n\t\t\tif ( col.search !== undefined ) {\r\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\r\n\t\tif (api) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t}\r\n\r\n\tsettings._bLoadingState = false;\r\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\r\n\tcallback();\r\n};\r\n\r\n\r\n/**\r\n * Return the settings object for a particular table\r\n *  @param {node} table table we are using as a dataTable\r\n *  @returns {object} Settings object - or null if not found\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSettingsFromNode ( table )\r\n{\r\n\tvar settings = DataTable.settings;\r\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\r\n\r\n\treturn idx !== -1 ?\r\n\t\tsettings[ idx ] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Log an error message\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} level log error messages, or display them to the user\r\n *  @param {string} msg error message\r\n *  @param {int} tn Technical note id to get more information about the error.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLog( settings, level, msg, tn )\r\n{\r\n\tmsg = 'DataTables warning: '+\r\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\r\n\r\n\tif ( tn ) {\r\n\t\tmsg += '. For more information about this error, please see '+\r\n\t\t'http://datatables.net/tn/'+tn;\r\n\t}\r\n\r\n\tif ( ! level  ) {\r\n\t\t// Backwards compatibility pre 1.10\r\n\t\tvar ext = DataTable.ext;\r\n\t\tvar type = ext.sErrMode || ext.errMode;\r\n\r\n\t\tif ( settings ) {\r\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\r\n\t\t}\r\n\r\n\t\tif ( type == 'alert' ) {\r\n\t\t\talert( msg );\r\n\t\t}\r\n\t\telse if ( type == 'throw' ) {\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\t\telse if ( typeof type == 'function' ) {\r\n\t\t\ttype( settings, tn, msg );\r\n\t\t}\r\n\t}\r\n\telse if ( window.console && console.log ) {\r\n\t\tconsole.log( msg );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * See if a property is defined on one object, if so assign it to the other object\r\n *  @param {object} ret target object\r\n *  @param {object} src source object\r\n *  @param {string} name property\r\n *  @param {string} [mappedName] name to map too - optional, name used if not given\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnMap( ret, src, name, mappedName )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\t$.each( name, function (i, val) {\r\n\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnMap( ret, src, val );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( mappedName === undefined ) {\r\n\t\tmappedName = name;\r\n\t}\r\n\r\n\tif ( src[name] !== undefined ) {\r\n\t\tret[mappedName] = src[name];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\r\n * shallow copy arrays. The reason we need to do this, is that we don't want to\r\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\r\n * able to override them, but we do want to deep copy arrays.\r\n *  @param {object} out Object to extend\r\n *  @param {object} extender Object from which the properties will be applied to\r\n *      out\r\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\r\n *      independent copy with the exception of the `data` or `aaData` parameters\r\n *      if they are present. This is so you can pass in a collection to\r\n *      DataTables and have that used as your data source without breaking the\r\n *      references\r\n *  @returns {object} out Reference, just for convenience - out === the return.\r\n *  @memberof DataTable#oApi\r\n *  @todo This doesn't take account of arrays inside the deep copied objects.\r\n */\r\nfunction _fnExtend( out, extender, breakRefs )\r\n{\r\n\tvar val;\r\n\r\n\tfor ( var prop in extender ) {\r\n\t\tif ( extender.hasOwnProperty(prop) ) {\r\n\t\t\tval = extender[prop];\r\n\r\n\t\t\tif ( $.isPlainObject( val ) ) {\r\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\r\n\t\t\t\t\tout[prop] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, out[prop], val );\r\n\t\t\t}\r\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\r\n\t\t\t\tout[prop] = val.slice();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout[prop] = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n\r\n/**\r\n * Bind an event handers to allow a click or return key to activate the callback.\r\n * This is good for accessibility since a return on the keyboard will have the\r\n * same effect as a click, if the element has focus.\r\n *  @param {element} n Element to bind the action to\r\n *  @param {object} oData Data object to pass to the triggered function\r\n *  @param {function} fn Callback function for when the event is triggered\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBindAction( n, oData, fn )\r\n{\r\n\t$(n)\r\n\t\t.on( 'click.DT', oData, function (e) {\r\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\r\n\t\t\t\tfn(e);\r\n\t\t\t} )\r\n\t\t.on( 'keypress.DT', oData, function (e){\r\n\t\t\t\tif ( e.which === 13 ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tfn(e);\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t\t.on( 'selectstart.DT', function () {\r\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\r\n\t\t\t\treturn false;\r\n\t\t\t} );\r\n}\r\n\r\n\r\n/**\r\n * Register a callback function. Easily allows a callback function to be added to\r\n * an array store of callback functions that can then all be called together.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\r\n *  @param {function} fn Function to be called back\r\n *  @param {string} sName Identifying name for the callback (i.e. a label)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\r\n{\r\n\tif ( fn )\r\n\t{\r\n\t\toSettings[sStore].push( {\r\n\t\t\t\"fn\": fn,\r\n\t\t\t\"sName\": sName\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Fire callback functions and trigger events. Note that the loop over the\r\n * callback array store is done backwards! Further note that you do not want to\r\n * fire off triggers in time sensitive applications (for example cell creation)\r\n * as its slow.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} callbackArr Name of the array storage for the callbacks in\r\n *      oSettings\r\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\r\n *      null no trigger is fired\r\n *  @param {array} args Array of arguments to pass to the callback function /\r\n *      trigger\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\r\n{\r\n\tvar ret = [];\r\n\r\n\tif ( callbackArr ) {\r\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\r\n\t\t\treturn val.fn.apply( settings.oInstance, args );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( eventName !== null ) {\r\n\t\tvar e = $.Event( eventName+'.dt' );\r\n\t\tvar table = $(settings.nTable);\r\n\r\n\t\ttable.trigger( e, args );\r\n\r\n\t\t// If not yet attached to the document, trigger the event\r\n\t\t// on the body directly to sort of simulate the bubble\r\n\t\tif (table.parents('body').length === 0) {\r\n\t\t\t$('body').trigger( e, args );\r\n\t\t}\r\n\r\n\t\tret.push( e.result );\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\nfunction _fnLengthOverflow ( settings )\r\n{\r\n\tvar\r\n\t\tstart = settings._iDisplayStart,\r\n\t\tend = settings.fnDisplayEnd(),\r\n\t\tlen = settings._iDisplayLength;\r\n\r\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\r\n\tif ( start >= end )\r\n\t{\r\n\t\tstart = end - len;\r\n\t}\r\n\r\n\t// Keep the start record on the current page\r\n\tstart -= (start % len);\r\n\r\n\tif ( len === -1 || start < 0 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\tsettings._iDisplayStart = start;\r\n}\r\n\r\n\r\nfunction _fnRenderer( settings, type )\r\n{\r\n\tvar renderer = settings.renderer;\r\n\tvar host = DataTable.ext.renderer[type];\r\n\r\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\r\n\t\t// Specific renderer for this type. If available use it, otherwise use\r\n\t\t// the default.\r\n\t\treturn host[renderer[type]] || host._;\r\n\t}\r\n\telse if ( typeof renderer === 'string' ) {\r\n\t\t// Common renderer - if there is one available for this type use it,\r\n\t\t// otherwise use the default\r\n\t\treturn host[renderer] || host._;\r\n\t}\r\n\r\n\t// Use the default\r\n\treturn host._;\r\n}\r\n\r\n\r\n/**\r\n * Detect the data source being used for the table. Used to simplify the code\r\n * a little (ajax) and to make it compress a little smaller.\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {string} Data source\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDataSource ( settings )\r\n{\r\n\tif ( settings.oFeatures.bServerSide ) {\r\n\t\treturn 'ssp';\r\n\t}\r\n\telse if ( settings.ajax || settings.sAjaxSource ) {\r\n\t\treturn 'ajax';\r\n\t}\r\n\treturn 'dom';\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Computed structure of the DataTables API, defined by the options passed to\r\n * `DataTable.Api.register()` when building the API.\r\n *\r\n * The structure is built in order to speed creation and extension of the Api\r\n * objects since the extensions are effectively pre-parsed.\r\n *\r\n * The array is an array of objects with the following structure, where this\r\n * base array represents the Api prototype base:\r\n *\r\n *     [\r\n *       {\r\n *         name:      'data'                -- string   - Property name\r\n *         val:       function () {},       -- function - Api method (or undefined if just an object\r\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n *       },\r\n *       {\r\n *         name:     'row'\r\n *         val:       {},\r\n *         methodExt: [ ... ],\r\n *         propExt:   [\r\n *           {\r\n *             name:      'data'\r\n *             val:       function () {},\r\n *             methodExt: [ ... ],\r\n *             propExt:   [ ... ]\r\n *           },\r\n *           ...\r\n *         ]\r\n *       }\r\n *     ]\r\n *\r\n * @type {Array}\r\n * @ignore\r\n */\r\nvar __apiStruct = [];\r\n\r\n\r\n/**\r\n * `Array.prototype` reference.\r\n *\r\n * @type object\r\n * @ignore\r\n */\r\nvar __arrayProto = Array.prototype;\r\n\r\n\r\n/**\r\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\r\n * take several different forms for ease of use.\r\n *\r\n * Each of the input parameter types will be converted to a DataTables settings\r\n * object where possible.\r\n *\r\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\r\n *   of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n *   * `DataTables.Api` - API instance\r\n * @return {array|null} Matching DataTables settings objects. `null` or\r\n *   `undefined` is returned if no matching DataTable is found.\r\n * @ignore\r\n */\r\nvar _toSettings = function ( mixed )\r\n{\r\n\tvar idx, jq;\r\n\tvar settings = DataTable.settings;\r\n\tvar tables = $.map( settings, function (el, i) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\tif ( ! mixed ) {\r\n\t\treturn [];\r\n\t}\r\n\telse if ( mixed.nTable && mixed.oApi ) {\r\n\t\t// DataTables settings object\r\n\t\treturn [ mixed ];\r\n\t}\r\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\r\n\t\t// Table node\r\n\t\tidx = $.inArray( mixed, tables );\r\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\r\n\t}\r\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\r\n\t\treturn mixed.settings().toArray();\r\n\t}\r\n\telse if ( typeof mixed === 'string' ) {\r\n\t\t// jQuery selector\r\n\t\tjq = $(mixed);\r\n\t}\r\n\telse if ( mixed instanceof $ ) {\r\n\t\t// jQuery object (also DataTables instance)\r\n\t\tjq = mixed;\r\n\t}\r\n\r\n\tif ( jq ) {\r\n\t\treturn jq.map( function(i) {\r\n\t\t\tidx = $.inArray( this, tables );\r\n\t\t\treturn idx !== -1 ? settings[idx] : null;\r\n\t\t} ).toArray();\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * DataTables API class - used to control and interface with  one or more\r\n * DataTables enhanced tables.\r\n *\r\n * The API class is heavily based on jQuery, presenting a chainable interface\r\n * that you can use to interact with tables. Each instance of the API class has\r\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\r\n * table, all tables on a page or a sub-set thereof.\r\n *\r\n * Additionally the API is designed to allow you to easily work with the data in\r\n * the tables, retrieving and manipulating it as required. This is done by\r\n * presenting the API class as an array like interface. The contents of the\r\n * array depend upon the actions requested by each method (for example\r\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\r\n * return an array of objects or arrays depending upon your table's\r\n * configuration). The API object has a number of array like methods (`push`,\r\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\r\n * `unique` etc) to assist your working with the data held in a table.\r\n *\r\n * Most methods (those which return an Api instance) are chainable, which means\r\n * the return from a method call also has all of the methods available that the\r\n * top level object had. For example, these two calls are equivalent:\r\n *\r\n *     // Not chained\r\n *     api.row.add( {...} );\r\n *     api.draw();\r\n *\r\n *     // Chained\r\n *     api.row.add( {...} ).draw();\r\n *\r\n * @class DataTable.Api\r\n * @param {array|object|string|jQuery} context DataTable identifier. This is\r\n *   used to define which DataTables enhanced tables this API will operate on.\r\n *   Can be one of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n * @param {array} [data] Data to initialise the Api instance with.\r\n *\r\n * @example\r\n *   // Direct initialisation during DataTables construction\r\n *   var api = $('#example').DataTable();\r\n *\r\n * @example\r\n *   // Initialisation using a DataTables jQuery object\r\n *   var api = $('#example').dataTable().api();\r\n *\r\n * @example\r\n *   // Initialisation as a constructor\r\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\r\n */\r\n_Api = function ( context, data )\r\n{\r\n\tif ( ! (this instanceof _Api) ) {\r\n\t\treturn new _Api( context, data );\r\n\t}\r\n\r\n\tvar settings = [];\r\n\tvar ctxSettings = function ( o ) {\r\n\t\tvar a = _toSettings( o );\r\n\t\tif ( a ) {\r\n\t\t\tsettings.push.apply( settings, a );\r\n\t\t}\r\n\t};\r\n\r\n\tif ( Array.isArray( context ) ) {\r\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tctxSettings( context[i] );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tctxSettings( context );\r\n\t}\r\n\r\n\t// Remove duplicates\r\n\tthis.context = _unique( settings );\r\n\r\n\t// Initial data\r\n\tif ( data ) {\r\n\t\t$.merge( this, data );\r\n\t}\r\n\r\n\t// selector\r\n\tthis.selector = {\r\n\t\trows: null,\r\n\t\tcols: null,\r\n\t\topts: null\r\n\t};\r\n\r\n\t_Api.extend( this, this, __apiStruct );\r\n};\r\n\r\nDataTable.Api = _Api;\r\n\r\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\r\n// isPlainObject.\r\n$.extend( _Api.prototype, {\r\n\tany: function ()\r\n\t{\r\n\t\treturn this.count() !== 0;\r\n\t},\r\n\r\n\r\n\tconcat:  __arrayProto.concat,\r\n\r\n\r\n\tcontext: [], // array of table settings objects\r\n\r\n\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.flatten().length;\r\n\t},\r\n\r\n\r\n\teach: function ( fn )\r\n\t{\r\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\r\n\t\t\tfn.call( this, this[i], i, this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\teq: function ( idx )\r\n\t{\r\n\t\tvar ctx = this.context;\r\n\r\n\t\treturn ctx.length > idx ?\r\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\r\n\t\t\tnull;\r\n\t},\r\n\r\n\r\n\tfilter: function ( fn )\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\tif ( __arrayProto.filter ) {\r\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\r\n\t\t\t\t\ta.push( this[i] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\r\n\tflatten: function ()\r\n\t{\r\n\t\tvar a = [];\r\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\r\n\t},\r\n\r\n\r\n\tjoin:    __arrayProto.join,\r\n\r\n\r\n\tindexOf: __arrayProto.indexOf || function (obj, start)\r\n\t{\r\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\r\n\t\t\tif ( this[i] === obj ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\titerator: function ( flatten, type, fn, alwaysNew ) {\r\n\t\tvar\r\n\t\t\ta = [], ret,\r\n\t\t\ti, ien, j, jen,\r\n\t\t\tcontext = this.context,\r\n\t\t\trows, items, item,\r\n\t\t\tselector = this.selector;\r\n\r\n\t\t// Argument shifting\r\n\t\tif ( typeof flatten === 'string' ) {\r\n\t\t\talwaysNew = fn;\r\n\t\t\tfn = type;\r\n\t\t\ttype = flatten;\r\n\t\t\tflatten = false;\r\n\t\t}\r\n\r\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tvar apiInst = new _Api( context[i] );\r\n\r\n\t\t\tif ( type === 'table' ) {\r\n\t\t\t\tret = fn.call( apiInst, context[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\r\n\t\t\t\t// this has same length as context - one entry for each table\r\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\r\n\t\t\t\t// columns and rows share the same structure.\r\n\t\t\t\t// 'this' is an array of column indexes for each context\r\n\t\t\t\titems = this[i];\r\n\r\n\t\t\t\tif ( type === 'column-rows' ) {\r\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\r\n\t\t\t\t\titem = items[j];\r\n\r\n\t\t\t\t\tif ( type === 'cell' ) {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\ta.push( ret );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( a.length || alwaysNew ) {\r\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\r\n\t\t\tvar apiSelector = api.selector;\r\n\t\t\tapiSelector.rows = selector.rows;\r\n\t\t\tapiSelector.cols = selector.cols;\r\n\t\t\tapiSelector.opts = selector.opts;\r\n\t\t\treturn api;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\r\n\t{\r\n\t\t// Bit cheeky...\r\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\r\n\t},\r\n\r\n\r\n\tlength:  0,\r\n\r\n\r\n\tmap: function ( fn )\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\tif ( __arrayProto.map ) {\r\n\t\t\ta = __arrayProto.map.call( this, fn, this );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\r\n\tpluck: function ( prop )\r\n\t{\r\n\t\tvar fn = DataTable.util.get(prop);\r\n\r\n\t\treturn this.map( function ( el ) {\r\n\t\t\treturn fn(el);\r\n\t\t} );\r\n\t},\r\n\r\n\tpop:     __arrayProto.pop,\r\n\r\n\r\n\tpush:    __arrayProto.push,\r\n\r\n\r\n\t// Does not return an API instance\r\n\treduce: __arrayProto.reduce || function ( fn, init )\r\n\t{\r\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\r\n\t},\r\n\r\n\r\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\r\n\t{\r\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\r\n\t},\r\n\r\n\r\n\treverse: __arrayProto.reverse,\r\n\r\n\r\n\t// Object with rows, columns and opts\r\n\tselector: null,\r\n\r\n\r\n\tshift:   __arrayProto.shift,\r\n\r\n\r\n\tslice: function () {\r\n\t\treturn new _Api( this.context, this );\r\n\t},\r\n\r\n\r\n\tsort:    __arrayProto.sort, // ? name - order?\r\n\r\n\r\n\tsplice:  __arrayProto.splice,\r\n\r\n\r\n\ttoArray: function ()\r\n\t{\r\n\t\treturn __arrayProto.slice.call( this );\r\n\t},\r\n\r\n\r\n\tto$: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\r\n\ttoJQuery: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\r\n\tunique: function ()\r\n\t{\r\n\t\treturn new _Api( this.context, _unique(this) );\r\n\t},\r\n\r\n\r\n\tunshift: __arrayProto.unshift\r\n} );\r\n\r\n\r\n_Api.extend = function ( scope, obj, ext )\r\n{\r\n\t// Only extend API instances and static properties of the API\r\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\tstruct,\r\n\t\tmethodScoping = function ( scope, fn, struc ) {\r\n\t\t\treturn function () {\r\n\t\t\t\tvar ret = fn.apply( scope, arguments );\r\n\r\n\t\t\t\t// Method extension\r\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\tstruct = ext[i];\r\n\r\n\t\t// Value\r\n\t\tobj[ struct.name ] = struct.type === 'function' ?\r\n\t\t\tmethodScoping( scope, struct.val, struct ) :\r\n\t\t\tstruct.type === 'object' ?\r\n\t\t\t\t{} :\r\n\t\t\t\tstruct.val;\r\n\r\n\t\tobj[ struct.name ].__dt_wrapper = true;\r\n\r\n\t\t// Property extension\r\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\r\n\t}\r\n};\r\n\r\n\r\n// @todo - Is there need for an augment function?\r\n// _Api.augment = function ( inst, name )\r\n// {\r\n// \t// Find src object in the structure from the name\r\n// \tvar parts = name.split('.');\r\n\r\n// \t_Api.extend( inst, obj );\r\n// };\r\n\r\n\r\n//     [\r\n//       {\r\n//         name:      'data'                -- string   - Property name\r\n//         val:       function () {},       -- function - Api method (or undefined if just an object\r\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n//       },\r\n//       {\r\n//         name:     'row'\r\n//         val:       {},\r\n//         methodExt: [ ... ],\r\n//         propExt:   [\r\n//           {\r\n//             name:      'data'\r\n//             val:       function () {},\r\n//             methodExt: [ ... ],\r\n//             propExt:   [ ... ]\r\n//           },\r\n//           ...\r\n//         ]\r\n//       }\r\n//     ]\r\n\r\n_Api.register = _api_register = function ( name, val )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\r\n\t\t\t_Api.register( name[j], val );\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\their = name.split('.'),\r\n\t\tstruct = __apiStruct,\r\n\t\tkey, method;\r\n\r\n\tvar find = function ( src, name ) {\r\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\r\n\t\t\tif ( src[i].name === name ) {\r\n\t\t\t\treturn src[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\r\n\t\tmethod = heir[i].indexOf('()') !== -1;\r\n\t\tkey = method ?\r\n\t\t\their[i].replace('()', '') :\r\n\t\t\their[i];\r\n\r\n\t\tvar src = find( struct, key );\r\n\t\tif ( ! src ) {\r\n\t\t\tsrc = {\r\n\t\t\t\tname:      key,\r\n\t\t\t\tval:       {},\r\n\t\t\t\tmethodExt: [],\r\n\t\t\t\tpropExt:   [],\r\n\t\t\t\ttype:      'object'\r\n\t\t\t};\r\n\t\t\tstruct.push( src );\r\n\t\t}\r\n\r\n\t\tif ( i === ien-1 ) {\r\n\t\t\tsrc.val = val;\r\n\t\t\tsrc.type = typeof val === 'function' ?\r\n\t\t\t\t'function' :\r\n\t\t\t\t$.isPlainObject( val ) ?\r\n\t\t\t\t\t'object' :\r\n\t\t\t\t\t'other';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstruct = method ?\r\n\t\t\t\tsrc.methodExt :\r\n\t\t\t\tsrc.propExt;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\r\n\t_Api.register( pluralName, val );\r\n\r\n\t_Api.register( singularName, function () {\r\n\t\tvar ret = val.apply( this, arguments );\r\n\r\n\t\tif ( ret === this ) {\r\n\t\t\t// Returned item is the API instance that was passed in, return it\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse if ( ret instanceof _Api ) {\r\n\t\t\t// New API instance returned, want the value from the first item\r\n\t\t\t// in the returned array for the singular result.\r\n\t\t\treturn ret.length ?\r\n\t\t\t\tArray.isArray( ret[0] ) ?\r\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\r\n\t\t\t\t\tret[0] :\r\n\t\t\t\tundefined;\r\n\t\t}\r\n\r\n\t\t// Non-API return - just fire it back\r\n\t\treturn ret;\r\n\t} );\r\n};\r\n\r\n\r\n/**\r\n * Selector for HTML tables. Apply the given selector to the give array of\r\n * DataTables settings objects.\r\n *\r\n * @param {string|integer} [selector] jQuery selector string or integer\r\n * @param  {array} Array of DataTables settings objects to be filtered\r\n * @return {array}\r\n * @ignore\r\n */\r\nvar __table_selector = function ( selector, a )\r\n{\r\n\tif ( Array.isArray(selector) ) {\r\n\t\treturn $.map( selector, function (item) {\r\n\t\t\treturn __table_selector(item, a);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Integer is used to pick out a table by index\r\n\tif ( typeof selector === 'number' ) {\r\n\t\treturn [ a[ selector ] ];\r\n\t}\r\n\r\n\t// Perform a jQuery selector on the table nodes\r\n\tvar nodes = $.map( a, function (el, i) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\treturn $(nodes)\r\n\t\t.filter( selector )\r\n\t\t.map( function (i) {\r\n\t\t\t// Need to translate back from the table node to the settings\r\n\t\t\tvar idx = $.inArray( this, nodes );\r\n\t\t\treturn a[ idx ];\r\n\t\t} )\r\n\t\t.toArray();\r\n};\r\n\r\n\r\n\r\n/**\r\n * Context selector for the API's context (i.e. the tables the API instance\r\n * refers to.\r\n *\r\n * @name    DataTable.Api#tables\r\n * @param {string|integer} [selector] Selector to pick which tables the iterator\r\n *   should operate on. If not given, all tables in the current context are\r\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\r\n *   select multiple tables or as an integer to select a single table.\r\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\r\n */\r\n_api_register( 'tables()', function ( selector ) {\r\n\t// A new instance is created if there was a selector specified\r\n\treturn selector !== undefined && selector !== null ?\r\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\r\n\t\tthis;\r\n} );\r\n\r\n\r\n_api_register( 'table()', function ( selector ) {\r\n\tvar tables = this.tables( selector );\r\n\tvar ctx = tables.context;\r\n\r\n\t// Truncate to the first matched table\r\n\treturn ctx.length ?\r\n\t\tnew _Api( ctx[0] ) :\r\n\t\ttables;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTable;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTBody;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTHead;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTFoot;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTableWrapper;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Redraw the tables in the current context.\r\n */\r\n_api_register( 'draw()', function ( paging ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( paging === 'page' ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ( typeof paging === 'string' ) {\r\n\t\t\t\tpaging = paging === 'full-hold' ?\r\n\t\t\t\t\tfalse :\r\n\t\t\t\t\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, paging===false );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get the current page index.\r\n *\r\n * @return {integer} Current page index (zero based)\r\n *//**\r\n * Set the current page.\r\n *\r\n * Note that if you attempt to show a page which does not exist, DataTables will\r\n * not throw an error, but rather reset the paging.\r\n *\r\n * @param {integer|string} action The paging action to take. This can be one of:\r\n *  * `integer` - The page index to jump to\r\n *  * `string` - An action to take:\r\n *    * `first` - Jump to first page.\r\n *    * `next` - Jump to the next page\r\n *    * `previous` - Jump to previous page\r\n *    * `last` - Jump to the last page.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page()', function ( action ) {\r\n\tif ( action === undefined ) {\r\n\t\treturn this.page.info().page; // not an expensive call\r\n\t}\r\n\r\n\t// else, have an action to take on all tables\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnPageChange( settings, action );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Paging information for the first table in the current context.\r\n *\r\n * If you require paging information for another table, use the `table()` method\r\n * with a suitable selector.\r\n *\r\n * @return {object} Object with the following properties set:\r\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\r\n *  * `pages` - Total number of pages\r\n *  * `start` - Display index for the first record shown on the current page\r\n *  * `end` - Display index for the last record shown on the current page\r\n *  * `length` - Display length (number of records). Note that generally `start\r\n *    + length = end`, but this is not always true, for example if there are\r\n *    only 2 records to show on the final page, with a length of 10.\r\n *  * `recordsTotal` - Full data set length\r\n *  * `recordsDisplay` - Data set length once the current filtering criterion\r\n *    are applied.\r\n */\r\n_api_register( 'page.info()', function ( action ) {\r\n\tif ( this.context.length === 0 ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tvar\r\n\t\tsettings   = this.context[0],\r\n\t\tstart      = settings._iDisplayStart,\r\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\r\n\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn {\r\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\r\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\"start\":          start,\r\n\t\t\"end\":            settings.fnDisplayEnd(),\r\n\t\t\"length\":         len,\r\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\r\n\t\t\"recordsDisplay\": visRecords,\r\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\r\n\t};\r\n} );\r\n\r\n\r\n/**\r\n * Get the current page length.\r\n *\r\n * @return {integer} Current page length. Note `-1` indicates that all records\r\n *   are to be shown.\r\n *//**\r\n * Set the current page length.\r\n *\r\n * @param {integer} Page length to set. Use `-1` to show all records.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page.len()', function ( len ) {\r\n\t// Note that we can't call this function 'length()' because `length`\r\n\t// is a Javascript property of functions which defines how many arguments\r\n\t// the function expects.\r\n\tif ( len === undefined ) {\r\n\t\treturn this.context.length !== 0 ?\r\n\t\t\tthis.context[0]._iDisplayLength :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// else, set the page length\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnLengthChange( settings, len );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\nvar __reload = function ( settings, holdPosition, callback ) {\r\n\t// Use the draw event to trigger a callback\r\n\tif ( callback ) {\r\n\t\tvar api = new _Api( settings );\r\n\r\n\t\tapi.one( 'draw', function () {\r\n\t\t\tcallback( api.ajax.json() );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t_fnReDraw( settings, holdPosition );\r\n\t}\r\n\telse {\r\n\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t// Cancel an existing request\r\n\t\tvar xhr = settings.jqXHR;\r\n\t\tif ( xhr && xhr.readyState !== 4 ) {\r\n\t\t\txhr.abort();\r\n\t\t}\r\n\r\n\t\t// Trigger xhr\r\n\t\t_fnBuildAjax( settings, [], function( json ) {\r\n\t\t\t_fnClearTable( settings );\r\n\r\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\t_fnAddData( settings, data[i] );\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, holdPosition );\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Get the JSON response from the last Ajax request that DataTables made to the\r\n * server. Note that this returns the JSON from the first table in the current\r\n * context.\r\n *\r\n * @return {object} JSON received from the server.\r\n */\r\n_api_register( 'ajax.json()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].json;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Get the data submitted in the last Ajax request\r\n */\r\n_api_register( 'ajax.params()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].oAjaxData;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Reload tables from the Ajax data source. Note that this function will\r\n * automatically re-draw the table when the remote data has been loaded.\r\n *\r\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\r\n *   position. A full re-sort and re-filter is performed when this method is\r\n *   called, which is why the pagination reset is the default action.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\r\n\treturn this.iterator( 'table', function (settings) {\r\n\t\t__reload( settings, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Get the current Ajax URL. Note that this returns the URL from the first\r\n * table in the current context.\r\n *\r\n * @return {string} Current Ajax source URL\r\n *//**\r\n * Set the Ajax URL. Note that this will set the URL for all tables in the\r\n * current context.\r\n *\r\n * @param {string} url URL to set.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url()', function ( url ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( url === undefined ) {\r\n\t\t// get\r\n\t\tif ( ctx.length === 0 ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tctx = ctx[0];\r\n\r\n\t\treturn ctx.ajax ?\r\n\t\t\t$.isPlainObject( ctx.ajax ) ?\r\n\t\t\t\tctx.ajax.url :\r\n\t\t\t\tctx.ajax :\r\n\t\t\tctx.sAjaxSource;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\r\n\t\t\tsettings.ajax.url = url;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings.ajax = url;\r\n\t\t}\r\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\r\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\r\n\t\t// value of `sAjaxSource` redundant.\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Load data from the newly set Ajax URL. Note that this method is only\r\n * available when `ajax.url()` is used to set a URL. Additionally, this method\r\n * has the same effect as calling `ajax.reload()` but is provided for\r\n * convenience when setting a new URL. Like `ajax.reload()` it will\r\n * automatically redraw the table once the remote data has been loaded.\r\n *\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\r\n\t// Same as a reload, but makes sense to present it for easy access after a\r\n\t// url change\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\t__reload( ctx, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n\r\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\r\n{\r\n\tvar\r\n\t\tout = [], res,\r\n\t\ta, i, ien, j, jen,\r\n\t\tselectorType = typeof selector;\r\n\r\n\t// Can't just check for isArray here, as an API or jQuery instance might be\r\n\t// given with their array like look\r\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\r\n\t\tselector = [ selector ];\r\n\t}\r\n\r\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\r\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\r\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\r\n\t\t\tselector[i].split(',') :\r\n\t\t\t[ selector[i] ];\r\n\r\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\r\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\r\n\r\n\t\t\tif ( res && res.length ) {\r\n\t\t\t\tout = out.concat( res );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// selector extensions\r\n\tvar ext = _ext.selector[ type ];\r\n\tif ( ext.length ) {\r\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\t\tout = ext[i]( settings, opts, out );\r\n\t\t}\r\n\t}\r\n\r\n\treturn _unique( out );\r\n};\r\n\r\n\r\nvar _selector_opts = function ( opts )\r\n{\r\n\tif ( ! opts ) {\r\n\t\topts = {};\r\n\t}\r\n\r\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\r\n\t// than search\r\n\tif ( opts.filter && opts.search === undefined ) {\r\n\t\topts.search = opts.filter;\r\n\t}\r\n\r\n\treturn $.extend( {\r\n\t\tsearch: 'none',\r\n\t\torder: 'current',\r\n\t\tpage: 'all'\r\n\t}, opts );\r\n};\r\n\r\n\r\nvar _selector_first = function ( inst )\r\n{\r\n\t// Reduce the API instance to the first item found\r\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\r\n\t\tif ( inst[i].length > 0 ) {\r\n\t\t\t// Assign the first element to the first item in the instance\r\n\t\t\t// and truncate the instance and context\r\n\t\t\tinst[0] = inst[i];\r\n\t\t\tinst[0].length = 1;\r\n\t\t\tinst.length = 1;\r\n\t\t\tinst.context = [ inst.context[i] ];\r\n\r\n\t\t\treturn inst;\r\n\t\t}\r\n\t}\r\n\r\n\t// Not found - return an empty instance\r\n\tinst.length = 0;\r\n\treturn inst;\r\n};\r\n\r\n\r\nvar _selector_row_indexes = function ( settings, opts )\r\n{\r\n\tvar\r\n\t\ti, ien, tmp, a=[],\r\n\t\tdisplayFiltered = settings.aiDisplay,\r\n\t\tdisplayMaster = settings.aiDisplayMaster;\r\n\r\n\tvar\r\n\t\tsearch = opts.search,  // none, applied, removed\r\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\r\n\t\tpage   = opts.page;    // all, current\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t// In server-side processing mode, most options are irrelevant since\r\n\t\t// rows not shown don't exist and the index order is the applied order\r\n\t\t// Removed is a special case - for consistency just return an empty\r\n\t\t// array\r\n\t\treturn search === 'removed' ?\r\n\t\t\t[] :\r\n\t\t\t_range( 0, displayMaster.length );\r\n\t}\r\n\telse if ( page == 'current' ) {\r\n\t\t// Current page implies that order=current and filter=applied, since it is\r\n\t\t// fairly senseless otherwise, regardless of what order and search actually\r\n\t\t// are\r\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\r\n\t\t\ta.push( displayFiltered[i] );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'current' || order == 'applied' ) {\r\n\t\tif ( search == 'none') {\r\n\t\t\ta = displayMaster.slice();\r\n\t\t}\r\n\t\telse if ( search == 'applied' ) {\r\n\t\t\ta = displayFiltered.slice();\r\n\t\t}\r\n\t\telse if ( search == 'removed' ) {\r\n\t\t\t// O(n+m) solution by creating a hash map\r\n\t\t\tvar displayFilteredMap = {};\r\n\r\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\r\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\r\n\t\t\t}\r\n\r\n\t\t\ta = $.map( displayMaster, function (el) {\r\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\r\n\t\t\t\t\tel :\r\n\t\t\t\t\tnull;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'index' || order == 'original' ) {\r\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tif ( search == 'none' ) {\r\n\t\t\t\ta.push( i );\r\n\t\t\t}\r\n\t\t\telse { // applied | removed\r\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\r\n\r\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\r\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\r\n\t\t\t\t{\r\n\t\t\t\t\ta.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a;\r\n};\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Rows\r\n *\r\n * {}          - no selector - use all available rows\r\n * {integer}   - row aoData index\r\n * {node}      - TR node\r\n * {string}    - jQuery selector to apply to the TR elements\r\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\r\n *\r\n */\r\nvar __row_selector = function ( settings, selector, opts )\r\n{\r\n\tvar rows;\r\n\tvar run = function ( sel ) {\r\n\t\tvar selInt = _intVal( sel );\r\n\t\tvar i, ien;\r\n\t\tvar aoData = settings.aoData;\r\n\r\n\t\t// Short cut - selector is a number and no options provided (default is\r\n\t\t// all records, so no need to check if the index is in there, since it\r\n\t\t// must be - dev error if the index doesn't exist).\r\n\t\tif ( selInt !== null && ! opts ) {\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\r\n\t\tif ( ! rows ) {\r\n\t\t\trows = _selector_row_indexes( settings, opts );\r\n\t\t}\r\n\r\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\r\n\t\t\t// Selector - integer\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\r\n\t\t\t// Selector - none\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\t// Selector - function\r\n\t\tif ( typeof sel === 'function' ) {\r\n\t\t\treturn $.map( rows, function (idx) {\r\n\t\t\t\tvar row = aoData[ idx ];\r\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Selector - node\r\n\t\tif ( sel.nodeName ) {\r\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\r\n\t\t\tvar cellIdx = sel._DT_CellIndex;\r\n\r\n\t\t\tif ( rowIdx !== undefined ) {\r\n\t\t\t\t// Make sure that the row is actually still present in the table\r\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\r\n\t\t\t\t\t[ rowIdx ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse if ( cellIdx ) {\r\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\r\n\t\t\t\t\t[ cellIdx.row ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\r\n\t\t\t\treturn host.length ?\r\n\t\t\t\t\t[ host.data('dt-row') ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ID selector. Want to always be able to select rows by id, regardless\r\n\t\t// of if the tr element has been created or not, so can't rely upon\r\n\t\t// jQuery here - hence a custom implementation. This does not match\r\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\r\n\t\t// but to select it using a CSS selector engine (like Sizzle or\r\n\t\t// querySelect) it would need to need to be escaped for some characters.\r\n\t\t// DataTables simplifies this for row selectors since you can select\r\n\t\t// only a row. A # indicates an id any anything that follows is the id -\r\n\t\t// unescaped.\r\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\r\n\t\t\t// get row index from id\r\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\r\n\t\t\tif ( rowObj !== undefined ) {\r\n\t\t\t\treturn [ rowObj.idx ];\r\n\t\t\t}\r\n\r\n\t\t\t// need to fall through to jQuery in case there is DOM id that\r\n\t\t\t// matches\r\n\t\t}\r\n\t\t\r\n\t\t// Get nodes in the order from the `rows` array with null values removed\r\n\t\tvar nodes = _removeEmpty(\r\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\r\n\t\t);\r\n\r\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\r\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\r\n\t\t// it also allows arrays, so this will cope with all three options\r\n\t\treturn $(nodes)\r\n\t\t\t.filter( sel )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn this._DT_RowIndex;\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\t};\r\n\r\n\treturn _selector_run( 'row', selector, run, settings, opts );\r\n};\r\n\r\n\r\n_api_register( 'rows()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __row_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in __row_selector?\r\n\tinst.selector.rows = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_register( 'rows().nodes()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn settings.aoData[ row ].nTr || undefined;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'rows().data()', function () {\r\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\tvar r = settings.aoData[ row ];\r\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\t_fnInvalidate( settings, row, src );\r\n\t} );\r\n} );\r\n\r\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn row;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\r\n\tvar a = [];\r\n\tvar context = this.context;\r\n\r\n\t// `iterator` will drop undefined values, but in this case we want them\r\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\r\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\r\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn new _Api( context, a );\r\n} );\r\n\r\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\r\n\tvar that = this;\r\n\r\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\r\n\t\tvar data = settings.aoData;\r\n\t\tvar rowData = data[ row ];\r\n\t\tvar i, ien, j, jen;\r\n\t\tvar loopRow, loopCells;\r\n\r\n\t\tdata.splice( row, 1 );\r\n\r\n\t\t// Update the cached indexes\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\tloopRow = data[i];\r\n\t\t\tloopCells = loopRow.anCells;\r\n\r\n\t\t\t// Rows\r\n\t\t\tif ( loopRow.nTr !== null ) {\r\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\r\n\t\t\t}\r\n\r\n\t\t\t// Cells\r\n\t\t\tif ( loopCells !== null ) {\r\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\r\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Delete from the display arrays\r\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\r\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\r\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\r\n\r\n\t\t// For server-side processing tables - subtract the deleted row from the count\r\n\t\tif ( settings._iRecordsDisplay > 0 ) {\r\n\t\t\tsettings._iRecordsDisplay--;\r\n\t\t}\r\n\r\n\t\t// Check for an 'overflow' they case for displaying the table\r\n\t\t_fnLengthOverflow( settings );\r\n\r\n\t\t// Remove the row's ID reference if there is one\r\n\t\tvar id = settings.rowIdFn( rowData._aData );\r\n\t\tif ( id !== undefined ) {\r\n\t\t\tdelete settings.aIds[ id ];\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.iterator( 'table', function ( settings ) {\r\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tsettings.aoData[i].idx = i;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'rows.add()', function ( rows ) {\r\n\tvar newRows = this.iterator( 'table', function ( settings ) {\r\n\t\t\tvar row, i, ien;\r\n\t\t\tvar out = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t}, 1 );\r\n\r\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\r\n\tvar modRows = this.rows( -1 );\r\n\tmodRows.pop();\r\n\t$.merge( modRows, newRows );\r\n\r\n\treturn modRows;\r\n} );\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( 'row()', function ( selector, opts ) {\r\n\treturn _selector_first( this.rows( selector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'row().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && this.length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._aData :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\tvar row = ctx[0].aoData[ this[0] ];\r\n\trow._aData = data;\r\n\r\n\t// If the DOM has an id, and the data source is an array\r\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\r\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\r\n\t}\r\n\r\n\t// Automatically invalidate\r\n\t_fnInvalidate( ctx[0], this[0], 'data' );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'row().node()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\treturn ctx.length && this.length ?\r\n\t\tctx[0].aoData[ this[0] ].nTr || null :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'row.add()', function ( row ) {\r\n\t// Allow a jQuery object to be passed in - only a single row is added from\r\n\t// it though - the first element in the set\r\n\tif ( row instanceof $ && row.length ) {\r\n\t\trow = row[0];\r\n\t}\r\n\r\n\tvar rows = this.iterator( 'table', function ( settings ) {\r\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\treturn _fnAddTr( settings, row )[0];\r\n\t\t}\r\n\t\treturn _fnAddData( settings, row );\r\n\t} );\r\n\r\n\t// Return an Api.rows() extended instance, with the newly added row selected\r\n\treturn this.row( rows[0] );\r\n} );\r\n\r\n\r\n$(document).on('plugin-init.dt', function (e, context) {\r\n\tvar api = new _Api( context );\r\n\tvar namespace = 'on-plugin-init';\r\n\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\r\n\tvar destroyEvent = 'destroy. ' + namespace;\r\n\r\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\r\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\r\n\t\t// internal loop\r\n\t\tvar idFn = settings.rowIdFn;\r\n\t\tvar data = settings.aoData;\r\n\t\tvar ids = [];\r\n\r\n\t\tfor (var i=0 ; i<data.length ; i++) {\r\n\t\t\tif (data[i]._detailsShow) {\r\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\td.childRows = ids;\r\n\t});\r\n\r\n\tapi.on( destroyEvent, function () {\r\n\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\r\n\t});\r\n\r\n\tvar loaded = api.state.loaded();\r\n\r\n\tif ( loaded && loaded.childRows ) {\r\n\t\tapi\r\n\t\t\t.rows( $.map(loaded.childRows, function (id){\r\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\r\n\t\t\t}) )\r\n\t\t\t.every( function () {\r\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\r\n\t\t\t});\r\n\t}\r\n});\r\n\r\nvar __details_add = function ( ctx, row, data, klass )\r\n{\r\n\t// Convert to array of TR elements\r\n\tvar rows = [];\r\n\tvar addRow = function ( r, k ) {\r\n\t\t// Recursion to allow for arrays of jQuery objects\r\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\r\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\r\n\t\t\t\taddRow( r[i], k );\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If we get a TR element, then just add it directly - up to the dev\r\n\t\t// to add the correct number of columns etc\r\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\r\n\t\t\trows.push( r );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Otherwise create a row with a wrapper\r\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\r\n\t\t\t$('td', created)\r\n\t\t\t\t.addClass( k )\r\n\t\t\t\t.html( r )\r\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\r\n\r\n\t\t\trows.push( created[0] );\r\n\t\t}\r\n\t};\r\n\r\n\taddRow( data, klass );\r\n\r\n\tif ( row._details ) {\r\n\t\trow._details.detach();\r\n\t}\r\n\r\n\trow._details = $(rows);\r\n\r\n\t// If the children were already shown, that state should be retained\r\n\tif ( row._detailsShow ) {\r\n\t\trow._details.insertAfter( row.nTr );\r\n\t}\r\n};\r\n\r\n\r\n// Make state saving of child row details async to allow them to be batch processed\r\nvar __details_state = DataTable.util.throttle(\r\n\tfunction (ctx) {\r\n\t\t_fnSaveState( ctx[0] )\r\n\t},\r\n\t500\r\n);\r\n\r\n\r\nvar __details_remove = function ( api, idx )\r\n{\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length ) {\r\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\r\n\r\n\t\tif ( row && row._details ) {\r\n\t\t\trow._details.remove();\r\n\r\n\t\t\trow._detailsShow = undefined;\r\n\t\t\trow._details = undefined;\r\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_display = function ( api, show ) {\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length && api.length ) {\r\n\t\tvar row = ctx[0].aoData[ api[0] ];\r\n\r\n\t\tif ( row._details ) {\r\n\t\t\trow._detailsShow = show;\r\n\r\n\t\t\tif ( show ) {\r\n\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow._details.detach();\r\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\r\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\r\n\r\n\t\t\t__details_events( ctx[0] );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_events = function ( settings )\r\n{\r\n\tvar api = new _Api( settings );\r\n\tvar namespace = '.dt.DT_details';\r\n\tvar drawEvent = 'draw'+namespace;\r\n\tvar colvisEvent = 'column-sizing'+namespace;\r\n\tvar destroyEvent = 'destroy'+namespace;\r\n\tvar data = settings.aoData;\r\n\r\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\r\n\r\n\tif ( _pluck( data, '_details' ).length > 0 ) {\r\n\t\t// On each draw, insert the required elements into the document\r\n\t\tapi.on( drawEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\r\n\t\t\t\t// Internal data grab\r\n\t\t\t\tvar row = data[ idx ];\r\n\r\n\t\t\t\tif ( row._detailsShow ) {\r\n\t\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// Column visibility change - update the colspan\r\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the colspan for the details rows (note, only if it already has\r\n\t\t\t// a colspan)\r\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = data[i];\r\n\r\n\t\t\t\tif ( row._details ) {\r\n\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Table destroyed - nuke any child rows\r\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( data[i]._details ) {\r\n\t\t\t\t\t__details_remove( api, i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n// Strings for the method names to help minification\r\nvar _emp = '';\r\nvar _child_obj = _emp+'row().child';\r\nvar _child_mth = _child_obj+'()';\r\n\r\n// data can be:\r\n//  tr\r\n//  string\r\n//  jQuery or array of any of the above\r\n_api_register( _child_mth, function ( data, klass ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length && this.length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._details :\r\n\t\t\tundefined;\r\n\t}\r\n\telse if ( data === true ) {\r\n\t\t// show\r\n\t\tthis.child.show();\r\n\t}\r\n\telse if ( data === false ) {\r\n\t\t// remove\r\n\t\t__details_remove( this );\r\n\t}\r\n\telse if ( ctx.length && this.length ) {\r\n\t\t// set\r\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\r\n\t}\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.show()',\r\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\r\n], function ( show ) {   // it returns an object and this method is not executed)\r\n\t__details_display( this, true );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.hide()',\r\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\r\n], function () {         // it returns an object and this method is not executed)\r\n\t__details_display( this, false );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.remove()',\r\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\r\n], function () {           // it returns an object and this method is not executed)\r\n\t__details_remove( this );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( _child_obj+'.isShown()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length && this.length ) {\r\n\t\t// _detailsShown as false or undefined will fall through to return false\r\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\r\n\t}\r\n\treturn false;\r\n} );\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Columns\r\n *\r\n * {integer}           - column index (>=0 count from left, <0 count from right)\r\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\r\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\r\n * \"{string}:name\"     - column name\r\n * \"{string}\"          - jQuery selector on column header nodes\r\n *\r\n */\r\n\r\n// can be an array of these items, comma separated list, or an array of comma\r\n// separated lists\r\n\r\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\r\n\r\n\r\n// r1 and r2 are redundant - but it means that the parameters match for the\r\n// iterator callback in columns().data()\r\nvar __columnData = function ( settings, column, r1, r2, rows ) {\r\n\tvar a = [];\r\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\r\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\r\n\t}\r\n\treturn a;\r\n};\r\n\r\n\r\nvar __column_selector = function ( settings, selector, opts )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tnames = _pluck( columns, 'sName' ),\r\n\t\tnodes = _pluck( columns, 'nTh' );\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar selInt = _intVal( s );\r\n\r\n\t\t// Selector - all\r\n\t\tif ( s === '' ) {\r\n\t\t\treturn _range( columns.length );\r\n\t\t}\r\n\r\n\t\t// Selector - index\r\n\t\tif ( selInt !== null ) {\r\n\t\t\treturn [ selInt >= 0 ?\r\n\t\t\t\tselInt : // Count from left\r\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// Selector = function\r\n\t\tif ( typeof s === 'function' ) {\r\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\r\n\r\n\t\t\treturn $.map( columns, function (col, idx) {\r\n\t\t\t\treturn s(\r\n\t\t\t\t\t\tidx,\r\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\r\n\t\t\t\t\t\tnodes[ idx ]\r\n\t\t\t\t\t) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// jQuery or string selector\r\n\t\tvar match = typeof s === 'string' ?\r\n\t\t\ts.match( __re_column_selector ) :\r\n\t\t\t'';\r\n\r\n\t\tif ( match ) {\r\n\t\t\tswitch( match[2] ) {\r\n\t\t\t\tcase 'visIdx':\r\n\t\t\t\tcase 'visible':\r\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\r\n\t\t\t\t\t// Visible index given, convert to column index\r\n\t\t\t\t\tif ( idx < 0 ) {\r\n\t\t\t\t\t\t// Counting from the right\r\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\r\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Counting from the left\r\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\r\n\r\n\t\t\t\tcase 'name':\r\n\t\t\t\t\t// match by name. `names` is column index complete and in order\r\n\t\t\t\t\treturn $.map( names, function (name, i) {\r\n\t\t\t\t\t\treturn name === match[1] ? i : null;\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cell in the table body\r\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\r\n\t\t\treturn [ s._DT_CellIndex.column ];\r\n\t\t}\r\n\r\n\t\t// jQuery selector on the TH elements for the columns\r\n\t\tvar jqResult = $( nodes )\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\r\n\t\t// a child or such an element\r\n\t\tvar host = $(s).closest('*[data-dt-column]');\r\n\t\treturn host.length ?\r\n\t\t\t[ host.data('dt-column') ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'column', selector, run, settings, opts );\r\n};\r\n\r\n\r\nvar __setColumnVis = function ( settings, column, vis ) {\r\n\tvar\r\n\t\tcols = settings.aoColumns,\r\n\t\tcol  = cols[ column ],\r\n\t\tdata = settings.aoData,\r\n\t\trow, cells, i, ien, tr;\r\n\r\n\t// Get\r\n\tif ( vis === undefined ) {\r\n\t\treturn col.bVisible;\r\n\t}\r\n\r\n\t// Set\r\n\t// No change\r\n\tif ( col.bVisible === vis ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( vis ) {\r\n\t\t// Insert column\r\n\t\t// Need to decide if we should use appendChild or insertBefore\r\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\r\n\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\ttr = data[i].nTr;\r\n\t\t\tcells = data[i].anCells;\r\n\r\n\t\t\tif ( tr ) {\r\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\r\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Remove column\r\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\r\n\t}\r\n\r\n\t// Common actions\r\n\tcol.bVisible = vis;\r\n};\r\n\r\n\r\n_api_register( 'columns()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __column_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in _row_selector?\r\n\tinst.selector.cols = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].nTh;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].nTf;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\r\n\treturn this.iterator( 'column-rows', __columnData, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].mData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows,\r\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\r\n\t\t);\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\r\n\tvar that = this;\r\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\r\n\t\tif ( vis === undefined ) {\r\n\t\t\treturn settings.aoColumns[ column ].bVisible;\r\n\t\t} // else\r\n\t\t__setColumnVis( settings, column, vis );\r\n\t} );\r\n\r\n\t// Group the column visibility changes\r\n\tif ( vis !== undefined ) {\r\n\t\tthis.iterator( 'table', function ( settings ) {\r\n\t\t\t// Redraw the header after changes\r\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\r\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\r\n\t\r\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\r\n\t\t\t// listeners to do this - only need to update the empty table item here\r\n\t\t\tif ( ! settings.aiDisplay.length ) {\r\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\r\n\t\t\t}\r\n\t\r\n\t\t\t_fnSaveState( settings );\r\n\r\n\t\t\t// Second loop once the first is done for events\r\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\r\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\r\n\t\t\t} );\r\n\r\n\t\t\tif ( calc === undefined || calc ) {\r\n\t\t\t\tthat.columns.adjust();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn ret;\r\n} );\r\n\r\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn type === 'visible' ?\r\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\r\n\t\t\tcolumn;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'columns.adjust()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'column.index()', function ( type, idx ) {\r\n\tif ( this.context.length !== 0 ) {\r\n\t\tvar ctx = this.context[0];\r\n\r\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\r\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\r\n\t\t}\r\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\r\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n_api_register( 'column()', function ( selector, opts ) {\r\n\treturn _selector_first( this.columns( selector, opts ) );\r\n} );\r\n\r\nvar __cell_selector = function ( settings, selector, opts )\r\n{\r\n\tvar data = settings.aoData;\r\n\tvar rows = _selector_row_indexes( settings, opts );\r\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\r\n\tvar allCells = $(_flatten( [], cells ));\r\n\tvar row;\r\n\tvar columns = settings.aoColumns.length;\r\n\tvar a, i, ien, j, o, host;\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar fnSelector = typeof s === 'function';\r\n\r\n\t\tif ( s === null || s === undefined || fnSelector ) {\r\n\t\t\t// All cells and function selectors\r\n\t\t\ta = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\r\n\t\t\t\t\to = {\r\n\t\t\t\t\t\trow: row,\r\n\t\t\t\t\t\tcolumn: j\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( fnSelector ) {\r\n\t\t\t\t\t\t// Selector - function\r\n\t\t\t\t\t\thost = data[ row ];\r\n\r\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\r\n\t\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Selector - all\r\n\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\t\r\n\t\t// Selector - index\r\n\t\tif ( $.isPlainObject( s ) ) {\r\n\t\t\t// Valid cell index and its in the array of selectable rows\r\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\r\n\t\t\t\t[s] :\r\n\t\t\t\t[];\r\n\t\t}\r\n\r\n\t\t// Selector - jQuery filtered cells\r\n\t\tvar jqResult = allCells\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function (i, el) {\r\n\t\t\t\treturn { // use a new object, in case someone changes the values\r\n\t\t\t\t\trow:    el._DT_CellIndex.row,\r\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\r\n \t\t\t\t};\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise the selector is a node, and there is one last option - the\r\n\t\t// element might be a child of an element which has dt-row and dt-column\r\n\t\t// data attributes\r\n\t\thost = $(s).closest('*[data-dt-row]');\r\n\t\treturn host.length ?\r\n\t\t\t[ {\r\n\t\t\t\trow: host.data('dt-row'),\r\n\t\t\t\tcolumn: host.data('dt-column')\r\n\t\t\t} ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'cell', selector, run, settings, opts );\r\n};\r\n\r\n\r\n\r\n\r\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\r\n\t// Argument shifting\r\n\tif ( $.isPlainObject( rowSelector ) ) {\r\n\t\t// Indexes\r\n\t\tif ( rowSelector.row === undefined ) {\r\n\t\t\t// Selector options in first parameter\r\n\t\t\topts = rowSelector;\r\n\t\t\trowSelector = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Cell index objects in first parameter\r\n\t\t\topts = columnSelector;\r\n\t\t\tcolumnSelector = null;\r\n\t\t}\r\n\t}\r\n\tif ( $.isPlainObject( columnSelector ) ) {\r\n\t\topts = columnSelector;\r\n\t\tcolumnSelector = null;\r\n\t}\r\n\r\n\t// Cell selector\r\n\tif ( columnSelector === null || columnSelector === undefined ) {\r\n\t\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\r\n\t\t} );\r\n\t}\r\n\r\n\t// The default built in options need to apply to row and columns\r\n\tvar internalOpts = opts ? {\r\n\t\tpage: opts.page,\r\n\t\torder: opts.order,\r\n\t\tsearch: opts.search\r\n\t} : {};\r\n\r\n\t// Row + column selector\r\n\tvar columns = this.columns( columnSelector, internalOpts );\r\n\tvar rows = this.rows( rowSelector, internalOpts );\r\n\tvar i, ien, j, jen;\r\n\r\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\r\n\t\tvar a = [];\r\n\r\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\r\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\r\n\t\t\t\ta.push( {\r\n\t\t\t\t\trow:    rows[idx][i],\r\n\t\t\t\t\tcolumn: columns[idx][j]\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t}, 1 );\r\n\r\n\t// There is currently only one extension which uses a cell selector extension\r\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\r\n\t// an extension specific check at the moment\r\n\tvar cells = opts && opts.selected ?\r\n\t\tthis.cells( cellsNoOpts, opts ) :\r\n\t\tcellsNoOpts;\r\n\r\n\t$.extend( cells.selector, {\r\n\t\tcols: columnSelector,\r\n\t\trows: rowSelector,\r\n\t\topts: opts\r\n\t} );\r\n\r\n\treturn cells;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\tvar data = settings.aoData[ row ];\r\n\r\n\t\treturn data && data.anCells ?\r\n\t\t\tdata.anCells[ column ] :\r\n\t\t\tundefined;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_register( 'cells().data()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\r\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\r\n\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn settings.aoData[ row ][ type ][ column ];\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column, type );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn {\r\n\t\t\trow: row,\r\n\t\t\tcolumn: column,\r\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\r\n\t\t};\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\t_fnInvalidate( settings, row, src, column );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\r\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'cell().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\tvar cell = this[0];\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && cell.length ?\r\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\r\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get current ordering (sorting) that has been applied to the table.\r\n *\r\n * @returns {array} 2D array containing the sorting information for the first\r\n *   table in the current context. Each element in the parent array represents\r\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\r\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\r\n *   the column index that the sorting condition applies to, the second is the\r\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\r\n *   index of the sorting order from the `column.sorting` initialisation array.\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {integer} order Column index to sort upon.\r\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 1D array of sorting information to be applied.\r\n * @param {array} [...] Optional additional sorting conditions\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 2D array of sorting information to be applied.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order()', function ( order, dir ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( order === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].aaSorting :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\tif ( typeof order === 'number' ) {\r\n\t\t// Simple column / direction passed in\r\n\t\torder = [ [ order, dir ] ];\r\n\t}\r\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\r\n\t\t// Arguments passed in (list of 1D arrays)\r\n\t\torder = Array.prototype.slice.call( arguments );\r\n\t}\r\n\t// otherwise a 2D array was passed in\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSorting = order.slice();\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Attach a sort listener to an element for a given column\r\n *\r\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\r\n *   listener to. This can take the form of a single DOM node, a jQuery\r\n *   collection of nodes or a jQuery selector which will identify the node(s).\r\n * @param {integer} column the column that a click on this node will sort on\r\n * @param {function} [callback] callback function when sort is run\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order.listener()', function ( node, column, callback ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSortAttachListener( settings, node, column, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'order.fixed()', function ( set ) {\r\n\tif ( ! set ) {\r\n\t\tvar ctx = this.context;\r\n\t\tvar fixed = ctx.length ?\r\n\t\t\tctx[0].aaSortingFixed :\r\n\t\t\tundefined;\r\n\r\n\t\treturn Array.isArray( fixed ) ?\r\n\t\t\t{ pre: fixed } :\r\n\t\t\tfixed;\r\n\t}\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\r\n\t} );\r\n} );\r\n\r\n\r\n// Order by the selected column(s)\r\n_api_register( [\r\n\t'columns().order()',\r\n\t'column().order()'\r\n], function ( dir ) {\r\n\tvar that = this;\r\n\r\n\treturn this.iterator( 'table', function ( settings, i ) {\r\n\t\tvar sort = [];\r\n\r\n\t\t$.each( that[i], function (j, col) {\r\n\t\t\tsort.push( [ col, dir ] );\r\n\t\t} );\r\n\r\n\t\tsettings.aaSorting = sort;\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( input === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].oPreviousSearch.sSearch :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\r\n\t\t\t\"sSearch\": input+\"\",\r\n\t\t\t\"bRegex\":  regex === null ? false : regex,\r\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\r\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n\t\t} ), 1 );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_registerPlural(\r\n\t'columns().search()',\r\n\t'column().search()',\r\n\tfunction ( input, regex, smart, caseInsen ) {\r\n\t\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\t\tvar preSearch = settings.aoPreSearchCols;\r\n\r\n\t\t\tif ( input === undefined ) {\r\n\t\t\t\t// get\r\n\t\t\t\treturn preSearch[ column ].sSearch;\r\n\t\t\t}\r\n\r\n\t\t\t// set\r\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$.extend( preSearch[ column ], {\r\n\t\t\t\t\"sSearch\": input+\"\",\r\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\r\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\r\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n\t\t\t} );\r\n\r\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\r\n\t\t} );\r\n\t}\r\n);\r\n\r\n/*\r\n * State API methods\r\n */\r\n\r\n_api_register( 'state()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oSavedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t// Save an empty object\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'state.loaded()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oLoadedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.save()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSaveState( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Set the jQuery or window object to be used by DataTables\r\n *\r\n * @param {*} module Library / container object\r\n * @param {string} type Library or container type `lib` or `win`.\r\n */\r\nDataTable.use = function (module, type) {\r\n\tif (type === 'lib' || module.fn) {\r\n\t\t$ = module;\r\n\t}\r\n\telse if (type == 'win' || module.document) {\r\n\t\twindow = module;\r\n\t\tdocument = module.document;\r\n\t}\r\n}\r\n\r\n/**\r\n * CommonJS factory function pass through. This will check if the arguments\r\n * given are a window object or a jQuery object. If so they are set\r\n * accordingly.\r\n * @param {*} root Window\r\n * @param {*} jq jQUery\r\n * @returns {boolean} Indicator\r\n */\r\nDataTable.factory = function (root, jq) {\r\n\tvar is = false;\r\n\r\n\t// Test if the first parameter is a window object\r\n\tif (root && root.document) {\r\n\t\twindow = root;\r\n\t\tdocument = root.document;\r\n\t}\r\n\r\n\t// Test if the second parameter is a jQuery object\r\n\tif (jq && jq.fn && jq.fn.jquery) {\r\n\t\t$ = jq;\r\n\t\tis = true;\r\n\t}\r\n\r\n\treturn is;\r\n}\r\n\r\n/**\r\n * Provide a common method for plug-ins to check the version of DataTables being\r\n * used, in order to ensure compatibility.\r\n *\r\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\r\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\r\n *  @returns {boolean} true if this version of DataTables is greater or equal to\r\n *    the required version, or false if this version of DataTales is not\r\n *    suitable\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\r\n */\r\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\r\n{\r\n\tvar aThis = DataTable.version.split('.');\r\n\tvar aThat = version.split('.');\r\n\tvar iThis, iThat;\r\n\r\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\r\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\r\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\r\n\r\n\t\t// Parts are the same, keep comparing\r\n\t\tif (iThis === iThat) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Parts are different, return immediately\r\n\t\treturn iThis > iThat;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Check if a `<table>` node is a DataTable table already or not.\r\n *\r\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\r\n *      selector for the table to test. Note that if more than more than one\r\n *      table is passed on, only the first will be checked\r\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\r\n *      $('#example').dataTable();\r\n *    }\r\n */\r\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\r\n{\r\n\tvar t = $(table).get(0);\r\n\tvar is = false;\r\n\r\n\tif ( table instanceof DataTable.Api ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t$.each( DataTable.settings, function (i, o) {\r\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\r\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\r\n\r\n\t\tif ( o.nTable === t || head === t || foot === t ) {\r\n\t\t\tis = true;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn is;\r\n};\r\n\r\n\r\n/**\r\n * Get all DataTable tables that have been initialised - optionally you can\r\n * select to get only currently visible tables.\r\n *\r\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\r\n *    or visible tables only.\r\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\r\n *    DataTables\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    $.each( $.fn.dataTable.tables(true), function () {\r\n *      $(table).DataTable().columns.adjust();\r\n *    } );\r\n */\r\nDataTable.tables = DataTable.fnTables = function ( visible )\r\n{\r\n\tvar api = false;\r\n\r\n\tif ( $.isPlainObject( visible ) ) {\r\n\t\tapi = visible.api;\r\n\t\tvisible = visible.visible;\r\n\t}\r\n\r\n\tvar a = $.map( DataTable.settings, function (o) {\r\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\r\n\t\t\treturn o.nTable;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn api ?\r\n\t\tnew _Api( a ) :\r\n\t\ta;\r\n};\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian notation. This is made public\r\n * for the extensions to provide the same ability as DataTables core to accept\r\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\r\n * parameters.\r\n *\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n */\r\nDataTable.camelToHungarian = _fnCamelToHungarian;\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( '$()', function ( selector, opts ) {\r\n\tvar\r\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\r\n\t\tjqRows = $(rows);\r\n\r\n\treturn $( [].concat(\r\n\t\tjqRows.filter( selector ).toArray(),\r\n\t\tjqRows.find( selector ).toArray()\r\n\t) );\r\n} );\r\n\r\n\r\n// jQuery functions to operate on the tables\r\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\r\n\t_api_register( key+'()', function ( /* event, handler */ ) {\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\r\n\t\t// Add the `dt` namespace automatically if it isn't already present\r\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\r\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\r\n\t\t\t\te+'.dt' :\r\n\t\t\t\te;\r\n\t\t\t} ).join( ' ' );\r\n\r\n\t\tvar inst = $( this.tables().nodes() );\r\n\t\tinst[key].apply( inst, args );\r\n\t\treturn this;\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnClearTable( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'settings()', function () {\r\n\treturn new _Api( this.context, this.context );\r\n} );\r\n\r\n\r\n_api_register( 'init()', function () {\r\n\tvar ctx = this.context;\r\n\treturn ctx.length ? ctx[0].oInit : null;\r\n} );\r\n\r\n\r\n_api_register( 'data()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\treturn _pluck( settings.aoData, '_aData' );\r\n\t} ).flatten();\r\n} );\r\n\r\n\r\n_api_register( 'destroy()', function ( remove ) {\r\n\tremove = remove || false;\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tvar classes   = settings.oClasses;\r\n\t\tvar table     = settings.nTable;\r\n\t\tvar tbody     = settings.nTBody;\r\n\t\tvar thead     = settings.nTHead;\r\n\t\tvar tfoot     = settings.nTFoot;\r\n\t\tvar jqTable   = $(table);\r\n\t\tvar jqTbody   = $(tbody);\r\n\t\tvar jqWrapper = $(settings.nTableWrapper);\r\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\r\n\t\tvar i, ien;\r\n\r\n\t\t// Flag to note that the table is currently being destroyed - no action\r\n\t\t// should be taken\r\n\t\tsettings.bDestroying = true;\r\n\r\n\t\t// Fire off the destroy callbacks for plug-ins etc\r\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\r\n\r\n\t\t// If not being removed from the document, make all columns visible\r\n\t\tif ( ! remove ) {\r\n\t\t\tnew _Api( settings ).columns().visible( true );\r\n\t\t}\r\n\r\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\r\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\r\n\t\t// for removing them\r\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\r\n\t\t$(window).off('.DT-'+settings.sInstance);\r\n\r\n\t\t// When scrolling we had to break the table up - restore it\r\n\t\tif ( table != thead.parentNode ) {\r\n\t\t\tjqTable.children('thead').detach();\r\n\t\t\tjqTable.append( thead );\r\n\t\t}\r\n\r\n\t\tif ( tfoot && table != tfoot.parentNode ) {\r\n\t\t\tjqTable.children('tfoot').detach();\r\n\t\t\tjqTable.append( tfoot );\r\n\t\t}\r\n\r\n\t\tsettings.aaSorting = [];\r\n\t\tsettings.aaSortingFixed = [];\r\n\t\t_fnSortingClasses( settings );\r\n\r\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\r\n\r\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\r\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\r\n\t\t);\r\n\r\n\t\t// Add the TR elements back into the table in their original order\r\n\t\tjqTbody.children().detach();\r\n\t\tjqTbody.append( rows );\r\n\r\n\t\tvar orig = settings.nTableWrapper.parentNode;\r\n\r\n\t\t// Remove the DataTables generated nodes, events and classes\r\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\r\n\t\tjqTable[ removedMethod ]();\r\n\t\tjqWrapper[ removedMethod ]();\r\n\r\n\t\t// If we need to reattach the table to the document\r\n\t\tif ( ! remove && orig ) {\r\n\t\t\t// insertBefore acts like appendChild if !arg[1]\r\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\r\n\r\n\t\t\t// Restore the width of the original table - was read from the style property,\r\n\t\t\t// so we can restore directly to that\r\n\t\t\tjqTable\r\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\r\n\t\t\t\t.removeClass( classes.sTable );\r\n\r\n\t\t\t// If the were originally stripe classes - then we add them back here.\r\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\r\n\t\t\t// classes - but it's a good effort without getting carried away\r\n\t\t\tien = settings.asDestroyStripes.length;\r\n\r\n\t\t\tif ( ien ) {\r\n\t\t\t\tjqTbody.children().each( function (i) {\r\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Remove the settings object from the settings array */\r\n\t\tvar idx = $.inArray( settings, DataTable.settings );\r\n\t\tif ( idx !== -1 ) {\r\n\t\t\tDataTable.settings.splice( idx, 1 );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n// Add the `every()` method for rows, columns and cells in a compact form\r\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\r\n\t_api_register( type+'s().every()', function ( fn ) {\r\n\t\tvar opts = this.selector.opts;\r\n\t\tvar api = this;\r\n\r\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\r\n\t\t\t// Rows and columns:\r\n\t\t\t//  arg1 - index\r\n\t\t\t//  arg2 - table counter\r\n\t\t\t//  arg3 - loop counter\r\n\t\t\t//  arg4 - undefined\r\n\t\t\t// Cells:\r\n\t\t\t//  arg1 - row index\r\n\t\t\t//  arg2 - column index\r\n\t\t\t//  arg3 - table counter\r\n\t\t\t//  arg4 - loop counter\r\n\t\t\tfn.call(\r\n\t\t\t\tapi[ type ](\r\n\t\t\t\t\targ1,\r\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\r\n\t\t\t\t\ttype==='cell' ? opts : undefined\r\n\t\t\t\t),\r\n\t\t\t\targ1, arg2, arg3, arg4\r\n\t\t\t);\r\n\t\t} );\r\n\t} );\r\n} );\r\n\r\n\r\n// i18n method for extensions to be able to use the language object from the\r\n// DataTable\r\n_api_register( 'i18n()', function ( token, def, plural ) {\r\n\tvar ctx = this.context[0];\r\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\r\n\r\n\tif ( resolved === undefined ) {\r\n\t\tresolved = def;\r\n\t}\r\n\r\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\r\n\t\tresolved = resolved[ plural ] !== undefined ?\r\n\t\t\tresolved[ plural ] :\r\n\t\t\tresolved._;\r\n\t}\r\n\r\n\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\r\n} );\r\n/**\r\n * Version string for plug-ins to check compatibility. Allowed format is\r\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\r\n * only for non-release builds. See http://semver.org/ for more information.\r\n *  @member\r\n *  @type string\r\n *  @default Version number\r\n */\r\nDataTable.version = \"1.13.4\";\r\n\r\n/**\r\n * Private data store, containing all of the settings objects that are\r\n * created for the tables on a given page.\r\n *\r\n * Note that the `DataTable.settings` object is aliased to\r\n * `jQuery.fn.dataTableExt` through which it may be accessed and\r\n * manipulated, or `jQuery.fn.dataTable.settings`.\r\n *  @member\r\n *  @type array\r\n *  @default []\r\n *  @private\r\n */\r\nDataTable.settings = [];\r\n\r\n/**\r\n * Object models container, for the various models that DataTables has\r\n * available to it. These models define the objects that are used to hold\r\n * the active state and configuration of the table.\r\n *  @namespace\r\n */\r\nDataTable.models = {};\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * search information for the global filter and individual column filters.\r\n *  @namespace\r\n */\r\nDataTable.models.oSearch = {\r\n\t/**\r\n\t * Flag to indicate if the filtering should be case insensitive or not\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t */\r\n\t\"bCaseInsensitive\": true,\r\n\r\n\t/**\r\n\t * Applied search term\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t */\r\n\t\"sSearch\": \"\",\r\n\r\n\t/**\r\n\t * Flag to indicate if the search term should be interpreted as a\r\n\t * regular expression (true) or not (false) and therefore and special\r\n\t * regex characters escaped.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bRegex\": false,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t */\r\n\t\"bSmart\": true,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables should only trigger a search when\r\n\t * the return key is pressed.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"return\": false\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * each individual row. This is the object format used for the settings\r\n * aoData array.\r\n *  @namespace\r\n */\r\nDataTable.models.oRow = {\r\n\t/**\r\n\t * TR element for the row\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTr\": null,\r\n\r\n\t/**\r\n\t * Array of TD elements for each row. This is null until the row has been\r\n\t * created.\r\n\t *  @type array nodes\r\n\t *  @default []\r\n\t */\r\n\t\"anCells\": null,\r\n\r\n\t/**\r\n\t * Data object from the original data source for the row. This is either\r\n\t * an array if using the traditional form of DataTables, or an object if\r\n\t * using mData options. The exact type will depend on the passed in\r\n\t * data from the data source, or will be an array if using DOM a data\r\n\t * source.\r\n\t *  @type array|object\r\n\t *  @default []\r\n\t */\r\n\t\"_aData\": [],\r\n\r\n\t/**\r\n\t * Sorting data cache - this array is ostensibly the same length as the\r\n\t * number of columns (although each index is generated only as it is\r\n\t * needed), and holds the data that is used for sorting each column in the\r\n\t * row. We do this cache generation at the start of the sort in order that\r\n\t * the formatting of the sort data need be done only once for each cell\r\n\t * per sort. This array should not be read from or written to by anything\r\n\t * other than the master sorting methods.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_aSortData\": null,\r\n\r\n\t/**\r\n\t * Per cell filtering data cache. As per the sort data cache, used to\r\n\t * increase the performance of the filtering in DataTables\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_aFilterData\": null,\r\n\r\n\t/**\r\n\t * Filtering data cache. This is the same as the cell filtering cache, but\r\n\t * in this case a string rather than an array. This is easily computed with\r\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\r\n\t * needed on every search (memory traded for performance)\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_sFilterRow\": null,\r\n\r\n\t/**\r\n\t * Cache of the class name that DataTables has applied to the row, so we\r\n\t * can quickly look at this variable rather than needing to do a DOM check\r\n\t * on className for the nTr property.\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *  @private\r\n\t */\r\n\t\"_sRowStripe\": \"\",\r\n\r\n\t/**\r\n\t * Denote if the original data source was from the DOM, or the data source\r\n\t * object. This is used for invalidating data, so DataTables can\r\n\t * automatically read data from the original source, unless uninstructed\r\n\t * otherwise.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"src\": null,\r\n\r\n\t/**\r\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\r\n\t * object, but want to know the index\r\n\t *  @type integer\r\n\t *  @default -1\r\n\t *  @private\r\n\t */\r\n\t\"idx\": -1\r\n};\r\n\r\n\r\n/**\r\n * Template object for the column information object in DataTables. This object\r\n * is held in the settings aoColumns array and contains all the information that\r\n * DataTables needs about each individual column.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults.column}\r\n * but this one is the internal data store for DataTables's cache of columns.\r\n * It should NOT be manipulated outside of DataTables. Any configuration should\r\n * be done through the initialisation options.\r\n *  @namespace\r\n */\r\nDataTable.models.oColumn = {\r\n\t/**\r\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\r\n\t * is faster to just hold it as a variable\r\n\t *  @type integer\r\n\t *  @default null\r\n\t */\r\n\t\"idx\": null,\r\n\r\n\t/**\r\n\t * A list of the columns that sorting should occur on when this column\r\n\t * is sorted. That this property is an array allows multi-column sorting\r\n\t * to be defined for a column (for example first name / last name columns\r\n\t * would benefit from this). The values are integers pointing to the\r\n\t * columns to be sorted on (typically it will be a single integer pointing\r\n\t * at itself, but that doesn't need to be the case).\r\n\t *  @type array\r\n\t */\r\n\t\"aDataSort\": null,\r\n\r\n\t/**\r\n\t * Define the sorting directions that are applied to the column, in sequence\r\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\r\n\t * as the sorting direction when the column if first sorted (clicked on).\r\n\t * Sort it again (click again) and it will move on to the next index.\r\n\t * Repeat until loop.\r\n\t *  @type array\r\n\t */\r\n\t\"asSorting\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is searchable, and thus should be included\r\n\t * in the filtering or not.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSearchable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is sortable or not.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSortable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is currently visible in the table or not\r\n\t *  @type boolean\r\n\t */\r\n\t\"bVisible\": null,\r\n\r\n\t/**\r\n\t * Store for manual type assignment using the `column.type` option. This\r\n\t * is held in store so we can manipulate the column's `sType` property.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_sManualType\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if HTML5 data attributes should be used as the data\r\n\t * source for filtering or sorting. True is either are.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @private\r\n\t */\r\n\t\"_bAttrSrc\": false,\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t *  @type function\r\n\t *  @param {element} nTd The TD node that has been created\r\n\t *  @param {*} sData The Data for the cell\r\n\t *  @param {array|object} oData The data for the whole row\r\n\t *  @param {int} iRow The row index for the aoData data store\r\n\t *  @default null\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\t/**\r\n\t * Function to get data from a cell in a column. You should <b>never</b>\r\n\t * access data directly through _aData internally in DataTables - always use\r\n\t * the method attached to this property. It allows mData to function as\r\n\t * required. This function is automatically assigned by the column\r\n\t * initialisation method\r\n\t *  @type function\r\n\t *  @param {array|object} oData The data array/object for the array\r\n\t *    (i.e. aoData[]._aData)\r\n\t *  @param {string} sSpecific The specific data type you want to get -\r\n\t *    'display', 'type' 'filter' 'sort'\r\n\t *  @returns {*} The data for the cell from the given row's data\r\n\t *  @default null\r\n\t */\r\n\t\"fnGetData\": null,\r\n\r\n\t/**\r\n\t * Function to set data for a cell in the column. You should <b>never</b>\r\n\t * set the data directly to _aData internally in DataTables - always use\r\n\t * this method. It allows mData to function as required. This function\r\n\t * is automatically assigned by the column initialisation method\r\n\t *  @type function\r\n\t *  @param {array|object} oData The data array/object for the array\r\n\t *    (i.e. aoData[]._aData)\r\n\t *  @param {*} sValue Value to set\r\n\t *  @default null\r\n\t */\r\n\t\"fnSetData\": null,\r\n\r\n\t/**\r\n\t * Property to read the value for the cells in the column from the data\r\n\t * source array / object. If null, then the default content is used, if a\r\n\t * function is given then the return from the function is used.\r\n\t *  @type function|int|string|null\r\n\t *  @default null\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\t/**\r\n\t * Partner property to mData which is used (only when defined) to get\r\n\t * the data - i.e. it is basically the same as mData, but without the\r\n\t * 'set' option, and also the data fed to it is the result from mData.\r\n\t * This is the rendering method to match the data method of mData.\r\n\t *  @type function|int|string|null\r\n\t *  @default null\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\t/**\r\n\t * Unique header TH/TD element for this column - this is what the sorting\r\n\t * listener is attached to (if sorting is enabled.)\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTh\": null,\r\n\r\n\t/**\r\n\t * Unique footer TH/TD element for this column (if there is one). Not used\r\n\t * in DataTables as such, but can be used for plug-ins to reference the\r\n\t * footer for each column.\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTf\": null,\r\n\r\n\t/**\r\n\t * The class to apply to all TD elements in the table's TBODY for the column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sClass\": null,\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t *  @type string\r\n\t */\r\n\t\"sContentPadding\": null,\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because mData\r\n\t * is set to null, or because the data source itself is null).\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\t/**\r\n\t * Name for the column, allowing reference to the column by name as well as\r\n\t * by index (needs a lookup to work by name).\r\n\t *  @type string\r\n\t */\r\n\t\"sName\": null,\r\n\r\n\t/**\r\n\t * Custom sorting data type - defines which of the available plug-ins in\r\n\t * afnSortData the custom sorting will use - if any is defined.\r\n\t *  @type string\r\n\t *  @default std\r\n\t */\r\n\t\"sSortDataType\": 'std',\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sSortingClass\": null,\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column -\r\n\t * when jQuery UI theming is used.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sSortingClassJUI\": null,\r\n\r\n\t/**\r\n\t * Title of the column - what is seen in the TH element (nTh).\r\n\t *  @type string\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\t/**\r\n\t * Column sorting and filtering type\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\t/**\r\n\t * Width of the column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sWidth\": null,\r\n\r\n\t/**\r\n\t * Width of the column when it was first \"encountered\"\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sWidthOrig\": null\r\n};\r\n\r\n\r\n/*\r\n * Developer note: The properties of the object below are given in Hungarian\r\n * notation, that was used as the interface for DataTables prior to v1.10, however\r\n * from v1.10 onwards the primary interface is camel case. In order to avoid\r\n * breaking backwards compatibility utterly with this change, the Hungarian\r\n * version is still, internally the primary interface, but is is not documented\r\n * - hence the @name tags in each doc comment. This allows a Javascript function\r\n * to create a map from Hungarian notation to camel case (going the other direction\r\n * would require each property to be listed, which would add around 3K to the size\r\n * of DataTables, while this method is about a 0.5K hit).\r\n *\r\n * Ultimately this does pave the way for Hungarian notation to be dropped\r\n * completely, but that is a massive amount of work and will break current\r\n * installs (therefore is on-hold until v2).\r\n */\r\n\r\n/**\r\n * Initialisation options that can be given to DataTables at initialisation\r\n * time.\r\n *  @namespace\r\n */\r\nDataTable.defaults = {\r\n\t/**\r\n\t * An array of data to use for the table, passed in at initialisation which\r\n\t * will be used in preference to any data which is already in the DOM. This is\r\n\t * particularly useful for constructing tables purely in Javascript, for\r\n\t * example with a custom Ajax call.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.data\r\n\t *\r\n\t *  @example\r\n\t *    // Using a 2D array data source\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"data\": [\r\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\r\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\r\n\t *        ],\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"Engine\" },\r\n\t *          { \"title\": \"Browser\" },\r\n\t *          { \"title\": \"Platform\" },\r\n\t *          { \"title\": \"Version\" },\r\n\t *          { \"title\": \"Grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using an array of objects as a data source (`data`)\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"data\": [\r\n\t *          {\r\n\t *            \"engine\":   \"Trident\",\r\n\t *            \"browser\":  \"Internet Explorer 4.0\",\r\n\t *            \"platform\": \"Win 95+\",\r\n\t *            \"version\":  4,\r\n\t *            \"grade\":    \"X\"\r\n\t *          },\r\n\t *          {\r\n\t *            \"engine\":   \"Trident\",\r\n\t *            \"browser\":  \"Internet Explorer 5.0\",\r\n\t *            \"platform\": \"Win 95+\",\r\n\t *            \"version\":  5,\r\n\t *            \"grade\":    \"C\"\r\n\t *          }\r\n\t *        ],\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\r\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\r\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\r\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\r\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aaData\": null,\r\n\r\n\r\n\t/**\r\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\r\n\t * initialisation. You can define which column(s) the sort is performed\r\n\t * upon, and the sorting direction, with this variable. The `sorting` array\r\n\t * should contain an array for each column to be sorted initially containing\r\n\t * the column's index and a direction string ('asc' or 'desc').\r\n\t *  @type array\r\n\t *  @default [[0,'asc']]\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.order\r\n\t *\r\n\t *  @example\r\n\t *    // Sort by 3rd column first, and then 4th column\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"order\": [[2,'asc'], [3,'desc']]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *    // No initial sorting\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"order\": []\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aaSorting\": [[0,'asc']],\r\n\r\n\r\n\t/**\r\n\t * This parameter is basically identical to the `sorting` parameter, but\r\n\t * cannot be overridden by user interaction with the table. What this means\r\n\t * is that you could have a column (visible or hidden) which the sorting\r\n\t * will always be forced on first - any sorting after that (from the user)\r\n\t * will then be performed as required. This can be useful for grouping rows\r\n\t * together.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.orderFixed\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderFixed\": [[0,'asc']]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\r\n\t/**\r\n\t * DataTables can be instructed to load data to display in the table from a\r\n\t * Ajax source. This option defines how that Ajax call is made and where to.\r\n\t *\r\n\t * The `ajax` property has three different modes of operation, depending on\r\n\t * how it is defined. These are:\r\n\t *\r\n\t * * `string` - Set the URL from where the data should be loaded from.\r\n\t * * `object` - Define properties for `jQuery.ajax`.\r\n\t * * `function` - Custom data get function\r\n\t *\r\n\t * `string`\r\n\t * --------\r\n\t *\r\n\t * As a string, the `ajax` property simply defines the URL from which\r\n\t * DataTables will load data.\r\n\t *\r\n\t * `object`\r\n\t * --------\r\n\t *\r\n\t * As an object, the parameters in the object are passed to\r\n\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\r\n\t * of the Ajax request. DataTables has a number of default parameters which\r\n\t * you can override using this option. Please refer to the jQuery\r\n\t * documentation for a full description of the options available, although\r\n\t * the following parameters provide additional options in DataTables or\r\n\t * require special consideration:\r\n\t *\r\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\r\n\t *   can also be used as a function to manipulate the data DataTables sends\r\n\t *   to the server. The function takes a single parameter, an object of\r\n\t *   parameters with the values that DataTables has readied for sending. An\r\n\t *   object may be returned which will be merged into the DataTables\r\n\t *   defaults, or you can add the items to the object that was passed in and\r\n\t *   not return anything from the function. This supersedes `fnServerParams`\r\n\t *   from DataTables 1.9-.\r\n\t *\r\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\r\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\r\n\t *   from an Ajax source or for server-side processing - this parameter\r\n\t *   allows that property to be changed. You can use Javascript dotted\r\n\t *   object notation to get a data source for multiple levels of nesting, or\r\n\t *   it my be used as a function. As a function it takes a single parameter,\r\n\t *   the JSON returned from the server, which can be manipulated as\r\n\t *   required, with the returned value being that used by DataTables as the\r\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\r\n\t *   DataTables 1.9-.\r\n\t *\r\n\t * * `success` - Should not be overridden it is used internally in\r\n\t *   DataTables. To manipulate / transform the data returned by the server\r\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\r\n\t *\r\n\t * `function`\r\n\t * ----------\r\n\t *\r\n\t * As a function, making the Ajax call is left up to yourself allowing\r\n\t * complete control of the Ajax request. Indeed, if desired, a method other\r\n\t * than Ajax could be used to obtain the required data, such as Web storage\r\n\t * or an AIR database.\r\n\t *\r\n\t * The function is given four parameters and no return is required. The\r\n\t * parameters are:\r\n\t *\r\n\t * 1. _object_ - Data to send to the server\r\n\t * 2. _function_ - Callback function that must be executed when the required\r\n\t *    data has been obtained. That data should be passed into the callback\r\n\t *    as the only parameter\r\n\t * 3. _object_ - DataTables settings object for the table\r\n\t *\r\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\r\n\t *\r\n\t *  @type string|object|function\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.ajax\r\n\t *  @since 1.10.0\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax.\r\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": \"data.json\"\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\r\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": \"tableData\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\r\n\t *   // from a plain array rather than an array in an object\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": \"\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Manipulate the data returned from the server - add a link to data\r\n\t *   // (note this can, should, be done using `render` for the column - this\r\n\t *   // is just a simple example of how the data can be manipulated).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": function ( json ) {\r\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\r\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\r\n\t *         }\r\n\t *         return json;\r\n\t *       }\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Add data to the request\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"data\": function ( d ) {\r\n\t *         return {\r\n\t *           \"extra_search\": $('#extra').val()\r\n\t *         };\r\n\t *       }\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Send request as POST\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"type\": \"POST\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get the data from localStorage (could interface with a form for\r\n\t *   // adding, editing and removing rows).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": function (data, callback, settings) {\r\n\t *       callback(\r\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\r\n\t *       );\r\n\t *     }\r\n\t *   } );\r\n\t */\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to readily specify the entries in the length drop\r\n\t * down menu that DataTables shows when pagination is enabled. It can be\r\n\t * either a 1D array of options which will be used for both the displayed\r\n\t * option and the value, or a 2D array which will use the array in the first\r\n\t * position as the value, and the array in the second position as the\r\n\t * displayed options (useful for language strings such as 'All').\r\n\t *\r\n\t * Note that the `pageLength` property will be automatically set to the\r\n\t * first value given in this array, unless `pageLength` is also provided.\r\n\t *  @type array\r\n\t *  @default [ 10, 25, 50, 100 ]\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.lengthMenu\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\r\n\r\n\r\n\t/**\r\n\t * The `columns` option in the initialisation parameter allows you to define\r\n\t * details about the way individual columns behave. For a full list of\r\n\t * column options that can be set, please see\r\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\r\n\t * define your columns, you must have an entry in the array for every single\r\n\t * column that you have in your table (these can be null if you don't which\r\n\t * to specify any options).\r\n\t *  @member\r\n\t *\r\n\t *  @name DataTable.defaults.column\r\n\t */\r\n\t\"aoColumns\": null,\r\n\r\n\t/**\r\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\r\n\t * column, multiple columns, or all columns, using the `targets` property of\r\n\t * each object in the array. This allows great flexibility when creating\r\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\r\n\t * columns you specifically want. `columnDefs` may use any of the column\r\n\t * options available: {@link DataTable.defaults.column}, but it _must_\r\n\t * have `targets` defined in each object in the array. Values in the `targets`\r\n\t * array may be:\r\n\t *   <ul>\r\n\t *     <li>a string - class name will be matched on the TH for the column</li>\r\n\t *     <li>0 or a positive integer - column index counting from the left</li>\r\n\t *     <li>a negative integer - column index counting from the right</li>\r\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\r\n\t *   </ul>\r\n\t *  @member\r\n\t *\r\n\t *  @name DataTable.defaults.columnDefs\r\n\t */\r\n\t\"aoColumnDefs\": null,\r\n\r\n\r\n\t/**\r\n\t * Basically the same as `search`, this parameter defines the individual column\r\n\t * filtering state at initialisation time. The array must be of the same size\r\n\t * as the number of columns, and each element be an object with the parameters\r\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\r\n\t * accepted and the default will be used.\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.searchCols\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searchCols\": [\r\n\t *          null,\r\n\t *          { \"search\": \"My filter\" },\r\n\t *          null,\r\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"aoSearchCols\": [],\r\n\r\n\r\n\t/**\r\n\t * An array of CSS classes that should be applied to displayed rows. This\r\n\t * array may be of any length, and DataTables will apply each class\r\n\t * sequentially, looping when required.\r\n\t *  @type array\r\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\r\n\t *    options</i>\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.stripeClasses\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"asStripeClasses\": null,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable automatic column width calculation. This can be disabled\r\n\t * as an optimisation (it takes some time to calculate the widths) if the\r\n\t * tables widths are passed in using `columns`.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.autoWidth\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"autoWidth\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bAutoWidth\": true,\r\n\r\n\r\n\t/**\r\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\r\n\t * are using an Ajax or JS data source for the table. This option, when set to\r\n\t * true, will cause DataTables to defer the creation of the table elements for\r\n\t * each row until they are needed for a draw - saving a significant amount of\r\n\t * time.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.deferRender\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajax\": \"sources/arrays.txt\",\r\n\t *        \"deferRender\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bDeferRender\": false,\r\n\r\n\r\n\t/**\r\n\t * Replace a DataTable which matches the given selector and replace it with\r\n\t * one which has the properties of the new initialisation object passed. If no\r\n\t * table matches the selector, then the new DataTable will be constructed as\r\n\t * per normal.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.destroy\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"srollY\": \"200px\",\r\n\t *        \"paginate\": false\r\n\t *      } );\r\n\t *\r\n\t *      // Some time later....\r\n\t *      $('#example').dataTable( {\r\n\t *        \"filter\": false,\r\n\t *        \"destroy\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bDestroy\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\n\t * that it allows the end user to input multiple words (space separated) and\r\n\t * will match a row containing those words, even if not in the order that was\r\n\t * specified (this allow matching across multiple columns). Note that if you\r\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\r\n\t * default filtering input box and retain filtering abilities, please use\r\n\t * {@link DataTable.defaults.dom}.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.searching\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searching\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bFilter\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the table information display. This shows information\r\n\t * about the data that is currently visible on the page, including information\r\n\t * about filtered data if that action is being performed.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.info\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"info\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bInfo\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows the end user to select the size of a formatted page from a select\r\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.lengthChange\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"lengthChange\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bLengthChange\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable pagination.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.paging\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"paging\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bPaginate\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of a 'processing' indicator when the table is\r\n\t * being processed (e.g. a sort). This is particularly useful for tables with\r\n\t * large amounts of data where it can take a noticeable amount of time to sort\r\n\t * the entries.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.processing\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"processing\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bProcessing\": false,\r\n\r\n\r\n\t/**\r\n\t * Retrieve the DataTables object for the given selector. Note that if the\r\n\t * table has already been initialised, this parameter will cause DataTables\r\n\t * to simply return the object that has already been set up - it will not take\r\n\t * account of any changes you might have made to the initialisation object\r\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\r\n\t * that you understand this). `destroy` can be used to reinitialise a table if\r\n\t * you need.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.retrieve\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      initTable();\r\n\t *      tableActions();\r\n\t *    } );\r\n\t *\r\n\t *    function initTable ()\r\n\t *    {\r\n\t *      return $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200px\",\r\n\t *        \"paginate\": false,\r\n\t *        \"retrieve\": true\r\n\t *      } );\r\n\t *    }\r\n\t *\r\n\t *    function tableActions ()\r\n\t *    {\r\n\t *      var table = initTable();\r\n\t *      // perform API operations with oTable\r\n\t *    }\r\n\t */\r\n\t\"bRetrieve\": false,\r\n\r\n\r\n\t/**\r\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\r\n\t * the table's viewport to the given height at all times (useful for layout).\r\n\t * However, this can look odd when filtering data down to a small data set,\r\n\t * and the footer is left \"floating\" further down. This parameter (when\r\n\t * enabled) will cause DataTables to collapse the table's viewport down when\r\n\t * the result set will fit within the given Y height.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.scrollCollapse\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200\",\r\n\t *        \"scrollCollapse\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bScrollCollapse\": false,\r\n\r\n\r\n\t/**\r\n\t * Configure DataTables to use server-side processing. Note that the\r\n\t * `ajax` parameter must also be given in order to give DataTables a\r\n\t * source to obtain the required data for each draw.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverSide\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"xhr.php\"\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bServerSide\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\r\n\t * disabled by the `sortable` option for each column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.ordering\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ordering\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSort\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or display DataTables' ability to sort multiple columns at the\r\n\t * same time (activated by shift-click by the user).\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.orderMulti\r\n\t *\r\n\t *  @example\r\n\t *    // Disable multiple column sorting ability\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderMulti\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortMulti\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows control over whether DataTables should use the top (true) unique\r\n\t * cell that is found for a single column, or the bottom (false - default).\r\n\t * This is useful when using complex headers.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.orderCellsTop\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderCellsTop\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortCellsTop\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\r\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\r\n\t * presented as a feature switch as it can increase processing time (while\r\n\t * classes are removed and added) so for large data sets you might want to\r\n\t * turn this off.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.orderClasses\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderClasses\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortClasses\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\r\n\t * used to save table display information such as pagination information,\r\n\t * display length, filtering and sorting. As such when the end user reloads\r\n\t * the page the display display will match what thy had previously set up.\r\n\t *\r\n\t * Due to the use of `localStorage` the default state saving is not supported\r\n\t * in IE6 or 7. If state saving is required in those browsers, use\r\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.stateSave\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bStateSave\": false,\r\n\r\n\r\n\t/**\r\n\t * This function is called when a TR element is created (and all TD child\r\n\t * elements have been inserted), or registered if using a DOM source, allowing\r\n\t * manipulation of the TR element (adding classes etc).\r\n\t *  @type function\r\n\t *  @param {node} row \"TR\" element for the current row\r\n\t *  @param {array} data Raw data array for this row\r\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.createdRow\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"createdRow\": function( row, data, dataIndex ) {\r\n\t *          // Bold the grade for all 'A' grade browsers\r\n\t *          if ( data[4] == \"A\" )\r\n\t *          {\r\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnCreatedRow\": null,\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify any aspect you want about the created DOM.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.drawCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"drawCallback\": function( settings ) {\r\n\t *          alert( 'DataTables has redrawn the table' );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Identical to fnHeaderCallback() but for the table footer this function\r\n\t * allows you to modify the table footer on every 'draw' event.\r\n\t *  @type function\r\n\t *  @param {node} foot \"TR\" element for the footer\r\n\t *  @param {array} data Full table data (as derived from the original HTML)\r\n\t *  @param {int} start Index for the current display starting point in the\r\n\t *    display array\r\n\t *  @param {int} end Index for the current display ending point in the\r\n\t *    display array\r\n\t *  @param {array int} display Index array to translate the visual position\r\n\t *    to the full data array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.footerCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\r\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnFooterCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * When rendering large numbers in the information element for the table\r\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\r\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\r\n\t * rendered as \"1,000,000\") to help readability for the end user. This\r\n\t * function will override the default method DataTables uses.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {int} toFormat number to be formatted\r\n\t *  @returns {string} formatted string for DataTables to show the number\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.formatNumber\r\n\t *\r\n\t *  @example\r\n\t *    // Format a number using a single quote for the separator (note that\r\n\t *    // this can also be done with the language.thousands option)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"formatNumber\": function ( toFormat ) {\r\n\t *          return toFormat.toString().replace(\r\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\r\n\t *          );\r\n\t *        };\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnFormatNumber\": function ( toFormat ) {\r\n\t\treturn toFormat.toString().replace(\r\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\r\n\t\t\tthis.oLanguage.sThousands\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify the header row. This can be used to calculate and\r\n\t * display useful information about the table.\r\n\t *  @type function\r\n\t *  @param {node} head \"TR\" element for the header\r\n\t *  @param {array} data Full table data (as derived from the original HTML)\r\n\t *  @param {int} start Index for the current display starting point in the\r\n\t *    display array\r\n\t *  @param {int} end Index for the current display ending point in the\r\n\t *    display array\r\n\t *  @param {array int} display Index array to translate the visual position\r\n\t *    to the full data array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.headerCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\r\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnHeaderCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * The information element can be used to convey information about the current\r\n\t * state of the table. Although the internationalisation options presented by\r\n\t * DataTables are quite capable of dealing with most customisations, there may\r\n\t * be times where you wish to customise the string further. This callback\r\n\t * allows you to do exactly that.\r\n\t *  @type function\r\n\t *  @param {object} oSettings DataTables settings object\r\n\t *  @param {int} start Starting position in data for the draw\r\n\t *  @param {int} end End position in data for the draw\r\n\t *  @param {int} max Total number of rows in the table (regardless of\r\n\t *    filtering)\r\n\t *  @param {int} total Total number of rows in the data set, after filtering\r\n\t *  @param {string} pre The string that DataTables has formatted using it's\r\n\t *    own rules\r\n\t *  @returns {string} The string to be displayed in the information element.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.infoCallback\r\n\t *\r\n\t *  @example\r\n\t *    $('#example').dataTable( {\r\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\r\n\t *        return start +\" to \"+ end;\r\n\t *      }\r\n\t *    } );\r\n\t */\r\n\t\"fnInfoCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Called when the table has been initialised. Normally DataTables will\r\n\t * initialise sequentially and there will be no need for this function,\r\n\t * however, this does not hold true when using external language information\r\n\t * since that is obtained using an async XHR call.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} json The JSON object request from the server - only\r\n\t *    present if client-side Ajax sourced data is used\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.initComplete\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"initComplete\": function(settings, json) {\r\n\t *          alert( 'DataTables has finished its initialisation.' );\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnInitComplete\": null,\r\n\r\n\r\n\t/**\r\n\t * Called at the very start of each table draw and can be used to cancel the\r\n\t * draw by returning false, any other return (including undefined) results in\r\n\t * the full draw occurring).\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\r\n\t *    return) will allow it to complete.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.preDrawCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"preDrawCallback\": function( settings ) {\r\n\t *          if ( $('#test').val() == 1 ) {\r\n\t *            return false;\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnPreDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * This function allows you to 'post process' each row after it have been\r\n\t * generated for each table draw, but before it is rendered on screen. This\r\n\t * function might be used for setting the row class name etc.\r\n\t *  @type function\r\n\t *  @param {node} row \"TR\" element for the current row\r\n\t *  @param {array} data Raw data array for this row\r\n\t *  @param {int} displayIndex The display index for the current table draw\r\n\t *  @param {int} displayIndexFull The index of the data in the full list of\r\n\t *    rows (after filtering)\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.rowCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\r\n\t *          // Bold the grade for all 'A' grade browsers\r\n\t *          if ( data[4] == \"A\" ) {\r\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnRowCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * This parameter allows you to override the default function which obtains\r\n\t * the data from the server so something more suitable for your application.\r\n\t * For example you could use POST data, or pull information from a Gears or\r\n\t * AIR database.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\r\n\t *  @param {array} data A key/value pair object containing the data to send\r\n\t *    to the server\r\n\t *  @param {function} callback to be called on completion of the data get\r\n\t *    process that will draw the data on the page.\r\n\t *  @param {object} settings DataTables settings object\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverData\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"fnServerData\": null,\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t *  It is often useful to send extra data to the server when making an Ajax\r\n\t * request - for example custom filtering information, and this callback\r\n\t * function makes it trivial to send extra information to the server. The\r\n\t * passed in parameter is the data set that has been constructed by\r\n\t * DataTables, and you can add to this or modify it as you require.\r\n\t *  @type function\r\n\t *  @param {array} data Data array (array of objects which are name/value\r\n\t *    pairs) that has been constructed by DataTables and will be sent to the\r\n\t *    server. In the case of Ajax sourced data with server-side processing\r\n\t *    this will be an empty array, for server-side processing there will be a\r\n\t *    significant number of parameters!\r\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\r\n\t *    as this is passed by reference.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverParams\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"fnServerParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Load the table state. With this function you can define from where, and how, the\r\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} callback Callback that can be executed when done. It\r\n\t *    should be passed the loaded state object.\r\n\t *  @return {object} The DataTables state object to be loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoadCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadCallback\": function (settings, callback) {\r\n\t *          $.ajax( {\r\n\t *            \"url\": \"/state_load\",\r\n\t *            \"dataType\": \"json\",\r\n\t *            \"success\": function (json) {\r\n\t *              callback( json );\r\n\t *            }\r\n\t *          } );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoadCallback\": function ( settings ) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(\r\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\r\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the saved state prior to loading that state.\r\n\t * This callback is called when the table is loading state from the stored data, but\r\n\t * prior to the settings object being modified by the saved state. Note that for\r\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\r\n\t * a plug-in.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object that is to be loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoadParams\r\n\t *\r\n\t *  @example\r\n\t *    // Remove a saved filter, so filtering is never loaded\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadParams\": function (settings, data) {\r\n\t *          data.oSearch.sSearch = \"\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Disallow state loading by returning false\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadParams\": function (settings, data) {\r\n\t *          return false;\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoadParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Callback that is called when the state has been loaded from the state saving method\r\n\t * and the DataTables settings object has been modified as a result of the loaded state.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object that was loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoaded\r\n\t *\r\n\t *  @example\r\n\t *    // Show an alert with the filtering value that was saved\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoaded\": function (settings, data) {\r\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoaded\": null,\r\n\r\n\r\n\t/**\r\n\t * Save the table state. This function allows you to define where and how the state\r\n\t * information for the table is stored By default DataTables will use `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object to be saved\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateSaveCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateSaveCallback\": function (settings, data) {\r\n\t *          // Send an Ajax request to the server with the state object\r\n\t *          $.ajax( {\r\n\t *            \"url\": \"/state_save\",\r\n\t *            \"data\": data,\r\n\t *            \"dataType\": \"json\",\r\n\t *            \"method\": \"POST\"\r\n\t *            \"success\": function () {}\r\n\t *          } );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateSaveCallback\": function ( settings, data ) {\r\n\t\ttry {\r\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\r\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\r\n\t\t\t\tJSON.stringify( data )\r\n\t\t\t);\r\n\t\t} catch (e) {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the state to be saved. Called when the table\r\n\t * has changed state a new state save is required. This method allows modification of\r\n\t * the state saving object prior to actually doing the save, including addition or\r\n\t * other state properties or modification. Note that for plug-in authors, you should\r\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object to be saved\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateSaveParams\r\n\t *\r\n\t *  @example\r\n\t *    // Remove a saved filter, so filtering is never saved\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateSaveParams\": function (settings, data) {\r\n\t *          data.oSearch.sSearch = \"\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateSaveParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Duration for which the saved state information is considered valid. After this period\r\n\t * has elapsed the state will be returned to the default.\r\n\t * Value is given in seconds.\r\n\t *  @type int\r\n\t *  @default 7200 <i>(2 hours)</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.stateDuration\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateDuration\": 60*60*24; // 1 day\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iStateDuration\": 7200,\r\n\r\n\r\n\t/**\r\n\t * When enabled DataTables will not make a request to the server for the first\r\n\t * page draw - rather it will use the data already on the page (no sorting etc\r\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\r\n\t * is used to indicate that deferred loading is required, but it is also used\r\n\t * to tell DataTables how many records there are in the full table (allowing\r\n\t * the information element and pagination to be displayed correctly). In the case\r\n\t * where a filtering is applied to the table on initial load, this can be\r\n\t * indicated by giving the parameter as an array, where the first element is\r\n\t * the number of records available after filtering and the second element is the\r\n\t * number of records without filtering (allowing the table information element\r\n\t * to be shown correctly).\r\n\t *  @type int | array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.deferLoading\r\n\t *\r\n\t *  @example\r\n\t *    // 57 records available in the table, no filtering applied\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t *        \"deferLoading\": 57\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t *        \"deferLoading\": [ 57, 100 ],\r\n\t *        \"search\": {\r\n\t *          \"search\": \"my_filter\"\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"iDeferLoading\": null,\r\n\r\n\r\n\t/**\r\n\t * Number of rows to display on a single page when using pagination. If\r\n\t * feature enabled (`lengthChange`) then the end user will be able to override\r\n\t * this to a custom setting using a pop-up menu.\r\n\t *  @type int\r\n\t *  @default 10\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.pageLength\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"pageLength\": 50\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iDisplayLength\": 10,\r\n\r\n\r\n\t/**\r\n\t * Define the starting point for data display when using DataTables with\r\n\t * pagination. Note that this parameter is the number of records, rather than\r\n\t * the page number, so if you have 10 records per page and want to start on\r\n\t * the third page, it should be \"20\".\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.displayStart\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"displayStart\": 20\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iDisplayStart\": 0,\r\n\r\n\r\n\t/**\r\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\r\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\r\n\t * allows you to tab through the controls and press the enter key to activate them.\r\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\r\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\r\n\t * disable built-in keyboard navigation.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.tabIndex\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"tabIndex\": 1\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\r\n\t/**\r\n\t * Classes that DataTables assigns to the various components and features\r\n\t * that it adds to the HTML table. This allows classes to be configured\r\n\t * during initialisation in addition to through the static\r\n\t * {@link DataTable.ext.oStdClasses} object).\r\n\t *  @namespace\r\n\t *  @name DataTable.defaults.classes\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\r\n\t/**\r\n\t * All strings that DataTables uses in the user interface that it creates\r\n\t * are defined in this object, allowing you to modified them individually or\r\n\t * completely replace them all as required.\r\n\t *  @namespace\r\n\t *  @name DataTable.defaults.language\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\r\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\r\n\t\t * must be internationalised as well).\r\n\t\t *  @namespace\r\n\t\t *  @name DataTable.defaults.language.aria\r\n\t\t */\r\n\t\t\"oAria\": {\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be\r\n\t\t\t * sorted ascending by activing the column (click or return when focused).\r\n\t\t\t * Note that the column header is prefixed to this string.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default : activate to sort column ascending\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"aria\": {\r\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\r\n\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be\r\n\t\t\t * sorted descending by activing the column (click or return when focused).\r\n\t\t\t * Note that the column header is prefixed to this string.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default : activate to sort column ascending\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"aria\": {\r\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Pagination string used by DataTables for the built-in pagination\r\n\t\t * control types.\r\n\t\t *  @namespace\r\n\t\t *  @name DataTable.defaults.language.paginate\r\n\t\t */\r\n\t\t\"oPaginate\": {\r\n\t\t\t/**\r\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\r\n\t\t\t * button to take the user to the first page.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default First\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.first\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"first\": \"First page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sFirst\": \"First\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\r\n\t\t\t * button to take the user to the last page.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Last\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.last\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"last\": \"Last page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sLast\": \"Last\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\r\n\t\t\t * next page).\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Next\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.next\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"next\": \"Next page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sNext\": \"Next\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\r\n\t\t\t * the previous page).\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Previous\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"previous\": \"Previous page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sPrevious\": \"Previous\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This string is shown in preference to `zeroRecords` when the table is\r\n\t\t * empty of data (regardless of filtering). Note that this is an optional\r\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\r\n\t\t * instead (either the default or given value).\r\n\t\t *  @type string\r\n\t\t *  @default No data available in table\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.emptyTable\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"emptyTable\": \"No data available in table\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sEmptyTable\": \"No data available in table\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This string gives information to the end user about the information\r\n\t\t * that is current on display on the page. The following tokens can be\r\n\t\t * used in the string and will be dynamically replaced as the table\r\n\t\t * display updates. This tokens can be placed anywhere in the string, or\r\n\t\t * removed as needed by the language requires:\r\n\t\t *\r\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\r\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\r\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\r\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\r\n\t\t * * `\\_PAGE\\_` - Current page number\r\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\r\n\t\t *\r\n\t\t *  @type string\r\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.info\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Display information string for when the table is empty. Typically the\r\n\t\t * format of this string should match `info`.\r\n\t\t *  @type string\r\n\t\t *  @default Showing 0 to 0 of 0 entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoEmpty\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoEmpty\": \"No entries to show\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When a user filters the information in a table, this string is appended\r\n\t\t * to the information (`info`) to give an idea of how strong the filtering\r\n\t\t * is. The variable _MAX_ is dynamically updated.\r\n\t\t *  @type string\r\n\t\t *  @default (filtered from _MAX_ total entries)\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoFiltered\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\r\n\r\n\r\n\t\t/**\r\n\t\t * If can be useful to append extra information to the info string at times,\r\n\t\t * and this variable does exactly that. This information will be appended to\r\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\r\n\t\t * being used) at all times.\r\n\t\t *  @type string\r\n\t\t *  @default <i>Empty string</i>\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoPostFix\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoPostFix\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This decimal place operator is a little different from the other\r\n\t\t * language options since DataTables doesn't output floating point\r\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\r\n\t\t * what this parameter does is modify the sort methods of the table so\r\n\t\t * that numbers which are in a format which has a character other than\r\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\r\n\t\t *\r\n\t\t * Note that numbers with different decimal places cannot be shown in\r\n\t\t * the same table and still be sortable, the table must be consistent.\r\n\t\t * However, multiple different tables on the page can use different\r\n\t\t * decimal place characters.\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.decimal\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"decimal\": \",\"\r\n\t\t *          \"thousands\": \".\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sDecimal\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\r\n\t\t * used to format large numbers that are used in the table information.\r\n\t\t * By default a comma is used, but this can be trivially changed to any\r\n\t\t * character you wish with this parameter.\r\n\t\t *  @type string\r\n\t\t *  @default ,\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.thousands\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"thousands\": \"'\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sThousands\": \",\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Detail the action that will be taken when the drop down menu for the\r\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\r\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\r\n\t\t * with a custom select box if required.\r\n\t\t *  @type string\r\n\t\t *  @default Show _MENU_ entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.lengthMenu\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Language change only\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Language and options change\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"lengthMenu\": 'Display <select>'+\r\n\t\t *            '<option value=\"10\">10</option>'+\r\n\t\t *            '<option value=\"20\">20</option>'+\r\n\t\t *            '<option value=\"30\">30</option>'+\r\n\t\t *            '<option value=\"40\">40</option>'+\r\n\t\t *            '<option value=\"50\">50</option>'+\r\n\t\t *            '<option value=\"-1\">All</option>'+\r\n\t\t *            '</select> records'\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\r\n\t\t * gathering the data, this message is shown in an empty row in the table to\r\n\t\t * indicate to the end user the the data is being loaded. Note that this\r\n\t\t * parameter is not used when loading data by server-side processing, just\r\n\t\t * Ajax sourced data with client-side processing.\r\n\t\t *  @type string\r\n\t\t *  @default Loading...\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.loadingRecords\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sLoadingRecords\": \"Loading...\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text which is displayed when the table is processing a user action\r\n\t\t * (usually a sort command or similar).\r\n\t\t *  @type string\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.processing\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"processing\": \"DataTables is currently busy\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sProcessing\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Details the actions that will be taken when the user types into the\r\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\r\n\t\t * is replaced with the HTML text box for the filtering input allowing\r\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\r\n\t\t * then the input box is appended to the string automatically.\r\n\t\t *  @type string\r\n\t\t *  @default Search:\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.search\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Input text box will be appended at the end automatically\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"search\": \"Filter records:\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Specify where the filter should appear\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sSearch\": \"Search:\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Assign a `placeholder` attribute to the search `input` element\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\r\n\t\t */\r\n\t\t\"sSearchPlaceholder\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * All of the language information can be stored in a file on the\r\n\t\t * server-side, which DataTables will look up if this parameter is passed.\r\n\t\t * It must store the URL of the language file, which is in a JSON format,\r\n\t\t * and the object has the same properties as the oLanguage object in the\r\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\r\n\t\t * the example language files to see how this works in action.\r\n\t\t *  @type string\r\n\t\t *  @default <i>Empty string - i.e. disabled</i>\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.url\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sUrl\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text shown inside the table records when the is no information to be\r\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\r\n\t\t * information in the table at all (regardless of filtering).\r\n\t\t *  @type string\r\n\t\t *  @default No matching records found\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.zeroRecords\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"zeroRecords\": \"No records to display\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sZeroRecords\": \"No matching records found\"\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to have define the global filtering state at\r\n\t * initialisation time. As an object the `search` parameter must be\r\n\t * defined, but all other parameters are optional. When `regex` is true,\r\n\t * the search string will be treated as a regular expression, when false\r\n\t * (default) it will be treated as a straight string. When `smart`\r\n\t * DataTables will use it's smart filtering methods (to word match at\r\n\t * any point in the data), when false this will not be done.\r\n\t *  @namespace\r\n\t *  @extends DataTable.models.oSearch\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.search\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"search\": {\"search\": \"Initial search\"}\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * By default DataTables will look for the property `data` (or `aaData` for\r\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\r\n\t * source or for server-side processing - this parameter allows that\r\n\t * property to be changed. You can use Javascript dotted object notation to\r\n\t * get a data source for multiple levels of nesting.\r\n\t *  @type string\r\n\t *  @default data\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.ajaxDataProp\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sAjaxDataProp\": \"data\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * You can instruct DataTables to load data from an external\r\n\t * source using this parameter (use aData if you want to pass data in you\r\n\t * already have). Simply provide a url a JSON object can be obtained from.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.ajaxSource\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sAjaxSource\": null,\r\n\r\n\r\n\t/**\r\n\t * This initialisation variable allows you to specify exactly where in the\r\n\t * DOM you want DataTables to inject the various controls it adds to the page\r\n\t * (for example you might want the pagination controls at the top of the\r\n\t * table). DIV elements (with or without a custom class) can also be added to\r\n\t * aid styling. The follow syntax is used:\r\n\t *   <ul>\r\n\t *     <li>The following options are allowed:\r\n\t *       <ul>\r\n\t *         <li>'l' - Length changing</li>\r\n\t *         <li>'f' - Filtering input</li>\r\n\t *         <li>'t' - The table!</li>\r\n\t *         <li>'i' - Information</li>\r\n\t *         <li>'p' - Pagination</li>\r\n\t *         <li>'r' - pRocessing</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>The following constants are allowed:\r\n\t *       <ul>\r\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\r\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>The following syntax is expected:\r\n\t *       <ul>\r\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\r\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\r\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>Examples:\r\n\t *       <ul>\r\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\r\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *   </ul>\r\n\t *  @type string\r\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\r\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.dom\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sDom\": \"lfrtip\",\r\n\r\n\r\n\t/**\r\n\t * Search delay option. This will throttle full table searches that use the\r\n\t * DataTables provided search input element (it does not effect calls to\r\n\t * `dt-api search()`, providing a delay before the search is made.\r\n\t *  @type integer\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.searchDelay\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searchDelay\": 200\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\r\n\t/**\r\n\t * DataTables features six different built-in options for the buttons to\r\n\t * display for pagination control:\r\n\t *\r\n\t * * `numbers` - Page number buttons only\r\n\t * * `simple` - 'Previous' and 'Next' buttons only\r\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\r\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\r\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\r\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\r\n\t *  \r\n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\r\n\t *  @type string\r\n\t *  @default simple_numbers\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.pagingType\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"pagingType\": \"full_numbers\"\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"sPaginationType\": \"simple_numbers\",\r\n\r\n\r\n\t/**\r\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\r\n\t * certain layout, or you have a large number of columns in the table, you\r\n\t * can enable x-scrolling to show the table in a viewport, which can be\r\n\t * scrolled. This property can be `true` which will allow the table to\r\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\r\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\r\n\t * is recommended.\r\n\t *  @type boolean|string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.scrollX\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollX\": true,\r\n\t *        \"scrollCollapse\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollX\": \"\",\r\n\r\n\r\n\t/**\r\n\t * This property can be used to force a DataTable to use more width than it\r\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\r\n\t * table which requires to be well spaced, this parameter is useful for\r\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\r\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\r\n\t * measurement).\r\n\t *  @type string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.scrollXInner\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollX\": \"100%\",\r\n\t *        \"scrollXInner\": \"110%\"\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollXInner\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\r\n\t * to the given height, and enable scrolling for any data which overflows the\r\n\t * current viewport. This can be used as an alternative to paging to display\r\n\t * a lot of data in a small area (although paging and scrolling can both be\r\n\t * enabled at the same time). This property can be any CSS unit, or a number\r\n\t * (in which case it will be treated as a pixel measurement).\r\n\t *  @type string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.scrollY\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200px\",\r\n\t *        \"paginate\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollY\": \"\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * Set the HTTP method that is used to make the Ajax call for server-side\r\n\t * processing or Ajax sourced data.\r\n\t *  @type string\r\n\t *  @default GET\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverMethod\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sServerMethod\": \"GET\",\r\n\r\n\r\n\t/**\r\n\t * DataTables makes use of renderers when displaying HTML elements for\r\n\t * a table. These renderers can be added or modified by plug-ins to\r\n\t * generate suitable mark-up for a site. For example the Bootstrap\r\n\t * integration plug-in for DataTables uses a paging button renderer to\r\n\t * display pagination buttons in the mark-up required by Bootstrap.\r\n\t *\r\n\t * For further information about the renderers available see\r\n\t * DataTable.ext.renderer\r\n\t *  @type string|object\r\n\t *  @default null\r\n\t *\r\n\t *  @name DataTable.defaults.renderer\r\n\t *\r\n\t */\r\n\t\"renderer\": null,\r\n\r\n\r\n\t/**\r\n\t * Set the data property name that DataTables should use to get a row's id\r\n\t * to set as the `id` property in the node.\r\n\t *  @type string\r\n\t *  @default DT_RowId\r\n\t *\r\n\t *  @name DataTable.defaults.rowId\r\n\t */\r\n\t\"rowId\": \"DT_RowId\"\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults );\r\n\r\n\r\n\r\n/*\r\n * Developer note - See note in model.defaults.js about the use of Hungarian\r\n * notation and camel case.\r\n */\r\n\r\n/**\r\n * Column options that can be given to DataTables at initialisation time.\r\n *  @namespace\r\n */\r\nDataTable.defaults.column = {\r\n\t/**\r\n\t * Define which column(s) an order will occur on for this column. This\r\n\t * allows a column's ordering to take multiple columns into account when\r\n\t * doing a sort or use the data from a different column. For example first\r\n\t * name / last name columns make sense to do a multi-column sort over the\r\n\t * two columns.\r\n\t *  @type array|int\r\n\t *  @default null <i>Takes the value of the column index automatically</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderData\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\r\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\r\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"orderData\": [ 0, 1 ] },\r\n\t *          { \"orderData\": [ 1, 0 ] },\r\n\t *          { \"orderData\": 2 },\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aDataSort\": null,\r\n\t\"iDataSort\": -1,\r\n\r\n\r\n\t/**\r\n\t * You can control the default ordering direction, and even alter the\r\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\r\n\t * using this parameter.\r\n\t *  @type array\r\n\t *  @default [ 'asc', 'desc' ]\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderSequence\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\r\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\r\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          { \"orderSequence\": [ \"asc\" ] },\r\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\r\n\t *          { \"orderSequence\": [ \"desc\" ] },\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"asSorting\": [ 'asc', 'desc' ],\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering on the data in this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.searchable\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"searchable\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bSearchable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable ordering on this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderable\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"orderable\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.visible\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"visible\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bVisible\": true,\r\n\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t *  @type function\r\n\t *  @param {element} td The TD node that has been created\r\n\t *  @param {*} cellData The Data for the cell\r\n\t *  @param {array|object} rowData The data for the whole row\r\n\t *  @param {int} row The row index for the aoData data store\r\n\t *  @param {int} col The column index for aoColumns\r\n\t *\r\n\t *  @name DataTable.defaults.column.createdCell\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [3],\r\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\r\n\t *            if ( cellData == \"1.7\" ) {\r\n\t *              $(td).css('color', 'blue')\r\n\t *            }\r\n\t *          }\r\n\t *        } ]\r\n\t *      });\r\n\t *    } );\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\r\n\t * consistency. `dataProp` can still be used, as there is backwards\r\n\t * compatibility in DataTables for this option, but it is strongly\r\n\t * recommended that you use `data` in preference to `dataProp`.\r\n\t *  @name DataTable.defaults.column.dataProp\r\n\t */\r\n\r\n\r\n\t/**\r\n\t * This property can be used to read data from any data source property,\r\n\t * including deeply nested objects / properties. `data` can be given in a\r\n\t * number of different ways which effect its behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object. Note that\r\n\t *      function notation is recommended for use in `render` rather than\r\n\t *      `data` as it is much simpler to use as a renderer.\r\n\t * * `null` - use the original data source for the row rather than plucking\r\n\t *   data directly from it. This action has effects on two other\r\n\t *   initialisation options:\r\n\t *    * `defaultContent` - When null is given as the `data` option and\r\n\t *      `defaultContent` is specified for the column, the value defined by\r\n\t *      `defaultContent` will be used for the cell.\r\n\t *    * `render` - When null is used for the `data` option and the `render`\r\n\t *      option is specified for the column, the whole data source for the\r\n\t *      row is used for the renderer.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * `{array|object}` The data source for the row\r\n\t *      * `{string}` The type call data requested - this will be 'set' when\r\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\r\n\t *        when gathering data. Note that when `undefined` is given for the\r\n\t *        type DataTables expects to get the raw data for the object back<\r\n\t *      * `{*}` Data to set when the second parameter is 'set'.\r\n\t *    * Return:\r\n\t *      * The return value from the function is not required when 'set' is\r\n\t *        the type of call, but otherwise the return is what will be used\r\n\t *        for the data requested.\r\n\t *\r\n\t * Note that `data` is a getter and setter option. If you just require\r\n\t * formatting of data for output, you will likely want to use `render` which\r\n\t * is simply a getter and thus simpler to use.\r\n\t *\r\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\r\n\t * name change reflects the flexibility of this property and is consistent\r\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\r\n\t * be used by DataTables, as it automatically maps the old name to the new\r\n\t * if required.\r\n\t *\r\n\t *  @type string|int|function|null\r\n\t *  @default null <i>Use automatically calculated column index</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.data\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Read table data from objects\r\n\t *    // JSON structure for each row:\r\n\t *    //   {\r\n\t *    //      \"engine\": {value},\r\n\t *    //      \"browser\": {value},\r\n\t *    //      \"platform\": {value},\r\n\t *    //      \"version\": {value},\r\n\t *    //      \"grade\": {value}\r\n\t *    //   }\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/objects.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          { \"data\": \"platform\" },\r\n\t *          { \"data\": \"version\" },\r\n\t *          { \"data\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Read information from deeply nested objects\r\n\t *    // JSON structure for each row:\r\n\t *    //   {\r\n\t *    //      \"engine\": {value},\r\n\t *    //      \"browser\": {value},\r\n\t *    //      \"platform\": {\r\n\t *    //         \"inner\": {value}\r\n\t *    //      },\r\n\t *    //      \"details\": [\r\n\t *    //         {value}, {value}\r\n\t *    //      ]\r\n\t *    //   }\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          { \"data\": \"platform.inner\" },\r\n\t *          { \"data\": \"details.0\" },\r\n\t *          { \"data\": \"details.1\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `data` as a function to provide different information for\r\n\t *    // sorting, filtering and display. In this case, currency (price)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": function ( source, type, val ) {\r\n\t *            if (type === 'set') {\r\n\t *              source.price = val;\r\n\t *              // Store the computed display and filter values for efficiency\r\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\r\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\r\n\t *              return;\r\n\t *            }\r\n\t *            else if (type === 'display') {\r\n\t *              return source.price_display;\r\n\t *            }\r\n\t *            else if (type === 'filter') {\r\n\t *              return source.price_filter;\r\n\t *            }\r\n\t *            // 'sort', 'type' and undefined all just use the integer\r\n\t *            return source.price;\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using default content\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null,\r\n\t *          \"defaultContent\": \"Click to edit\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using array notation - outputting a list from an array\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": \"name[, ]\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\r\n\t/**\r\n\t * This property is the rendering partner to `data` and it is suggested that\r\n\t * when you want to manipulate data for display (including filtering,\r\n\t * sorting etc) without altering the underlying data for the table, use this\r\n\t * property. `render` can be considered to be the the read only companion to\r\n\t * `data` which is read / write (then as such more complex). Like `data`\r\n\t * this option can be given in a number of different ways to effect its\r\n\t * behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object.\r\n\t * * `object` - use different data for the different data types requested by\r\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\r\n\t *   of the object is the data type the property refers to and the value can\r\n\t *   defined using an integer, string or function using the same rules as\r\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\r\n\t *   This is the default value to use if you haven't specified a value for\r\n\t *   the data type requested by DataTables.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * {array|object} The data source for the row (based on `data`)\r\n\t *      * {string} The type call data requested - this will be 'filter',\r\n\t *        'display', 'type' or 'sort'.\r\n\t *      * {array|object} The full data source for the row (not based on\r\n\t *        `data`)\r\n\t *    * Return:\r\n\t *      * The return value from the function is what will be used for the\r\n\t *        data requested.\r\n\t *\r\n\t *  @type string|int|function|object|null\r\n\t *  @default null Use the data source value.\r\n\t *\r\n\t *  @name DataTable.defaults.column.render\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Create a comma separated list from an array of objects\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          {\r\n\t *            \"data\": \"platform\",\r\n\t *            \"render\": \"[, ].name\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Execute a function to obtain data\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t *          \"render\": \"browserName()\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // As an object, extracting different data for the different types\r\n\t *    // This would be used with a data source such as:\r\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\r\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\r\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\r\n\t *    // the formatted phone number is the one that is shown in the table.\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t *          \"render\": {\r\n\t *            \"_\": \"phone\",\r\n\t *            \"filter\": \"phone_filter\",\r\n\t *            \"display\": \"phone_display\"\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Use as a function to create a link from the data source\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": \"download_link\",\r\n\t *          \"render\": function ( data, type, full ) {\r\n\t *            return '<a href=\"'+data+'\">Download</a>';\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\r\n\t/**\r\n\t * Change the cell type created for the column - either TD cells or TH cells. This\r\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\r\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\r\n\t *  @type string\r\n\t *  @default td\r\n\t *\r\n\t *  @name DataTable.defaults.column.cellType\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Make the first column use TH cells\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"cellType\": \"th\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sCellType\": \"td\",\r\n\r\n\r\n\t/**\r\n\t * Class to give to each cell in this column.\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.class\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"class\": \"my_class\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sClass\": \"\",\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t * Generally you shouldn't need this!\r\n\t *  @type string\r\n\t *  @default <i>Empty string<i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.contentPadding\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          {\r\n\t *            \"contentPadding\": \"mmm\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sContentPadding\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because `data`\r\n\t * is set to null, or because the data source itself is null).\r\n\t *  @type string\r\n\t *  @default null\r\n\t *\r\n\t *  @name DataTable.defaults.column.defaultContent\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          {\r\n\t *            \"data\": null,\r\n\t *            \"defaultContent\": \"Edit\",\r\n\t *            \"targets\": [ -1 ]\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          {\r\n\t *            \"data\": null,\r\n\t *            \"defaultContent\": \"Edit\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter is only used in DataTables' server-side processing. It can\r\n\t * be exceptionally useful to know what columns are being displayed on the\r\n\t * client side, and to map these to database fields. When defined, the names\r\n\t * also allow DataTables to reorder information from the server if it comes\r\n\t * back in an unexpected order (i.e. if you switch your columns around on the\r\n\t * client-side, your server-side code does not also need updating).\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.name\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\r\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\r\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\r\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\r\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"name\": \"engine\" },\r\n\t *          { \"name\": \"browser\" },\r\n\t *          { \"name\": \"platform\" },\r\n\t *          { \"name\": \"version\" },\r\n\t *          { \"name\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sName\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Defines a data source type for the ordering which can be used to read\r\n\t * real-time information from the table (updating the internally cached\r\n\t * version) prior to ordering. This allows ordering to occur on user\r\n\t * editable elements such as form inputs.\r\n\t *  @type string\r\n\t *  @default std\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderDataType\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\r\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\r\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\r\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          { \"orderDataType\": \"dom-text\" },\r\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\r\n\t *          { \"orderDataType\": \"dom-select\" },\r\n\t *          { \"orderDataType\": \"dom-checkbox\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sSortDataType\": \"std\",\r\n\r\n\r\n\t/**\r\n\t * The title of this column.\r\n\t *  @type string\r\n\t *  @default null <i>Derived from the 'TH' value for this column in the\r\n\t *    original HTML table.</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.title\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"My column title\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\r\n\t/**\r\n\t * The type allows you to specify how the data for this column will be\r\n\t * ordered. Four types (string, numeric, date and html (which will strip\r\n\t * HTML tags before ordering)) are currently available. Note that only date\r\n\t * formats understood by Javascript's Date() object will be accepted as type\r\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\r\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\r\n\t * through plug-ins.\r\n\t *  @type string\r\n\t *  @default null <i>Auto-detected from raw data</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.type\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"type\": \"html\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\r\n\t/**\r\n\t * Defining the width of the column, this parameter may take any CSS value\r\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\n\t * been given a specific width through this interface ensuring that the table\r\n\t * remains readable.\r\n\t *  @type string\r\n\t *  @default null <i>Automatic</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.width\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"width\": \"20%\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sWidth\": null\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults.column );\r\n\r\n\r\n\r\n/**\r\n * DataTables settings object - this holds all the information needed for a\r\n * given table, including configuration, data and current application of the\r\n * table options. DataTables does not have a single instance for each DataTable\r\n * with the settings attached to that instance, but rather instances of the\r\n * DataTable \"class\" are created on-the-fly as needed (typically by a\r\n * $().dataTable() call) and the settings object is then applied to that\r\n * instance.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults} but this\r\n * one is the internal data store for DataTables's cache of columns. It should\r\n * NOT be manipulated outside of DataTables. Any configuration should be done\r\n * through the initialisation options.\r\n *  @namespace\r\n *  @todo Really should attach the settings object to individual instances so we\r\n *    don't need to create new instances on each $().dataTable() call (if the\r\n *    table already exists). It would also save passing oSettings around and\r\n *    into every single function. However, this is a very significant\r\n *    architecture change for DataTables and will almost certainly break\r\n *    backwards compatibility with older installations. This is something that\r\n *    will be done in 2.0.\r\n */\r\nDataTable.models.oSettings = {\r\n\t/**\r\n\t * Primary features of DataTables and their enablement state.\r\n\t *  @namespace\r\n\t */\r\n\t\"oFeatures\": {\r\n\r\n\t\t/**\r\n\t\t * Flag to say if DataTables should automatically try to calculate the\r\n\t\t * optimum table and columns widths (true) or not (false).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bAutoWidth\": null,\r\n\r\n\t\t/**\r\n\t\t * Delay the creation of TR and TD elements until they are actually\r\n\t\t * needed by a driven page draw. This can give a significant speed\r\n\t\t * increase for Ajax source and Javascript source data, but makes no\r\n\t\t * difference at all for DOM and server-side processing tables.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bDeferRender\": null,\r\n\r\n\t\t/**\r\n\t\t * Enable filtering on the table or not. Note that if this is disabled\r\n\t\t * then there is no filtering at all on the table, including fnFilter.\r\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bFilter\": null,\r\n\r\n\t\t/**\r\n\t\t * Table information element (the 'Showing x of y records' div) enable\r\n\t\t * flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bInfo\": null,\r\n\r\n\t\t/**\r\n\t\t * Present a user control allowing the end user to change the page size\r\n\t\t * when pagination is enabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bLengthChange\": null,\r\n\r\n\t\t/**\r\n\t\t * Pagination enabled or not. Note that if this is disabled then length\r\n\t\t * changing must also be disabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bPaginate\": null,\r\n\r\n\t\t/**\r\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\r\n\t\t * user request - typically an Ajax request for server-side processing.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bProcessing\": null,\r\n\r\n\t\t/**\r\n\t\t * Server-side processing enabled flag - when enabled DataTables will\r\n\t\t * get all data from the server for every draw - there is no filtering,\r\n\t\t * sorting or paging done on the client-side.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bServerSide\": null,\r\n\r\n\t\t/**\r\n\t\t * Sorting enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSort\": null,\r\n\r\n\t\t/**\r\n\t\t * Multi-column sorting\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSortMulti\": null,\r\n\r\n\t\t/**\r\n\t\t * Apply a class to the columns which are being sorted to provide a\r\n\t\t * visual highlight or not. This can slow things down when enabled since\r\n\t\t * there is a lot of DOM interaction.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSortClasses\": null,\r\n\r\n\t\t/**\r\n\t\t * State saving enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bStateSave\": null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Scrolling settings for a table.\r\n\t *  @namespace\r\n\t */\r\n\t\"oScroll\": {\r\n\t\t/**\r\n\t\t * When the table is shorter in height than sScrollY, collapse the\r\n\t\t * table container down to the height of the table (when true).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bCollapse\": null,\r\n\r\n\t\t/**\r\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\r\n\t\t * during table initialisation.\r\n\t\t *  @type int\r\n\t\t *  @default 0\r\n\t\t */\r\n\t\t\"iBarWidth\": 0,\r\n\r\n\t\t/**\r\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\r\n\t\t * disabled if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t */\r\n\t\t\"sX\": null,\r\n\r\n\t\t/**\r\n\t\t * Width to expand the table to when using x-scrolling. Typically you\r\n\t\t * should not need to use this.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t *  @deprecated\r\n\t\t */\r\n\t\t\"sXInner\": null,\r\n\r\n\t\t/**\r\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\r\n\t\t * if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t */\r\n\t\t\"sY\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Language information for the table.\r\n\t *  @namespace\r\n\t *  @extends DataTable.defaults.oLanguage\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Information callback function. See\r\n\t\t * {@link DataTable.defaults.fnInfoCallback}\r\n\t\t *  @type function\r\n\t\t *  @default null\r\n\t\t */\r\n\t\t\"fnInfoCallback\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Browser support parameters\r\n\t *  @namespace\r\n\t */\r\n\t\"oBrowser\": {\r\n\t\t/**\r\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\r\n\t\t * scrolling element (IE6/7)\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bScrollOversize\": false,\r\n\r\n\t\t/**\r\n\t\t * Determine if the vertical scrollbar is on the right or left of the\r\n\t\t * scrolling container - needed for rtl language layout, although not\r\n\t\t * all browsers move the scrollbar (Safari).\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bScrollbarLeft\": false,\r\n\r\n\t\t/**\r\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bBounding\": false,\r\n\r\n\t\t/**\r\n\t\t * Browser scrollbar width\r\n\t\t *  @type integer\r\n\t\t *  @default 0\r\n\t\t */\r\n\t\t\"barWidth\": 0\r\n\t},\r\n\r\n\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * Array referencing the nodes which are used for the features. The\r\n\t * parameters of this object match what is allowed by sDom - i.e.\r\n\t *   <ul>\r\n\t *     <li>'l' - Length changing</li>\r\n\t *     <li>'f' - Filtering input</li>\r\n\t *     <li>'t' - The table!</li>\r\n\t *     <li>'i' - Information</li>\r\n\t *     <li>'p' - Pagination</li>\r\n\t *     <li>'r' - pRocessing</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aanFeatures\": [],\r\n\r\n\t/**\r\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\r\n\t * information.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoData\": [],\r\n\r\n\t/**\r\n\t * Array of indexes which are in the current display (after filtering etc)\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aiDisplay\": [],\r\n\r\n\t/**\r\n\t * Array of indexes for display - no filtering\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aiDisplayMaster\": [],\r\n\r\n\t/**\r\n\t * Map of row ids to data indexes\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"aIds\": {},\r\n\r\n\t/**\r\n\t * Store information about each column that is in use\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoColumns\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's header\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoHeader\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's footer\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoFooter\": [],\r\n\r\n\t/**\r\n\t * Store the applied global search information in case we want to force a\r\n\t * research or compare the old search to a new one.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @namespace\r\n\t *  @extends DataTable.models.oSearch\r\n\t */\r\n\t\"oPreviousSearch\": {},\r\n\r\n\t/**\r\n\t * Store the applied search for each column - see\r\n\t * {@link DataTable.models.oSearch} for the format that is used for the\r\n\t * filtering information for each column.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoPreSearchCols\": [],\r\n\r\n\t/**\r\n\t * Sorting that is applied to the table. Note that the inner arrays are\r\n\t * used in the following manner:\r\n\t * <ul>\r\n\t *   <li>Index 0 - column number</li>\r\n\t *   <li>Index 1 - current sorting direction</li>\r\n\t * </ul>\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @todo These inner arrays should really be objects\r\n\t */\r\n\t\"aaSorting\": null,\r\n\r\n\t/**\r\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\r\n\t * aaSorting).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\t/**\r\n\t * Classes to use for the striping of a table.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"asStripeClasses\": null,\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its striping classes as well\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"asDestroyStripes\": [],\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its width\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"sDestroyWidth\": 0,\r\n\r\n\t/**\r\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoRowCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for the header on each draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoHeaderCallback\": [],\r\n\r\n\t/**\r\n\t * Callback function for the footer on each draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoFooterCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for draw callback functions\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for row created function\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoRowCreatedCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for just before the table is redrawn. A return of\r\n\t * false will be used to cancel the draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoPreDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for when the table has been initialised.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoInitComplete\": [],\r\n\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\r\n\t * saving state.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateSaveParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings that have been stored for state saving\r\n\t * prior to using the stored values to restore the state.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoadParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for operating on the settings object once the saved state has been\r\n\t * loaded\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoaded\": [],\r\n\r\n\t/**\r\n\t * Cache the table ID for quick access\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t */\r\n\t\"sTableId\": \"\",\r\n\r\n\t/**\r\n\t * The TABLE node for the main table\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTable\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the thead element\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTHead\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tfoot element - if it exists\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTFoot\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tbody element\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTBody\": null,\r\n\r\n\t/**\r\n\t * Cache the wrapper node (contains all DataTables controlled elements)\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTableWrapper\": null,\r\n\r\n\t/**\r\n\t * Indicate if when using server-side processing the loading of data\r\n\t * should be deferred until the second draw.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bDeferLoading\": false,\r\n\r\n\t/**\r\n\t * Indicate if all required information has been read in\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bInitialised\": false,\r\n\r\n\t/**\r\n\t * Information about open rows. Each object in the array has the parameters\r\n\t * 'nTr' and 'nParent'\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoOpenRows\": [],\r\n\r\n\t/**\r\n\t * Dictate the positioning of DataTables' control elements - see\r\n\t * {@link DataTable.model.oInit.sDom}.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sDom\": null,\r\n\r\n\t/**\r\n\t * Search delay (in mS)\r\n\t *  @type integer\r\n\t *  @default null\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\t/**\r\n\t * Which type of pagination should be used.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default two_button\r\n\t */\r\n\t\"sPaginationType\": \"two_button\",\r\n\r\n\t/**\r\n\t * The state duration (for `stateSave`) in seconds.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"iStateDuration\": 0,\r\n\r\n\t/**\r\n\t * Array of callback functions for state saving. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the JSON string to save that has been thus far created. Returns\r\n\t *       a JSON string to be inserted into a json object\r\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateSave\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for state loading. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the object stored. May return false to cancel state loading</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoad\": [],\r\n\r\n\t/**\r\n\t * State that was saved. Useful for back reference\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oSavedState\": null,\r\n\r\n\t/**\r\n\t * State that was loaded. Useful for back reference\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oLoadedState\": null,\r\n\r\n\t/**\r\n\t * Source url for AJAX data for the table.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sAjaxSource\": null,\r\n\r\n\t/**\r\n\t * Property from a given object from which to read the table data from. This\r\n\t * can be an empty string (when not server-side processing), in which case\r\n\t * it is  assumed an an array is given directly.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t */\r\n\t\"sAjaxDataProp\": null,\r\n\r\n\t/**\r\n\t * The last jQuery XHR object that was used for server-side data gathering.\r\n\t * This can be used for working with the XHR information in one of the\r\n\t * callbacks\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"jqXHR\": null,\r\n\r\n\t/**\r\n\t * JSON returned from the server in the last Ajax request\r\n\t *  @type object\r\n\t *  @default undefined\r\n\t */\r\n\t\"json\": undefined,\r\n\r\n\t/**\r\n\t * Data submitted as part of the last Ajax request\r\n\t *  @type object\r\n\t *  @default undefined\r\n\t */\r\n\t\"oAjaxData\": undefined,\r\n\r\n\t/**\r\n\t * Function to get the server-side data.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type function\r\n\t */\r\n\t\"fnServerData\": null,\r\n\r\n\t/**\r\n\t * Functions which are called prior to sending an Ajax request so extra\r\n\t * parameters can easily be sent to the server\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoServerParams\": [],\r\n\r\n\t/**\r\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\r\n\t * required).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t */\r\n\t\"sServerMethod\": null,\r\n\r\n\t/**\r\n\t * Format numbers for display.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type function\r\n\t */\r\n\t\"fnFormatNumber\": null,\r\n\r\n\t/**\r\n\t * List of options that can be used for the user selectable length menu.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aLengthMenu\": null,\r\n\r\n\t/**\r\n\t * Counter for the draws that the table does. Also used as a tracker for\r\n\t * server-side processing\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"iDraw\": 0,\r\n\r\n\t/**\r\n\t * Indicate if a redraw is being done - useful for Ajax\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bDrawing\": false,\r\n\r\n\t/**\r\n\t * Draw index (iDraw) of the last error when parsing the returned data\r\n\t *  @type int\r\n\t *  @default -1\r\n\t */\r\n\t\"iDrawError\": -1,\r\n\r\n\t/**\r\n\t * Paging display length\r\n\t *  @type int\r\n\t *  @default 10\r\n\t */\r\n\t\"_iDisplayLength\": 10,\r\n\r\n\t/**\r\n\t * Paging start point - aiDisplay index\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"_iDisplayStart\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the result set\r\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *  @private\r\n\t */\r\n\t\"_iRecordsTotal\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the current display set\r\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t *  @type boolean\r\n\t *  @default 0\r\n\t *  @private\r\n\t */\r\n\t\"_iRecordsDisplay\": 0,\r\n\r\n\t/**\r\n\t * The classes to use for the table\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if filtering has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @deprecated\r\n\t */\r\n\t\"bFiltered\": false,\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if sorting has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @deprecated\r\n\t */\r\n\t\"bSorted\": false,\r\n\r\n\t/**\r\n\t * Indicate that if multiple rows are in the header and there is more than\r\n\t * one unique cell per column, if the top one (true) or bottom one (false)\r\n\t * should be used for sorting / title by DataTables.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSortCellsTop\": null,\r\n\r\n\t/**\r\n\t * Initialisation object that is used for the table\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oInit\": null,\r\n\r\n\t/**\r\n\t * Destroy callback functions - for plug-ins to attach themselves to the\r\n\t * destroy so they can clean up markup and events.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoDestroyCallback\": [],\r\n\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, before filtering\r\n\t *  @type function\r\n\t */\r\n\t\"fnRecordsTotal\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsTotal * 1 :\r\n\t\t\tthis.aiDisplayMaster.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, after filtering\r\n\t *  @type function\r\n\t */\r\n\t\"fnRecordsDisplay\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsDisplay * 1 :\r\n\t\t\tthis.aiDisplay.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the display end point - aiDisplay index\r\n\t *  @type function\r\n\t */\r\n\t\"fnDisplayEnd\": function ()\r\n\t{\r\n\t\tvar\r\n\t\t\tlen      = this._iDisplayLength,\r\n\t\t\tstart    = this._iDisplayStart,\r\n\t\t\tcalc     = start + len,\r\n\t\t\trecords  = this.aiDisplay.length,\r\n\t\t\tfeatures = this.oFeatures,\r\n\t\t\tpaginate = features.bPaginate;\r\n\r\n\t\tif ( features.bServerSide ) {\r\n\t\t\treturn paginate === false || len === -1 ?\r\n\t\t\t\tstart + records :\r\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ! paginate || calc>records || len===-1 ?\r\n\t\t\t\trecords :\r\n\t\t\t\tcalc;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * The DataTables object for this table\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oInstance\": null,\r\n\r\n\t/**\r\n\t * Unique identifier for each instance of the DataTables object. If there\r\n\t * is an ID on the table node, then it takes that value, otherwise an\r\n\t * incrementing internal counter is used.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sInstance\": null,\r\n\r\n\t/**\r\n\t * tabindex attribute value that is added to DataTables control elements, allowing\r\n\t * keyboard navigation of the table and its controls.\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollHead\": null,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollFoot\": null,\r\n\r\n\t/**\r\n\t * Last applied sort\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aLastSort\": [],\r\n\r\n\t/**\r\n\t * Stored plug-in instances\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"oPlugins\": {},\r\n\r\n\t/**\r\n\t * Function used to get a row's id from the row's data\r\n\t *  @type function\r\n\t *  @default null\r\n\t */\r\n\t\"rowIdFn\": null,\r\n\r\n\t/**\r\n\t * Data location where to store a row's id\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"rowId\": null\r\n};\r\n\r\n/**\r\n * Extension object for DataTables that is used to provide all extension\r\n * options.\r\n *\r\n * Note that the `DataTable.ext` object is available through\r\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\r\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\r\n *  @namespace\r\n *  @extends DataTable.models.ext\r\n */\r\n\r\n\r\n/**\r\n * DataTables extensions\r\n * \r\n * This namespace acts as a collection area for plug-ins that can be used to\r\n * extend DataTables capabilities. Indeed many of the build in methods\r\n * use this method to provide their own capabilities (sorting methods for\r\n * example).\r\n *\r\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\r\n * reasons\r\n *\r\n *  @namespace\r\n */\r\nDataTable.ext = _ext = {\r\n\t/**\r\n\t * Buttons. For use with the Buttons extension for DataTables. This is\r\n\t * defined here so other extensions can define buttons regardless of load\r\n\t * order. It is _not_ used by DataTables core.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tbuttons: {},\r\n\r\n\r\n\t/**\r\n\t * Element class names\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tclasses: {},\r\n\r\n\r\n\t/**\r\n\t * DataTables build type (expanded by the download builder)\r\n\t *\r\n\t *  @type string\r\n\t */\r\n\tbuilder: \"-source-\",\r\n\r\n\r\n\t/**\r\n\t * Error reporting.\r\n\t * \r\n\t * How should DataTables report an error. Can take the value 'alert',\r\n\t * 'throw', 'none' or a function.\r\n\t *\r\n\t *  @type string|function\r\n\t *  @default alert\r\n\t */\r\n\terrMode: \"alert\",\r\n\r\n\r\n\t/**\r\n\t * Feature plug-ins.\r\n\t * \r\n\t * This is an array of objects which describe the feature plug-ins that are\r\n\t * available to DataTables. These feature plug-ins are then available for\r\n\t * use through the `dom` initialisation option.\r\n\t * \r\n\t * Each feature plug-in is described by an object which must have the\r\n\t * following properties:\r\n\t * \r\n\t * * `fnInit` - function that is used to initialise the plug-in,\r\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\r\n\t *   instillation option. This is case sensitive.\r\n\t *\r\n\t * The `fnInit` function has the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t *\r\n\t * And the following return is expected:\r\n\t * \r\n\t * * {node|null} The element which contains your feature. Note that the\r\n\t *   return may also be void if your plug-in does not require to inject any\r\n\t *   DOM elements into DataTables control (`dom`) - for example this might\r\n\t *   be useful when developing a plug-in which allows table control via\r\n\t *   keyboard entry\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    $.fn.dataTable.ext.features.push( {\r\n\t *      \"fnInit\": function( oSettings ) {\r\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\r\n\t *      },\r\n\t *      \"cFeature\": \"T\"\r\n\t *    } );\r\n\t */\r\n\tfeature: [],\r\n\r\n\r\n\t/**\r\n\t * Row searching.\r\n\t * \r\n\t * This method of searching is complimentary to the default type based\r\n\t * searching, and a lot more comprehensive as it allows you complete control\r\n\t * over the searching logic. Each element in this array is a function\r\n\t * (parameters described below) that is called for every row in the table,\r\n\t * and your logic decides if it should be included in the searching data set\r\n\t * or not.\r\n\t *\r\n\t * Searching functions have the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{array|object}` Data for the row to be processed (same as the\r\n\t *    original format that was passed in as the data source, or an array\r\n\t *    from a DOM data source\r\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\r\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\r\n\t *\r\n\t * And the following return is expected:\r\n\t *\r\n\t * * {boolean} Include the row in the searched result set (true) or not\r\n\t *   (false)\r\n\t *\r\n\t * Note that as with the main search ability in DataTables, technically this\r\n\t * is \"filtering\", since it is subtractive. However, for consistency in\r\n\t * naming we call it searching here.\r\n\t *\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @example\r\n\t *    // The following example shows custom search being applied to the\r\n\t *    // fourth column (i.e. the data[3] index) based on two input values\r\n\t *    // from the end-user, matching the data in a certain range.\r\n\t *    $.fn.dataTable.ext.search.push(\r\n\t *      function( settings, data, dataIndex ) {\r\n\t *        var min = document.getElementById('min').value * 1;\r\n\t *        var max = document.getElementById('max').value * 1;\r\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\r\n\t *\r\n\t *        if ( min == \"\" && max == \"\" ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min == \"\" && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && \"\" == max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        return false;\r\n\t *      }\r\n\t *    );\r\n\t */\r\n\tsearch: [],\r\n\r\n\r\n\t/**\r\n\t * Selector extensions\r\n\t *\r\n\t * The `selector` option can be used to extend the options available for the\r\n\t * selector modifier options (`selector-modifier` object data type) that\r\n\t * each of the three built in selector types offer (row, column and cell +\r\n\t * their plural counterparts). For example the Select extension uses this\r\n\t * mechanism to provide an option to select only rows, columns and cells\r\n\t * that have been marked as selected by the end user (`{selected: true}`),\r\n\t * which can be used in conjunction with the existing built in selector\r\n\t * options.\r\n\t *\r\n\t * Each property is an array to which functions can be pushed. The functions\r\n\t * take three attributes:\r\n\t *\r\n\t * * Settings object for the host table\r\n\t * * Options object (`selector-modifier` object type)\r\n\t * * Array of selected item indexes\r\n\t *\r\n\t * The return is an array of the resulting item indexes after the custom\r\n\t * selector has been applied.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tselector: {\r\n\t\tcell: [],\r\n\t\tcolumn: [],\r\n\t\trow: []\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Internal functions, exposed for used in plug-ins.\r\n\t * \r\n\t * Please note that you should not need to use the internal methods for\r\n\t * anything other than a plug-in (and even then, try to avoid if possible).\r\n\t * The internal function may change between releases.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tinternal: {},\r\n\r\n\r\n\t/**\r\n\t * Legacy configuration options. Enable and disable legacy options that\r\n\t * are available in DataTables.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tlegacy: {\r\n\t\t/**\r\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\r\n\t\t * requests\r\n\t\t *\r\n\t\t *  @type boolean\r\n\t\t *  @default null\r\n\t\t */\r\n\t\tajax: null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Pagination plug-in methods.\r\n\t * \r\n\t * Each entry in this object is a function and defines which buttons should\r\n\t * be shown by the pagination rendering method that is used for the table:\r\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\r\n\t * buttons are displayed in the document, while the functions here tell it\r\n\t * what buttons to display. This is done by returning an array of button\r\n\t * descriptions (what each button will do).\r\n\t *\r\n\t * Pagination types (the four built in options and any additional plug-in\r\n\t * options defined here) can be used through the `paginationType`\r\n\t * initialisation parameter.\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{int} page` The current page index\r\n\t * 2. `{int} pages` The number of pages in the table\r\n\t *\r\n\t * Each function is expected to return an array where each element of the\r\n\t * array can be one of:\r\n\t *\r\n\t * * `first` - Jump to first page when activated\r\n\t * * `last` - Jump to last page when activated\r\n\t * * `previous` - Show previous page when activated\r\n\t * * `next` - Show next page when activated\r\n\t * * `{int}` - Show page of the index given\r\n\t * * `{array}` - A nested array containing the above elements to add a\r\n\t *   containing 'DIV' element (might be useful for styling).\r\n\t *\r\n\t * Note that DataTables v1.9- used this object slightly differently whereby\r\n\t * an object with two functions would be defined for each plug-in. That\r\n\t * ability is still supported by DataTables 1.10+ to provide backwards\r\n\t * compatibility, but this option of use is now decremented and no longer\r\n\t * documented in DataTables 1.10+.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t *\r\n\t *  @example\r\n\t *    // Show previous, next and current page buttons only\r\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\r\n\t *      return [ 'previous', page, 'next' ];\r\n\t *    };\r\n\t */\r\n\tpager: {},\r\n\r\n\r\n\trenderer: {\r\n\t\tpageButton: {},\r\n\t\theader: {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Ordering plug-ins - custom data source\r\n\t * \r\n\t * The extension options for ordering of data available here is complimentary\r\n\t * to the default type based ordering that DataTables typically uses. It\r\n\t * allows much greater control over the the data that is being used to\r\n\t * order a column, but is necessarily therefore more complex.\r\n\t * \r\n\t * This type of ordering is useful if you want to do ordering based on data\r\n\t * live from the DOM (for example the contents of an 'input' element) rather\r\n\t * than just the static string that DataTables knows of.\r\n\t * \r\n\t * The way these plug-ins work is that you create an array of the values you\r\n\t * wish to be ordering for the column in question and then return that\r\n\t * array. The data in the array much be in the index order of the rows in\r\n\t * the table (not the currently ordering order!). Which order data gathering\r\n\t * function is run here depends on the `dt-init columns.orderDataType`\r\n\t * parameter that is used for the column (if any).\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{int}` Target column index\r\n\t *\r\n\t * Each function is expected to return an array:\r\n\t *\r\n\t * * `{array}` Data for the column to be ordering upon\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    // Ordering using `input` node values\r\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\r\n\t *    {\r\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\r\n\t *        return $('input', td).val();\r\n\t *      } );\r\n\t *    }\r\n\t */\r\n\torder: {},\r\n\r\n\r\n\t/**\r\n\t * Type based plug-ins.\r\n\t *\r\n\t * Each column in DataTables has a type assigned to it, either by automatic\r\n\t * detection or by direct assignment using the `type` option for the column.\r\n\t * The type of a column will effect how it is ordering and search (plug-ins\r\n\t * can also make use of the column type if required).\r\n\t *\r\n\t * @namespace\r\n\t */\r\n\ttype: {\r\n\t\t/**\r\n\t\t * Type detection functions.\r\n\t\t *\r\n\t\t * The functions defined in this object are used to automatically detect\r\n\t\t * a column's type, making initialisation of DataTables super easy, even\r\n\t\t * when complex data is in the table.\r\n\t\t *\r\n\t\t * The functions defined take two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be analysed\r\n\t     *  2. `{settings}` DataTables settings object. This can be used to\r\n\t     *     perform context specific type detection - for example detection\r\n\t     *     based on language settings such as using a comma for a decimal\r\n\t     *     place. Generally speaking the options from the settings will not\r\n\t     *     be required\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\r\n\t\t *   pass it on to the other type detection functions.\r\n\t\t *\r\n\t\t *  @type array\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Currency type detection plug-in:\r\n\t\t *    $.fn.dataTable.ext.type.detect.push(\r\n\t\t *      function ( data, settings ) {\r\n\t\t *        // Check the numeric part\r\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\r\n\t\t *          return null;\r\n\t\t *        }\r\n\t\t *\r\n\t\t *        // Check prefixed by currency\r\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\r\n\t\t *          return 'currency';\r\n\t\t *        }\r\n\t\t *        return null;\r\n\t\t *      }\r\n\t\t *    );\r\n\t\t */\r\n\t\tdetect: [],\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based search formatting.\r\n\t\t *\r\n\t\t * The type based searching functions can be used to pre-format the\r\n\t\t * data to be search on. For example, it can be used to strip HTML\r\n\t\t * tags or to de-format telephone numbers for numeric only searching.\r\n\t\t *\r\n\t\t * Note that is a search is not defined for a column of a given type,\r\n\t\t * no search formatting will be performed.\r\n\t\t * \r\n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\r\n\t\t * for a column (or have it automatically detected for you by DataTables\r\n\t\t * or a type detection plug-in), you will typically be using this for\r\n\t\t * custom sorting, but it can also be used to provide custom searching\r\n\t\t * by allowing you to pre-processing the data and returning the data in\r\n\t\t * the format that should be searched upon. This is done by adding\r\n\t\t * functions this object with a parameter name which matches the sType\r\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\r\n\t\t * for searching data.\r\n\t\t *\r\n\t\t * The functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\r\n\t\t *\r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\r\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\r\n\t\t *    }\r\n\t\t */\r\n\t\tsearch: {},\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based ordering.\r\n\t\t *\r\n\t\t * The column type tells DataTables what ordering to apply to the table\r\n\t\t * when a column is sorted upon. The order for each type that is defined,\r\n\t\t * is defined by the functions available in this object.\r\n\t\t *\r\n\t\t * Each ordering option can be described by three properties added to\r\n\t\t * this object:\r\n\t\t *\r\n\t\t * * `{type}-pre` - Pre-formatting function\r\n\t\t * * `{type}-asc` - Ascending order function\r\n\t\t * * `{type}-desc` - Descending order function\r\n\t\t *\r\n\t\t * All three can be used together, only `{type}-pre` or only\r\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\r\n\t\t * that only `{type}-pre` is used, as this provides the optimal\r\n\t\t * implementation in terms of speed, although the others are provided\r\n\t\t * for compatibility with existing Javascript sort functions.\r\n\t\t *\r\n\t\t * `{type}-pre`: Functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\r\n\t\t *\r\n\t\t * And return:\r\n\t\t *\r\n\t\t * * `{*}` Data to be sorted upon\r\n\t\t *\r\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\r\n\t\t * functions, taking two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data to compare to the second parameter\r\n\t     *  2. `{*}` Data to compare to the first parameter\r\n\t\t *\r\n\t\t * And returning:\r\n\t\t *\r\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\r\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\r\n\t\t *   >0 if the first parameter should be sorted height than the second\r\n\t\t *   parameter.\r\n\t\t * \r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\r\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\r\n\t\t *      \"string-pre\": function(x) {\r\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\r\n\t\t *        return parseFloat( a );\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\r\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\r\n\t\t *      \"string-case-asc\": function(x,y) {\r\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t\t *      },\r\n\t\t *      \"string-case-desc\": function(x,y) {\r\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t */\r\n\t\torder: {}\r\n\t},\r\n\r\n\t/**\r\n\t * Unique DataTables instance counter\r\n\t *\r\n\t * @type int\r\n\t * @private\r\n\t */\r\n\t_unique: 0,\r\n\r\n\r\n\t//\r\n\t// Depreciated\r\n\t// The following properties are retained for backwards compatibility only.\r\n\t// The should not be used in new projects and will be removed in a future\r\n\t// version\r\n\t//\r\n\r\n\t/**\r\n\t * Version check function.\r\n\t *  @type function\r\n\t *  @depreciated Since 1.10\r\n\t */\r\n\tfnVersionCheck: DataTable.fnVersionCheck,\r\n\r\n\r\n\t/**\r\n\t * Index for what 'this' index API functions should use\r\n\t *  @type int\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tiApiIndex: 0,\r\n\r\n\r\n\t/**\r\n\t * jQuery UI class container\r\n\t *  @type object\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\toJUIClasses: {},\r\n\r\n\r\n\t/**\r\n\t * Software version\r\n\t *  @type string\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tsVersion: DataTable.version\r\n};\r\n\r\n\r\n//\r\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\r\n//\r\n$.extend( _ext, {\r\n\tafnFiltering: _ext.search,\r\n\taTypes:       _ext.type.detect,\r\n\tofnSearch:    _ext.type.search,\r\n\toSort:        _ext.type.order,\r\n\tafnSortData:  _ext.order,\r\n\taoFeatures:   _ext.feature,\r\n\toApi:         _ext.internal,\r\n\toStdClasses:  _ext.classes,\r\n\toPagination:  _ext.pager\r\n} );\r\n\r\n\r\n$.extend( DataTable.ext.classes, {\r\n\t\"sTable\": \"dataTable\",\r\n\t\"sNoFooter\": \"no-footer\",\r\n\r\n\t/* Paging buttons */\r\n\t\"sPageButton\": \"paginate_button\",\r\n\t\"sPageButtonActive\": \"current\",\r\n\t\"sPageButtonDisabled\": \"disabled\",\r\n\r\n\t/* Striping classes */\r\n\t\"sStripeOdd\": \"odd\",\r\n\t\"sStripeEven\": \"even\",\r\n\r\n\t/* Empty row */\r\n\t\"sRowEmpty\": \"dataTables_empty\",\r\n\r\n\t/* Features */\r\n\t\"sWrapper\": \"dataTables_wrapper\",\r\n\t\"sFilter\": \"dataTables_filter\",\r\n\t\"sInfo\": \"dataTables_info\",\r\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\r\n\t\"sLength\": \"dataTables_length\",\r\n\t\"sProcessing\": \"dataTables_processing\",\r\n\r\n\t/* Sorting */\r\n\t\"sSortAsc\": \"sorting_asc\",\r\n\t\"sSortDesc\": \"sorting_desc\",\r\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\r\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\r\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\r\n\t\"sSortableNone\": \"sorting_disabled\",\r\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\r\n\r\n\t/* Filtering */\r\n\t\"sFilterInput\": \"\",\r\n\r\n\t/* Page length */\r\n\t\"sLengthSelect\": \"\",\r\n\r\n\t/* Scrolling */\r\n\t\"sScrollWrapper\": \"dataTables_scroll\",\r\n\t\"sScrollHead\": \"dataTables_scrollHead\",\r\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\r\n\t\"sScrollBody\": \"dataTables_scrollBody\",\r\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\r\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\r\n\r\n\t/* Misc */\r\n\t\"sHeaderTH\": \"\",\r\n\t\"sFooterTH\": \"\",\r\n\r\n\t// Deprecated\r\n\t\"sSortJUIAsc\": \"\",\r\n\t\"sSortJUIDesc\": \"\",\r\n\t\"sSortJUI\": \"\",\r\n\t\"sSortJUIAscAllowed\": \"\",\r\n\t\"sSortJUIDescAllowed\": \"\",\r\n\t\"sSortJUIWrapper\": \"\",\r\n\t\"sSortIcon\": \"\",\r\n\t\"sJUIHeader\": \"\",\r\n\t\"sJUIFooter\": \"\"\r\n} );\r\n\r\n\r\nvar extPagination = DataTable.ext.pager;\r\n\r\nfunction _numbers ( page, pages ) {\r\n\tvar\r\n\t\tnumbers = [],\r\n\t\tbuttons = extPagination.numbers_length,\r\n\t\thalf = Math.floor( buttons / 2 ),\r\n\t\ti = 1;\r\n\r\n\tif ( pages <= buttons ) {\r\n\t\tnumbers = _range( 0, pages );\r\n\t}\r\n\telse if ( page <= half ) {\r\n\t\tnumbers = _range( 0, buttons-2 );\r\n\t\tnumbers.push( 'ellipsis' );\r\n\t\tnumbers.push( pages-1 );\r\n\t}\r\n\telse if ( page >= pages - 1 - half ) {\r\n\t\tnumbers = _range( pages-(buttons-2), pages );\r\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\r\n\t\tnumbers.splice( 0, 0, 0 );\r\n\t}\r\n\telse {\r\n\t\tnumbers = _range( page-half+2, page+half-1 );\r\n\t\tnumbers.push( 'ellipsis' );\r\n\t\tnumbers.push( pages-1 );\r\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\r\n\t\tnumbers.splice( 0, 0, 0 );\r\n\t}\r\n\r\n\tnumbers.DT_el = 'span';\r\n\treturn numbers;\r\n}\r\n\r\n\r\n$.extend( extPagination, {\r\n\tsimple: function ( page, pages ) {\r\n\t\treturn [ 'previous', 'next' ];\r\n\t},\r\n\r\n\tfull: function ( page, pages ) {\r\n\t\treturn [  'first', 'previous', 'next', 'last' ];\r\n\t},\r\n\r\n\tnumbers: function ( page, pages ) {\r\n\t\treturn [ _numbers(page, pages) ];\r\n\t},\r\n\r\n\tsimple_numbers: function ( page, pages ) {\r\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\r\n\t},\r\n\r\n\tfull_numbers: function ( page, pages ) {\r\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\r\n\t},\r\n\t\r\n\tfirst_last_numbers: function (page, pages) {\r\n \t\treturn ['first', _numbers(page, pages), 'last'];\r\n \t},\r\n\r\n\t// For testing and plug-ins to use\r\n\t_numbers: _numbers,\r\n\r\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\r\n\tnumbers_length: 7\r\n} );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\tpageButton: {\r\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\r\n\t\t\tvar classes = settings.oClasses;\r\n\t\t\tvar lang = settings.oLanguage.oPaginate;\r\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\r\n\t\t\tvar btnDisplay, btnClass;\r\n\r\n\t\t\tvar attach = function( container, buttons ) {\r\n\t\t\t\tvar i, ien, node, button, tabIndex;\r\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\r\n\t\t\t\tvar clickHandler = function ( e ) {\r\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tbutton = buttons[i];\r\n\r\n\t\t\t\t\tif ( Array.isArray( button ) ) {\r\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\r\n\t\t\t\t\t\t\t.appendTo( container );\r\n\t\t\t\t\t\tattach( inner, button );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbtnDisplay = null;\r\n\t\t\t\t\t\tbtnClass = button;\r\n\t\t\t\t\t\ttabIndex = settings.iTabIndex;\r\n\r\n\t\t\t\t\t\tswitch ( button ) {\r\n\t\t\t\t\t\t\tcase 'ellipsis':\r\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'first':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\r\n\r\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'previous':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\r\n\r\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'next':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\r\n\r\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'last':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\r\n\r\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\r\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\r\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\r\n\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\r\n\t\t\t\t\t\t\tvar disabled = btnClass.indexOf(disabledClass) !== -1;\r\n\t\t\r\n\r\n\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\r\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\r\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\r\n\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\r\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\r\n\t\t\t\t\t\t\t\t\t'aria-role': 'link',\r\n\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\r\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\r\n\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\r\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\r\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\t\t.html( btnDisplay )\r\n\t\t\t\t\t\t\t\t.appendTo( container );\r\n\r\n\t\t\t\t\t\t\t_fnBindAction(\r\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\r\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\r\n\t\t\t// accessibility, but neither are frames.\r\n\t\t\tvar activeEl;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Because this approach is destroying and recreating the paging\r\n\t\t\t\t// elements, focus is lost on the select button which is bad for\r\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\r\n\t\t\t\t// completed\r\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\r\n\t\t\t}\r\n\t\t\tcatch (e) {}\r\n\r\n\t\t\tattach( $(host).empty(), buttons );\r\n\r\n\t\t\tif ( activeEl !== undefined ) {\r\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\n\r\n// Built in type detection. See model.ext.aTypes for information about\r\n// what is required from this methods.\r\n$.extend( DataTable.ext.type.detect, [\r\n\t// Plain numbers - first since V8 detects some plain numbers as dates\r\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\r\n\t},\r\n\r\n\t// Dates (only those recognised by the browser's Date.parse)\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\r\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\r\n\t\t// plug-in for anything other than ISO8601 style strings\r\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar parsed = Date.parse(d);\r\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\r\n\t},\r\n\r\n\t// Formatted numbers\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\r\n\t},\r\n\r\n\t// HTML numeric\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\r\n\t},\r\n\r\n\t// HTML numeric, formatted\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\r\n\t},\r\n\r\n\t// HTML (this is strict checking - there must be html)\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\r\n\t\t\t'html' : null;\r\n\t}\r\n] );\r\n\r\n\r\n\r\n// Filter formatting functions. See model.ext.ofnSearch for information about\r\n// what is required from these methods.\r\n// \r\n// Note that additional search methods are added for the html numbers and\r\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\r\n// place is\r\n\r\n\r\n$.extend( DataTable.ext.type.search, {\r\n\thtml: function ( data ) {\r\n\t\treturn _empty(data) ?\r\n\t\t\tdata :\r\n\t\t\ttypeof data === 'string' ?\r\n\t\t\t\tdata\r\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\r\n\t\t\t\t\t.replace( _re_html, \"\" ) :\r\n\t\t\t\t'';\r\n\t},\r\n\r\n\tstring: function ( data ) {\r\n\t\treturn _empty(data) ?\r\n\t\t\tdata :\r\n\t\t\ttypeof data === 'string' ?\r\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\r\n\t\t\t\tdata;\r\n\t}\r\n} );\r\n\r\n\r\n\r\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\r\n\tif ( d !== 0 && (!d || d === '-') ) {\r\n\t\treturn -Infinity;\r\n\t}\r\n\t\r\n\tlet type = typeof d;\r\n\r\n\tif (type === 'number' || type === 'bigint') {\r\n\t\treturn d;\r\n\t}\r\n\r\n\t// If a decimal place other than `.` is used, it needs to be given to the\r\n\t// function so we can detect it and replace with a `.` which is the only\r\n\t// decimal place Javascript recognises - it is not locale aware.\r\n\tif ( decimalPlace ) {\r\n\t\td = _numToDecimal( d, decimalPlace );\r\n\t}\r\n\r\n\tif ( d.replace ) {\r\n\t\tif ( re1 ) {\r\n\t\t\td = d.replace( re1, '' );\r\n\t\t}\r\n\r\n\t\tif ( re2 ) {\r\n\t\t\td = d.replace( re2, '' );\r\n\t\t}\r\n\t}\r\n\r\n\treturn d * 1;\r\n};\r\n\r\n\r\n// Add the numeric 'deformatting' functions for sorting and search. This is done\r\n// in a function to provide an easy ability for the language options to add\r\n// additional methods if a non-period decimal place is used.\r\nfunction _addNumericSort ( decimalPlace ) {\r\n\t$.each(\r\n\t\t{\r\n\t\t\t// Plain numbers\r\n\t\t\t\"num\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace );\r\n\t\t\t},\r\n\r\n\t\t\t// Formatted numbers\r\n\t\t\t\"num-fmt\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\r\n\t\t\t},\r\n\r\n\t\t\t// HTML numeric\r\n\t\t\t\"html-num\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\r\n\t\t\t},\r\n\r\n\t\t\t// HTML numeric, formatted\r\n\t\t\t\"html-num-fmt\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction ( key, fn ) {\r\n\t\t\t// Add the ordering method\r\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\r\n\r\n\t\t\t// For HTML types add a search formatter that will strip the HTML\r\n\t\t\tif ( key.match(/^html\\-/) ) {\r\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n// Default sort methods\r\n$.extend( _ext.type.order, {\r\n\t// Dates\r\n\t\"date-pre\": function ( d ) {\r\n\t\tvar ts = Date.parse( d );\r\n\t\treturn isNaN(ts) ? -Infinity : ts;\r\n\t},\r\n\r\n\t// html\r\n\t\"html-pre\": function ( a ) {\r\n\t\treturn _empty(a) ?\r\n\t\t\t'' :\r\n\t\t\ta.replace ?\r\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\r\n\t\t\t\ta+'';\r\n\t},\r\n\r\n\t// string\r\n\t\"string-pre\": function ( a ) {\r\n\t\t// This is a little complex, but faster than always calling toString,\r\n\t\t// http://jsperf.com/tostring-v-check\r\n\t\treturn _empty(a) ?\r\n\t\t\t'' :\r\n\t\t\ttypeof a === 'string' ?\r\n\t\t\t\ta.toLowerCase() :\r\n\t\t\t\t! a.toString ?\r\n\t\t\t\t\t'' :\r\n\t\t\t\t\ta.toString();\r\n\t},\r\n\r\n\t// string-asc and -desc are retained only for compatibility with the old\r\n\t// sort methods\r\n\t\"string-asc\": function ( x, y ) {\r\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t},\r\n\r\n\t\"string-desc\": function ( x, y ) {\r\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t}\r\n} );\r\n\r\n\r\n// Numeric sorting types - order doesn't matter here\r\n_addNumericSort( '' );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\theader: {\r\n\t\t_: function ( settings, cell, column, classes ) {\r\n\t\t\t// No additional mark-up required\r\n\t\t\t// Attach a sort listener to update on sort - note that using the\r\n\t\t\t// `DT` namespace will allow the event to be removed automatically\r\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\r\n\t\t\t// listening for\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\r\n\t\t\t\t\treturn;               // table, not a nested one\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colIdx = column.idx;\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\tclasses.sSortAsc +' '+\r\n\t\t\t\t\t\tclasses.sSortDesc\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClass\r\n\t\t\t\t\t);\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\tjqueryui: function ( settings, cell, column, classes ) {\r\n\t\t\t$('<div/>')\r\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\r\n\t\t\t\t.append( cell.contents() )\r\n\t\t\t\t.append( $('<span/>')\r\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\r\n\t\t\t\t)\r\n\t\t\t\t.appendTo( cell );\r\n\r\n\t\t\t// Attach a sort listener to update on sort\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n\t\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colIdx = column.idx;\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClass\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\r\n\t\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/*\r\n * Public helper functions. These aren't used internally by DataTables, or\r\n * called by any of the options passed into DataTables, but they can be used\r\n * externally by developers working with DataTables. They are helper functions\r\n * to make working with DataTables a little bit easier.\r\n */\r\n\r\nvar __htmlEscapeEntities = function ( d ) {\r\n\tif (Array.isArray(d)) {\r\n\t\td = d.join(',');\r\n\t}\r\n\r\n\treturn typeof d === 'string' ?\r\n\t\td\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;') :\r\n\t\td;\r\n};\r\n\r\n// Common logic for moment, luxon or a date action\r\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\r\n\tif (window.moment) {\r\n\t\treturn dt[momentFn]( arg1 );\r\n\t}\r\n\telse if (window.luxon) {\r\n\t\treturn dt[luxonFn]( arg1 );\r\n\t}\r\n\t\r\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\r\n}\r\n\r\n\r\nvar __mlWarning = false;\r\nfunction __mldObj (d, format, locale) {\r\n\tvar dt;\r\n\r\n\tif (window.moment) {\r\n\t\tdt = window.moment.utc( d, format, locale, true );\r\n\r\n\t\tif (! dt.isValid()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\telse if (window.luxon) {\r\n\t\tdt = format && typeof d === 'string'\r\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\r\n\t\t\t: window.luxon.DateTime.fromISO( d );\r\n\r\n\t\tif (! dt.isValid) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tdt.setLocale(locale);\r\n\t}\r\n\telse if (! format) {\r\n\t\t// No format given, must be ISO\r\n\t\tdt = new Date(d);\r\n\t}\r\n\telse {\r\n\t\tif (! __mlWarning) {\r\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\r\n\t\t}\r\n\r\n\t\t__mlWarning = true;\r\n\t}\r\n\r\n\treturn dt;\r\n}\r\n\r\n// Wrapper for date, datetime and time which all operate the same way with the exception of\r\n// the output string for auto locale support\r\nfunction __mlHelper (localeString) {\r\n\treturn function ( from, to, locale, def ) {\r\n\t\t// Luxon and Moment support\r\n\t\t// Argument shifting\r\n\t\tif ( arguments.length === 0 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = null; // means toLocaleString\r\n\t\t\tfrom = null; // means iso8601\r\n\t\t}\r\n\t\telse if ( arguments.length === 1 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\t\telse if ( arguments.length === 2 ) {\r\n\t\t\tlocale = to;\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\r\n\t\tvar typeName = 'datetime-' + to;\r\n\r\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\r\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\r\n\t\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\t\t// The renderer will give the value to type detect as the type!\r\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\r\n\t\t\t\treturn d === typeName ? typeName : false;\r\n\t\t\t});\r\n\r\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\r\n\t\t\t// `valueOf` which gives milliseconds epoch\r\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\r\n\t\t\t\tvar x = a.valueOf();\r\n\t\t\t\tvar y = b.valueOf();\r\n\r\n\t\t\t\treturn x === y\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: x < y\r\n\t\t\t\t\t\t? -1\r\n\t\t\t\t\t\t: 1;\r\n\t\t\t}\r\n\r\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\r\n\t\t\t\tvar x = a.valueOf();\r\n\t\t\t\tvar y = b.valueOf();\r\n\r\n\t\t\t\treturn x === y\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: x > y\r\n\t\t\t\t\t\t? -1\r\n\t\t\t\t\t\t: 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn function ( d, type ) {\r\n\t\t\t// Allow for a default value\r\n\t\t\tif (d === null || d === undefined) {\r\n\t\t\t\tif (def === '--now') {\r\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\r\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\r\n\t\t\t\t\t// UTC\r\n\t\t\t\t\tvar local = new Date();\r\n\t\t\t\t\td = new Date( Date.UTC(\r\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\r\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\r\n\t\t\t\t\t) );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'type') {\r\n\t\t\t\t// Typing uses the type name for fast matching\r\n\t\t\t\treturn typeName;\r\n\t\t\t}\r\n\r\n\t\t\tif (d === '') {\r\n\t\t\t\treturn type !== 'sort'\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\r\n\t\t\t}\r\n\r\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\r\n\t\t\t// format for ordering, not display - its already in the display format.\r\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tvar dt = __mldObj(d, from, locale);\r\n\r\n\t\t\tif (dt === null) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'sort') {\r\n\t\t\t\treturn dt;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar formatted = to === null\r\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\r\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\r\n\r\n\t\t\t// XSS protection\r\n\t\t\treturn type === 'display' ?\r\n\t\t\t\t__htmlEscapeEntities( formatted ) :\r\n\t\t\t\tformatted;\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Based on locale, determine standard number formatting\r\n// Fallback for legacy browsers is US English\r\nvar __thousands = ',';\r\nvar __decimal = '.';\r\n\r\nif (Intl) {\r\n\ttry {\r\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\r\n\t\r\n\t\tfor (var i=0 ; i<num.length ; i++) {\r\n\t\t\tif (num[i].type === 'group') {\r\n\t\t\t\t__thousands = num[i].value;\r\n\t\t\t}\r\n\t\t\telse if (num[i].type === 'decimal') {\r\n\t\t\t\t__decimal = num[i].value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcatch (e) {\r\n\t\t// noop\r\n\t}\r\n}\r\n\r\n// Formatted date time detection - use by declaring the formats you are going to use\r\nDataTable.datetime = function ( format, locale ) {\r\n\tvar typeName = 'datetime-detect-' + format;\r\n\r\n\tif (! locale) {\r\n\t\tlocale = 'en';\r\n\t}\r\n\r\n\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\tDataTable.ext.type.detect.unshift(function (d) {\r\n\t\t\tvar dt = __mldObj(d, format, locale);\r\n\t\t\treturn d === '' || dt ? typeName : false;\r\n\t\t});\r\n\r\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\r\n\t\t\treturn __mldObj(d, format, locale) || 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Helpers for `columns.render`.\r\n *\r\n * The options defined here can be used with the `columns.render` initialisation\r\n * option to provide a display renderer. The following functions are defined:\r\n *\r\n * * `number` - Will format numeric data (defined by `columns.data`) for\r\n *   display, retaining the original unformatted data for sorting and filtering.\r\n *   It takes 5 parameters:\r\n *   * `string` - Thousands grouping separator\r\n *   * `string` - Decimal point indicator\r\n *   * `integer` - Number of decimal points to show\r\n *   * `string` (optional) - Prefix.\r\n *   * `string` (optional) - Postfix (/suffix).\r\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\r\n *   parameters.\r\n *\r\n * @example\r\n *   // Column definition using the number renderer\r\n *   {\r\n *     data: \"salary\",\r\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\r\n *   }\r\n *\r\n * @namespace\r\n */\r\nDataTable.render = {\r\n\tdate: __mlHelper('toLocaleDateString'),\r\n\tdatetime: __mlHelper('toLocaleString'),\r\n\ttime: __mlHelper('toLocaleTimeString'),\r\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\r\n\t\t// Auto locale detection\r\n\t\tif (thousands === null || thousands === undefined) {\r\n\t\t\tthousands = __thousands;\r\n\t\t}\r\n\r\n\t\tif (decimal === null || decimal === undefined) {\r\n\t\t\tdecimal = __decimal;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdisplay: function ( d ) {\r\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (d === '' || d === null) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar negative = d < 0 ? '-' : '';\r\n\t\t\t\tvar flo = parseFloat( d );\r\n\r\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\r\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\r\n\t\t\t\t// be a number after all)\r\n\t\t\t\tif ( isNaN( flo ) ) {\r\n\t\t\t\t\treturn __htmlEscapeEntities( d );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tflo = flo.toFixed( precision );\r\n\t\t\t\td = Math.abs( flo );\r\n\r\n\t\t\t\tvar intPart = parseInt( d, 10 );\r\n\t\t\t\tvar floatPart = precision ?\r\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\r\n\t\t\t\t\t'';\r\n\r\n\t\t\t\t// If zero, then can't have a negative prefix\r\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\r\n\t\t\t\t\tnegative = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn negative + (prefix||'') +\r\n\t\t\t\t\tintPart.toString().replace(\r\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\r\n\t\t\t\t\t) +\r\n\t\t\t\t\tfloatPart +\r\n\t\t\t\t\t(postfix||'');\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\ttext: function () {\r\n\t\treturn {\r\n\t\t\tdisplay: __htmlEscapeEntities,\r\n\t\t\tfilter: __htmlEscapeEntities\r\n\t\t};\r\n\t}\r\n};\r\n\r\n\r\n/*\r\n * This is really a good bit rubbish this method of exposing the internal methods\r\n * publicly... - To be fixed in 2.0 using methods on the prototype\r\n */\r\n\r\n\r\n/**\r\n * Create a wrapper function for exporting an internal functions to an external API.\r\n *  @param {string} fn API function name\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#internal\r\n */\r\nfunction _fnExternApiFunc (fn)\r\n{\r\n\treturn function() {\r\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\r\n\t\t\tArray.prototype.slice.call(arguments)\r\n\t\t);\r\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\r\n\t};\r\n}\r\n\r\n\r\n/**\r\n * Reference to internal functions for use by plug-in developers. Note that\r\n * these methods are references to internal functions and are considered to be\r\n * private. If you use these methods, be aware that they are liable to change\r\n * between versions.\r\n *  @namespace\r\n */\r\n$.extend( DataTable.ext.internal, {\r\n\t_fnExternApiFunc: _fnExternApiFunc,\r\n\t_fnBuildAjax: _fnBuildAjax,\r\n\t_fnAjaxUpdate: _fnAjaxUpdate,\r\n\t_fnAjaxParameters: _fnAjaxParameters,\r\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\r\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\r\n\t_fnAddColumn: _fnAddColumn,\r\n\t_fnColumnOptions: _fnColumnOptions,\r\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\r\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\r\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\r\n\t_fnVisbleColumns: _fnVisbleColumns,\r\n\t_fnGetColumns: _fnGetColumns,\r\n\t_fnColumnTypes: _fnColumnTypes,\r\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\r\n\t_fnHungarianMap: _fnHungarianMap,\r\n\t_fnCamelToHungarian: _fnCamelToHungarian,\r\n\t_fnLanguageCompat: _fnLanguageCompat,\r\n\t_fnBrowserDetect: _fnBrowserDetect,\r\n\t_fnAddData: _fnAddData,\r\n\t_fnAddTr: _fnAddTr,\r\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\r\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\r\n\t_fnGetCellData: _fnGetCellData,\r\n\t_fnSetCellData: _fnSetCellData,\r\n\t_fnSplitObjNotation: _fnSplitObjNotation,\r\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\r\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\r\n\t_fnGetDataMaster: _fnGetDataMaster,\r\n\t_fnClearTable: _fnClearTable,\r\n\t_fnDeleteIndex: _fnDeleteIndex,\r\n\t_fnInvalidate: _fnInvalidate,\r\n\t_fnGetRowElements: _fnGetRowElements,\r\n\t_fnCreateTr: _fnCreateTr,\r\n\t_fnBuildHead: _fnBuildHead,\r\n\t_fnDrawHead: _fnDrawHead,\r\n\t_fnDraw: _fnDraw,\r\n\t_fnReDraw: _fnReDraw,\r\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\r\n\t_fnDetectHeader: _fnDetectHeader,\r\n\t_fnGetUniqueThs: _fnGetUniqueThs,\r\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\r\n\t_fnFilterComplete: _fnFilterComplete,\r\n\t_fnFilterCustom: _fnFilterCustom,\r\n\t_fnFilterColumn: _fnFilterColumn,\r\n\t_fnFilter: _fnFilter,\r\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\r\n\t_fnEscapeRegex: _fnEscapeRegex,\r\n\t_fnFilterData: _fnFilterData,\r\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\r\n\t_fnUpdateInfo: _fnUpdateInfo,\r\n\t_fnInfoMacros: _fnInfoMacros,\r\n\t_fnInitialise: _fnInitialise,\r\n\t_fnInitComplete: _fnInitComplete,\r\n\t_fnLengthChange: _fnLengthChange,\r\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\r\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\r\n\t_fnPageChange: _fnPageChange,\r\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\r\n\t_fnProcessingDisplay: _fnProcessingDisplay,\r\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\r\n\t_fnScrollDraw: _fnScrollDraw,\r\n\t_fnApplyToChildren: _fnApplyToChildren,\r\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\r\n\t_fnThrottle: _fnThrottle,\r\n\t_fnConvertToWidth: _fnConvertToWidth,\r\n\t_fnGetWidestNode: _fnGetWidestNode,\r\n\t_fnGetMaxLenString: _fnGetMaxLenString,\r\n\t_fnStringToCss: _fnStringToCss,\r\n\t_fnSortFlatten: _fnSortFlatten,\r\n\t_fnSort: _fnSort,\r\n\t_fnSortAria: _fnSortAria,\r\n\t_fnSortListener: _fnSortListener,\r\n\t_fnSortAttachListener: _fnSortAttachListener,\r\n\t_fnSortingClasses: _fnSortingClasses,\r\n\t_fnSortData: _fnSortData,\r\n\t_fnSaveState: _fnSaveState,\r\n\t_fnLoadState: _fnLoadState,\r\n\t_fnImplementState: _fnImplementState,\r\n\t_fnSettingsFromNode: _fnSettingsFromNode,\r\n\t_fnLog: _fnLog,\r\n\t_fnMap: _fnMap,\r\n\t_fnBindAction: _fnBindAction,\r\n\t_fnCallbackReg: _fnCallbackReg,\r\n\t_fnCallbackFire: _fnCallbackFire,\r\n\t_fnLengthOverflow: _fnLengthOverflow,\r\n\t_fnRenderer: _fnRenderer,\r\n\t_fnDataSource: _fnDataSource,\r\n\t_fnRowAttributes: _fnRowAttributes,\r\n\t_fnExtend: _fnExtend,\r\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\r\n\t                                // in 1.10, so this dead-end function is\r\n\t                                // added to prevent errors\r\n} );\r\n\r\n\r\n// jQuery access\r\n$.fn.dataTable = DataTable;\r\n\r\n// Provide access to the host jQuery object (circular reference)\r\nDataTable.$ = $;\r\n\r\n// Legacy aliases\r\n$.fn.dataTableSettings = DataTable.settings;\r\n$.fn.dataTableExt = DataTable.ext;\r\n\r\n// With a capital `D` we return a DataTables API instance rather than a\r\n// jQuery object\r\n$.fn.DataTable = function ( opts ) {\r\n\treturn $(this).dataTable( opts ).api();\r\n};\r\n\r\n// All properties that are available to $.fn.dataTable should also be\r\n// available on $.fn.DataTable\r\n$.each( DataTable, function ( prop, val ) {\r\n\t$.fn.DataTable[ prop ] = val;\r\n} );\r\n\r\nexport default DataTable;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,QAAQ;;AAE3B;AACA;AACA,IAAIC,CAAC,GAAGD,MAAM;AAGd,IAAIE,SAAS,GAAG,UAAWC,QAAQ,EAAEC,OAAO,EAC5C;EACC;EACA;EACA,IAAIF,SAAS,CAACG,OAAO,CAACF,QAAQ,EAAEC,OAAO,CAAC,EAAE;IACzC,OAAOF,SAAS;EACjB;;EAEA;EACA,IAAI,IAAI,YAAYA,SAAS,EAAE;IAC9B,OAAOD,CAAC,CAACE,QAAQ,CAAC,CAACD,SAAS,CAACE,OAAO,CAAC;EACtC,CAAC,MACI;IACJ;IACAA,OAAO,GAAGD,QAAQ;EACnB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,IAAI,CAACF,CAAC,GAAG,UAAWK,SAAS,EAAEC,KAAK,EACpC;IACC,OAAO,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC,CAACP,CAAC,CAAEK,SAAS,EAAEC,KAAK,CAAE;EAC5C,CAAC;;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,IAAI,CAACE,CAAC,GAAG,UAAWH,SAAS,EAAEC,KAAK,EACpC;IACC,OAAO,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC,CAACE,IAAI,CAAEJ,SAAS,EAAEC,KAAK,CAAE,CAACI,IAAI,EAAE;EACtD,CAAC;;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,IAAI,CAACH,GAAG,GAAG,UAAWI,WAAW,EACjC;IACC,OAAOA,WAAW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,MAAM,CAAE,CAAC,CAAC;AAC1C,CAAC,CAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArlC,SAAS,CAAC8jC,OAAO,GAAG,QAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9jC,SAAS,CAAC8B,QAAQ,GAAG,EAAE;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA9B,SAAS,CAACiJ,MAAM,GAAG,CAAC,CAAC;;AAIrB;AACA;AACA;AACA;AACA;AACAjJ,SAAS,CAACiJ,MAAM,CAACuO,OAAO,GAAG;EAC1B;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAExB;AACD;AACA;AACA;AACA;EACC,SAAS,EAAE,EAAE;EAEb;AACD;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,KAAK;EAEf;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE;AACX,CAAC;;AAKD;AACA;AACA;AACA;AACA;AACA;AACAxX,SAAS,CAACiJ,MAAM,CAACgV,IAAI,GAAG;EACvB;AACD;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAElB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,CAAC;AACT,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAje,SAAS,CAACiJ,MAAM,CAAC2Q,OAAO,GAAG;EAC1B;AACD;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;EACC,UAAU,EAAE,IAAI;EAEhB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAElB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAEtB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAExB;AACD;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;EACC,YAAY,EAAE;AACf,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA5Z,SAAS,CAAC4H,QAAQ,GAAG;EACpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpaAAa,EAAE,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;EAGlC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,EAAE;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAGvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,KAAK;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,KAAK;EAGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAGf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,KAAK;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,KAAK;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,KAAK;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,KAAK;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,UAAW29B,QAAQ,EAAG;IACvC,OAAOA,QAAQ,CAAC/xB,QAAQ,EAAE,CAAC7B,OAAO,CACjC,uBAAuB,EACvB,IAAI,CAACpI,SAAS,CAACuN,UAAU,CACzB;EACF,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,qBAAqB,EAAE,UAAWhV,QAAQ,EAAG;IAC5C,IAAI;MACH,OAAO0jC,IAAI,CAACC,KAAK,CAChB,CAAC3jC,QAAQ,CAACi5B,cAAc,KAAK,CAAC,CAAC,GAAG2K,cAAc,GAAGC,YAAY,EAAEC,OAAO,CACvE,aAAa,GAAC9jC,QAAQ,CAACw1B,SAAS,GAAC,GAAG,GAACuO,QAAQ,CAACC,QAAQ,CACtD,CACD;IACF,CAAC,CAAC,OAAOna,CAAC,EAAE;MACX,OAAO,CAAC,CAAC;IACV;EACD,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,qBAAqB,EAAE,UAAW7pB,QAAQ,EAAErB,IAAI,EAAG;IAClD,IAAI;MACH,CAACqB,QAAQ,CAACi5B,cAAc,KAAK,CAAC,CAAC,GAAG2K,cAAc,GAAGC,YAAY,EAAEI,OAAO,CACvE,aAAa,GAACjkC,QAAQ,CAACw1B,SAAS,GAAC,GAAG,GAACuO,QAAQ,CAACC,QAAQ,EACtDN,IAAI,CAACQ,SAAS,CAAEvlC,IAAI,CAAE,CACtB;IACF,CAAC,CAAC,OAAOkrB,CAAC,EAAE,CAAC;EACd,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,CAAC;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAC;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,CAAC,CAAC;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE;IACZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,OAAO,EAAE;MACR;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,gBAAgB,EAAE,qCAAqC;MAEvD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,iBAAiB,EAAE;IACpB,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE;MACZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,QAAQ,EAAE,OAAO;MAGjB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,OAAO,EAAE,MAAM;MAGf;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,OAAO,EAAE,MAAM;MAGf;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,4BAA4B;IAG3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,OAAO,EAAE,6CAA6C;IAGtD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,6BAA6B;IAG3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,EAAE,qCAAqC;IAGtD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,EAAE;IAGlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,UAAU,EAAE,EAAE;IAGd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,GAAG;IAGjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,qBAAqB;IAGpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,iBAAiB,EAAE,YAAY;IAG/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,EAAE;IAGjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,SAAS;IAGpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,oBAAoB,EAAE,EAAE;IAGxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,MAAM,EAAE,EAAE;IAGV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE;EACjB,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE5rB,CAAC,CAACmI,MAAM,CAAE,CAAC,CAAC,EAAElI,SAAS,CAACiJ,MAAM,CAACuO,OAAO,CAAE;EAGnD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,MAAM;EAGvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM,EAAE,QAAQ;EAGhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,gBAAgB;EAGnC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,IAAI;EAGhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE;AACV,CAAC;AAED3B,eAAe,CAAE7V,SAAS,CAAC4H,QAAQ,CAAE;;AAIrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA5H,SAAS,CAAC4H,QAAQ,CAAChE,MAAM,GAAG;EAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EACjB,WAAW,EAAE,CAAC,CAAC;EAGf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAE,KAAK,EAAE,MAAM,CAAE;EAG9B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,IAAI;EAGhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrbf;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAGvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,EAAE;EAGX;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE;AACX,CAAC;AAEDiS,eAAe,CAAE7V,SAAS,CAAC4H,QAAQ,CAAChE,MAAM,CAAE;;AAI5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5D,SAAS,CAACiJ,MAAM,CAACD,SAAS,GAAG;EAC5B;AACD;AACA;AACA;EACC,WAAW,EAAE;IAEZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,IAAI;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,IAAI;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,IAAI;IAEf;AACF;AACA;AACA;AACA;AACA;AACA;IACE,OAAO,EAAE,IAAI;IAEb;AACF;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,EAAE,IAAI;IAErB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,IAAI;IAEjB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;AACA;IACE,OAAO,EAAE,IAAI;IAEb;AACF;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,IAAI;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,IAAI;IAEpB;AACF;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE;EACf,CAAC;EAGD;AACD;AACA;AACA;EACC,SAAS,EAAE;IACV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,IAAI;IAEjB;AACF;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,CAAC;IAEd;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,EAAE,IAAI;IAEV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,IAAI;IAEf;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,EAAE;EACP,CAAC;EAED;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE;IACZ;AACF;AACA;AACA;AACA;AACA;IACE,gBAAgB,EAAE;EACnB,CAAC;EAED;AACD;AACA;AACA;EACC,UAAU,EAAE;IACX;AACF;AACA;AACA;AACA;AACA;IACE,iBAAiB,EAAE,KAAK;IAExB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,gBAAgB,EAAE,KAAK;IAEvB;AACF;AACA;AACA;AACA;IACE,WAAW,EAAE,KAAK;IAElB;AACF;AACA;AACA;AACA;IACE,UAAU,EAAE;EACb,CAAC;EAGD,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;AACA;AACA;EACC,MAAM,EAAE,CAAC,CAAC;EAEV;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,CAAC,CAAC;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,CAAC;EAElB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAEnB;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;AACA;AACA;EACC,sBAAsB,EAAE,EAAE;EAE1B;AACD;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAEnB;AACD;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAEtB;AACD;AACA;AACA;AACA;EACC,cAAc,EAAE,KAAK;EAErB;AACD;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,EAAE;EAEhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM,EAAE,IAAI;EAEZ;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,YAAY;EAE/B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,CAAC;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;EACC,MAAM,EAAE1H,SAAS;EAEjB;AACD;AACA;AACA;AACA;EACC,WAAW,EAAEA,SAAS;EAEtB;AACD;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAEtB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,CAAC;EAEV;AACD;AACA;AACA;AACA;EACC,UAAU,EAAE,KAAK;EAEjB;AACD;AACA;AACA;AACA;EACC,YAAY,EAAE,CAAC,CAAC;EAEhB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,CAAC;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,CAAC;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAAE,CAAC;EAErB;AACD;AACA;AACA;AACA;EACC,UAAU,EAAE,CAAC,CAAC;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAElB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,KAAK;EAEhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAGvB;AACD;AACA;AACA;EACC,gBAAgB,EAAE,YAClB;IACC,OAAO2N,aAAa,CAAE,IAAI,CAAE,IAAI,KAAK,GACpC,IAAI,CAAC1D,cAAc,GAAG,CAAC,GACvB,IAAI,CAAC2E,eAAe,CAACzJ,MAAM;EAC7B,CAAC;EAED;AACD;AACA;AACA;EACC,kBAAkB,EAAE,YACpB;IACC,OAAOwI,aAAa,CAAE,IAAI,CAAE,IAAI,KAAK,GACpC,IAAI,CAAC3D,gBAAgB,GAAG,CAAC,GACzB,IAAI,CAAC2E,SAAS,CAACxJ,MAAM;EACvB,CAAC;EAED;AACD;AACA;AACA;EACC,cAAc,EAAE,YAChB;IACC,IACCD,GAAG,GAAQ,IAAI,CAACkjB,eAAe;MAC/B/W,KAAK,GAAM,IAAI,CAACzH,cAAc;MAC9B43B,IAAI,GAAOnwB,KAAK,GAAGnM,GAAG;MACtBsqB,OAAO,GAAI,IAAI,CAAC7gB,SAAS,CAACxJ,MAAM;MAChC0H,QAAQ,GAAG,IAAI,CAACxE,SAAS;MACzBs8B,QAAQ,GAAG93B,QAAQ,CAACgY,SAAS;IAE9B,IAAKhY,QAAQ,CAACkV,WAAW,EAAG;MAC3B,OAAO4iB,QAAQ,KAAK,KAAK,IAAIz/B,GAAG,KAAK,CAAC,CAAC,GACtCmM,KAAK,GAAGme,OAAO,GACfjY,IAAI,CAACqtB,GAAG,CAAEvzB,KAAK,GAACnM,GAAG,EAAE,IAAI,CAAC8E,gBAAgB,CAAE;IAC9C,CAAC,MACI;MACJ,OAAO,CAAE26B,QAAQ,IAAInD,IAAI,GAAChS,OAAO,IAAItqB,GAAG,KAAG,CAAC,CAAC,GAC5CsqB,OAAO,GACPgS,IAAI;IACN;EACD,CAAC;EAED;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;EACC,WAAW,EAAE,CAAC;EAEd;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;AACA;AACA;EACC,UAAU,EAAE,CAAC,CAAC;EAEd;AACD;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9iC,SAAS,CAAC6G,GAAG,GAAGhG,IAAI,GAAG;EACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC8vB,OAAO,EAAE,CAAC,CAAC;EAGX;AACD;AACA;AACA;AACA;AACA;EACC9lB,OAAO,EAAE,CAAC,CAAC;EAGX;AACD;AACA;AACA;AACA;EACCs7B,OAAO,EAAE,UAAU;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC9K,OAAO,EAAE,OAAO;EAGhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCxU,OAAO,EAAE,EAAE;EAGX;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCljB,MAAM,EAAE,EAAE;EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC1D,QAAQ,EAAE;IACTkE,IAAI,EAAE,EAAE;IACRP,MAAM,EAAE,EAAE;IACVvC,GAAG,EAAE;EACN,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCsF,QAAQ,EAAE,CAAC,CAAC;EAGZ;AACD;AACA;AACA;AACA;AACA;EACCujB,MAAM,EAAE;IACP;AACF;AACA;AACA;AACA;AACA;AACA;IACEze,IAAI,EAAE;EACP,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC6kB,KAAK,EAAE,CAAC,CAAC;EAGT+L,QAAQ,EAAE;IACT+J,UAAU,EAAE,CAAC,CAAC;IACd3S,MAAM,EAAE,CAAC;EACV,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC7tB,KAAK,EAAE,CAAC,CAAC;EAGT;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5B,IAAI,EAAE;IACL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEmZ,MAAM,EAAE,EAAE;IAGV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACExZ,MAAM,EAAE,CAAC,CAAC;IAGV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEiC,KAAK,EAAE,CAAC;EACT,CAAC;EAED;AACD;AACA;AACA;AACA;AACA;EACCmD,OAAO,EAAE,CAAC;EAGV;EACA;EACA;EACA;EACA;EACA;;EAEA;AACD;AACA;AACA;AACA;EACC1C,cAAc,EAAErG,SAAS,CAACqG,cAAc;EAGxC;AACD;AACA;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}